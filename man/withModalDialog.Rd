% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modal.R
\name{withModalDialog}
\alias{withModalDialog}
\title{Create a non-dismissible Modal Dialog whilst performing a long-running computation.}
\usage{
withModalDialog(expr, ..., title = NULL, size = c("m", "s", "l"),
  fade = TRUE, env = parent.frame())
}
\arguments{
\item{expr}{The work to be done. Usually some long-running computation whilst the UI should not be available (e.g. database data load),
in contrast to \code{\link{withProgress}}. Also useful for cases when "progress" cannot be well defined (i.e. not running a loop).}

\item{...}{UI elements for the body of the modal dialog box.}

\item{title}{An optional title for the dialog.}

\item{size}{One of "s" for small, "m" (the default) for medium, or "l" for large.}

\item{fade}{If FALSE, the modal dialog will have no fade-in animation (it will simply appear rather than fade in to view).}

\item{env}{The environment in which expr should be evaluated.}
}
\description{
Create a non-dismissible Modal Dialog whilst performing a long-running computation.
}
\examples{
## Only run examples in interactive R sessions
if (interactive()) {

# Show a modal message whilst a simulated long running calculation is performed
shinyApp(
  ui = basicPage(
    tags$b("Result of calculation"),
    textOutput("random_number")
  ),
  server = function(input, output) {
    output$random_number <- renderText({
      withModalDialog({
        Sys.sleep(15)
        runif(1)
      },
      tags$b("Simulating a long running calculation, please wait..."),
      title = "Generating random number")
    })
  }
)
}
}

