{
  "version": 3,
  "sources": ["globals:jquery", "../../../srcts/src/initialize/browser.ts", "../../../srcts/src/utils/browser.ts", "../../../srcts/src/utils/userAgent.ts", "../../../srcts/src/initialize/disableForm.ts", "../../../srcts/src/initialize/history.ts", "../../../srcts/src/shiny/index.ts", "../../../srcts/src/utils/index.ts", "../../../srcts/src/window/pixelRatio.ts", "../../../srcts/src/utils/object.ts", "../../../srcts/src/bindings/registry.ts", "../../../srcts/src/bindings/input/inputBinding.ts", "../../../srcts/src/bindings/input/actionbutton.ts", "../../../srcts/src/bindings/input/checkbox.ts", "../../../srcts/src/bindings/input/checkboxgroup.ts", "../../../srcts/src/bindings/input/date.ts", "../../../srcts/src/bindings/input/daterange.ts", "../../../srcts/src/bindings/input/fileinput.ts", "../../../srcts/src/file/fileProcessor.ts", "../../../srcts/src/events/inputChanged.ts", "../../../srcts/src/shiny/initedMethods.ts", "../../../srcts/src/bindings/input/number.ts", "../../../srcts/src/bindings/input/text.ts", "../../../srcts/src/bindings/input/password.ts", "../../../srcts/src/bindings/input/radio.ts", "../../../srcts/src/bindings/input/selectInput.ts", "../../../srcts/src/utils/eval.ts", "../../../srcts/src/bindings/input/slider.ts", "../../../srcts/src/bindings/input/tabinput.ts", "../../../srcts/src/bindings/input/textarea.ts", "../../../srcts/src/bindings/input/index.ts", "../../../srcts/src/bindings/output/datatable.ts", "../../../srcts/src/time/debounce.ts", "../../../srcts/src/time/invoke.ts", "../../../srcts/src/time/throttle.ts", "../../../srcts/src/bindings/output/outputBinding.ts", "../../../srcts/src/bindings/output/downloadlink.ts", "../../../srcts/src/bindings/output/html.ts", "../../../srcts/src/shiny/render.ts", "../../../srcts/src/shiny/sendImageSize.ts", "../../../srcts/src/shiny/singletons.ts", "../../../srcts/src/bindings/output/image.ts", "../../../srcts/src/imageutils/createBrush.ts", "../../../srcts/src/imageutils/initCoordmap.ts", "../../../srcts/src/imageutils/initPanelScales.ts", "../../../srcts/src/imageutils/findbox.ts", "../../../srcts/src/imageutils/shiftToRange.ts", "../../../srcts/src/imageutils/createClickInfo.ts", "../../../srcts/src/imageutils/createHandlers.ts", "../../../srcts/src/imageutils/disableDrag.ts", "../../../srcts/src/bindings/output/text.ts", "../../../srcts/src/bindings/output/index.ts", "../../../node_modules/@lit/reactive-element/src/css-tag.ts", "../../../node_modules/@lit/reactive-element/src/reactive-element.ts", "../../../node_modules/lit-html/src/lit-html.ts", "../../../node_modules/lit-element/src/lit-element.ts", "../../../srcts/src/shiny/error.ts", "../../../srcts/src/components/errorConsole.ts", "../../../srcts/src/imageutils/resetBrush.ts", "../../../srcts/src/inputPolicies/inputBatchSender.ts", "../../../srcts/src/inputPolicies/inputDeferDecorator.ts", "../../../srcts/src/inputPolicies/inputEventDecorator.ts", "../../../srcts/src/inputPolicies/splitInputNameType.ts", "../../../srcts/src/inputPolicies/inputNoResendDecorator.ts", "../../../srcts/src/inputPolicies/inputRateDecorator.ts", "../../../srcts/src/inputPolicies/inputValidateDecorator.ts", "../../../srcts/src/utils/promise.ts", "../../../srcts/src/shiny/bind.ts", "../../../srcts/src/bindings/outputAdapter.ts", "../../../srcts/src/shiny/modal.ts", "../../../srcts/src/shiny/notifications.ts", "../../../srcts/src/shiny/reconnectDialog.ts", "../../../srcts/src/shiny/shinyapp.ts", "../../../srcts/src/utils/asyncQueue.ts", "../../../srcts/src/shiny/outputProgress.ts", "../../../srcts/src/window/userAgent.ts", "../../../srcts/src/shiny/reactlog.ts", "../../../srcts/src/initialize/index.ts", "../../../srcts/src/index.ts"],
  "sourcesContent": ["module.exports = window.jQuery", "import $ from \"jquery\";\n\nimport { isIE, setIEVersion, setIsIE, setIsQt } from \"../utils/browser\";\nimport { userAgent } from \"../utils/userAgent\";\n\nfunction getIEVersion() {\n  const msie = userAgent.indexOf(\"MSIE \");\n\n  if (isIE() && msie > 0) {\n    // IE 10 or older => return version number\n    return parseInt(\n      userAgent.substring(msie + 5, userAgent.indexOf(\".\", msie)),\n      10\n    );\n  }\n  const trident = userAgent.indexOf(\"Trident/\");\n\n  if (trident > 0) {\n    // IE 11 => return version number\n    const rv = userAgent.indexOf(\"rv:\");\n\n    return parseInt(\n      userAgent.substring(rv + 3, userAgent.indexOf(\".\", rv)),\n      10\n    );\n  }\n  return -1;\n}\n\nfunction determineBrowserInfo(): void {\n  // For easy handling of Qt quirks using CSS\n\n  if (/\\bQt\\//.test(userAgent)) {\n    $(document.documentElement).addClass(\"qt\");\n    setIsQt(true);\n  } else {\n    setIsQt(false);\n  }\n\n  // For Qt on Mac. Note that the target string as of RStudio 1.4.173\n  // is \"QtWebEngine\" and does not have a trailing slash.\n  if (/\\bQt/.test(userAgent) && /\\bMacintosh/.test(userAgent)) {\n    $(document.documentElement).addClass(\"qtmac\");\n  }\n\n  // Enable special treatment for Qt 5 quirks on Linux\n  if (/\\bQt\\/5/.test(userAgent) && /Linux/.test(userAgent)) {\n    $(document.documentElement).addClass(\"qt5\");\n  }\n\n  // Detect IE and older (pre-Chromium) Edge\n  setIsIE(/MSIE|Trident|Edge/.test(userAgent));\n\n  setIEVersion(getIEVersion());\n}\n\nexport { determineBrowserInfo };\n", "let isQtVal = false;\nlet isIEVal = false;\nlet versionIE = -1;\n\nfunction setIsQt(isQt: boolean): void {\n  isQtVal = isQt;\n}\nfunction setIsIE(isIE: boolean): void {\n  isIEVal = isIE;\n}\nfunction setIEVersion(versionIE_: number): void {\n  versionIE = versionIE_;\n}\n\nfunction isQt(): boolean {\n  return isQtVal;\n}\nfunction isIE(): boolean {\n  return isIEVal;\n}\n\n// (Name existed before TS conversion)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction IEVersion(): number {\n  return versionIE;\n}\n\nexport { isQt, isIE, IEVersion, setIsQt, setIsIE, setIEVersion };\n", "type UserAgent = typeof window.navigator.userAgent;\n\nlet userAgent: UserAgent;\n\nfunction setUserAgent(userAgent_: UserAgent): void {\n  userAgent = userAgent_;\n}\n\nexport type { UserAgent };\nexport { userAgent, setUserAgent };\n", "import $ from \"jquery\";\n\nfunction disableFormSubmission(): void {\n  // disable form submissions\n  $(document).on(\"submit\", \"form:not([action])\", function (e) {\n    e.preventDefault();\n  });\n}\n\nexport { disableFormSubmission };\n", "import $ from \"jquery\";\n\nfunction trackHistory(): void {\n  const origPushState = window.history.pushState;\n\n  window.history.pushState = function (...args) {\n    const result = origPushState.apply(this, args);\n\n    $(document).trigger(\"pushstate\");\n    return result;\n  };\n}\n\nexport { trackHistory };\n", "import $ from \"jquery\";\n\nimport { InputBinding, OutputBinding } from \"../bindings\";\nimport { initInputBindings } from \"../bindings/input\";\nimport { initOutputBindings } from \"../bindings/output\";\nimport type { BindingRegistry } from \"../bindings/registry\";\nimport { showErrorInClientConsole } from \"../components/errorConsole\";\nimport { resetBrush } from \"../imageutils/resetBrush\";\nimport type { InputPolicy } from \"../inputPolicies\";\nimport {\n  InputBatchSender,\n  InputDeferDecorator,\n  InputEventDecorator,\n  InputNoResendDecorator,\n  InputRateDecorator,\n  InputValidateDecorator,\n} from \"../inputPolicies\";\nimport type { InputPolicyOpts } from \"../inputPolicies/inputPolicy\";\nimport { addDefaultInputOpts } from \"../inputPolicies/inputValidateDecorator\";\nimport { debounce, Debouncer } from \"../time\";\nimport {\n  $escape,\n  compareVersion,\n  getBoundingClientSizeBeforeZoom,\n  getComputedLinkColor,\n  getStyle,\n  hasDefinedProperty,\n  mapValues,\n  pixelRatio,\n} from \"../utils\";\nimport { createInitStatus, type InitStatusPromise } from \"../utils/promise\";\nimport type { BindInputsCtx, BindScope } from \"./bind\";\nimport { bindAll, unbindAll, _bindAll } from \"./bind\";\nimport type {\n  shinyBindAll,\n  shinyForgetLastInputValue,\n  shinyInitializeInputs,\n  shinySetInputValue,\n  shinyUnbindAll,\n} from \"./initedMethods\";\nimport { setFileInputBinding, setShinyObj } from \"./initedMethods\";\nimport { removeModal, showModal } from \"./modal\";\nimport { removeNotification, showNotification } from \"./notifications\";\nimport { hideReconnectDialog, showReconnectDialog } from \"./reconnectDialog\";\nimport {\n  registerDependency,\n  renderContent,\n  renderContentAsync,\n  renderDependencies,\n  renderDependenciesAsync,\n  renderHtml,\n  renderHtmlAsync,\n} from \"./render\";\nimport { sendImageSizeFns } from \"./sendImageSize\";\nimport { addCustomMessageHandler, ShinyApp, type Handler } from \"./shinyapp\";\nimport { registerNames as singletonsRegisterNames } from \"./singletons\";\n\nclass ShinyClass {\n  version: string;\n  $escape: typeof $escape;\n  compareVersion: typeof compareVersion;\n  inputBindings: BindingRegistry<InputBinding>;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  InputBinding: typeof InputBinding;\n  outputBindings: BindingRegistry<OutputBinding>;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  OutputBinding: typeof OutputBinding;\n  resetBrush: typeof resetBrush;\n  notifications: {\n    show: typeof showNotification;\n    remove: typeof removeNotification;\n  };\n  modal: { show: typeof showModal; remove: typeof removeModal };\n  showReconnectDialog: typeof showReconnectDialog;\n  hideReconnectDialog: typeof hideReconnectDialog;\n  renderDependenciesAsync: typeof renderDependenciesAsync;\n  renderDependencies: typeof renderDependencies;\n  renderContentAsync: typeof renderContentAsync;\n  renderContent: typeof renderContent;\n  renderHtmlAsync: typeof renderHtmlAsync;\n  renderHtml: typeof renderHtml;\n  addCustomMessageHandler: typeof addCustomMessageHandler;\n\n  // The following are added in the initialization, by initShiny()\n  createSocket?: () => WebSocket;\n  user?: string;\n  progressHandlers?: ShinyApp[\"progressHandlers\"];\n  shinyapp?: ShinyApp;\n  setInputValue?: typeof shinySetInputValue;\n  onInputChange?: typeof shinySetInputValue;\n  forgetLastInputValue?: typeof shinyForgetLastInputValue;\n  bindAll?: typeof shinyBindAll;\n  unbindAll?: typeof shinyUnbindAll;\n  initializeInputs?: typeof shinyInitializeInputs;\n\n  // Promise-like object that is resolved after initialization.\n  initializedPromise: InitStatusPromise<void>;\n\n  // Eventually deprecate\n  // For old-style custom messages - should deprecate and migrate to new\n  oncustommessage?: Handler;\n\n  constructor() {\n    // `process.env.SHINY_VERSION` is overwritten to the Shiny version at build time.\n    // During testing, the `Shiny.version` will be `\"development\"`\n    this.version = process.env.SHINY_VERSION || \"development\";\n\n    const { inputBindings, fileInputBinding } = initInputBindings();\n    const { outputBindings } = initOutputBindings();\n\n    setFileInputBinding(fileInputBinding);\n\n    this.$escape = $escape;\n    this.compareVersion = compareVersion;\n    this.inputBindings = inputBindings;\n    this.InputBinding = InputBinding;\n    this.outputBindings = outputBindings;\n    this.OutputBinding = OutputBinding;\n    this.resetBrush = resetBrush;\n    this.notifications = {\n      show: showNotification,\n      remove: removeNotification,\n    };\n    this.modal = { show: showModal, remove: removeModal };\n\n    this.addCustomMessageHandler = addCustomMessageHandler;\n    this.showReconnectDialog = showReconnectDialog;\n    this.hideReconnectDialog = hideReconnectDialog;\n    this.renderDependenciesAsync = renderDependenciesAsync;\n    this.renderDependencies = renderDependencies;\n    this.renderContentAsync = renderContentAsync;\n    this.renderContent = renderContent;\n    this.renderHtmlAsync = renderHtmlAsync;\n    this.renderHtml = renderHtml;\n\n    this.initializedPromise = createInitStatus<void>();\n\n    $(() => {\n      // Init Shiny a little later than document ready, so user code can\n      // run first (i.e. to register bindings)\n      setTimeout(async () => {\n        try {\n          await this.initialize();\n        } catch (e) {\n          showErrorInClientConsole(e);\n          throw e;\n        }\n      }, 1);\n    });\n  }\n\n  /**\n   * Method to check if Shiny is running in development mode. By packaging as a\n   * method, we can we can avoid needing to look for the `__SHINY_DEV_MODE__`\n   * variable in the global scope.\n   * @returns `true` if Shiny is running in development mode, `false` otherwise.\n   */\n  inDevMode(): boolean {\n    if (\"__SHINY_DEV_MODE__\" in window)\n      return Boolean(window.__SHINY_DEV_MODE__);\n\n    return false;\n  }\n\n  async initialize(): Promise<void> {\n    setShinyObj(this);\n    this.shinyapp = new ShinyApp();\n    const shinyapp = this.shinyapp;\n\n    this.progressHandlers = shinyapp.progressHandlers;\n\n    const inputBatchSender = new InputBatchSender(shinyapp);\n    const inputsNoResend = new InputNoResendDecorator(inputBatchSender);\n    const inputsEvent = new InputEventDecorator(inputsNoResend);\n    const inputsRate = new InputRateDecorator(inputsEvent);\n    const inputsDefer = new InputDeferDecorator(inputsEvent);\n\n    let target: InputPolicy;\n\n    if ($('input[type=\"submit\"], button[type=\"submit\"]').length > 0) {\n      // If there is a submit button on the page, use defer decorator\n      target = inputsDefer;\n\n      $('input[type=\"submit\"], button[type=\"submit\"]').each(function () {\n        $(this).click(function (event) {\n          event.preventDefault();\n          inputsDefer.submit();\n        });\n      });\n    } else {\n      // By default, use rate decorator\n      target = inputsRate;\n    }\n\n    const inputs = new InputValidateDecorator(target);\n\n    this.setInputValue = this.onInputChange = function (\n      name: string,\n      value: unknown,\n      opts: Partial<InputPolicyOpts> = {}\n    ): void {\n      const newOpts = addDefaultInputOpts(opts);\n\n      inputs.setInput(name, value, newOpts);\n    };\n\n    // By default, Shiny deduplicates input value changes; that is, if\n    // `setInputValue` is called with the same value as the input already\n    // has, the call is ignored (unless opts.priority = \"event\"). Calling\n    // `forgetLastInputValue` tells Shiny that the very next call to\n    // `setInputValue` for this input id shouldn't be ignored, even if it\n    // is a dupe of the existing value.\n    this.forgetLastInputValue = function (name) {\n      inputsNoResend.forget(name);\n    };\n\n    // MUST be called after `setShiny()`\n    const inputBindings = this.inputBindings;\n    const outputBindings = this.outputBindings;\n\n    function shinyBindCtx(): BindInputsCtx {\n      return {\n        inputs,\n        inputsRate,\n        sendOutputHiddenState,\n        maybeAddThemeObserver,\n        inputBindings,\n        outputBindings,\n        initDeferredIframes,\n      };\n    }\n\n    this.bindAll = async function (scope: BindScope) {\n      await bindAll(shinyBindCtx(), scope);\n    };\n    this.unbindAll = function (scope: BindScope, includeSelf = false) {\n      unbindAll(shinyBindCtx(), scope, includeSelf);\n    };\n\n    // Calls .initialize() for all of the input objects in all input bindings,\n    // in the given scope.\n    function initializeInputs(scope: BindScope = document.documentElement) {\n      const bindings = inputBindings.getBindings();\n\n      // Iterate over all bindings\n      for (let i = 0; i < bindings.length; i++) {\n        const binding = bindings[i].binding;\n        const inputObjects = binding.find(scope);\n\n        if (inputObjects) {\n          // Iterate over all input objects for this binding\n          for (let j = 0; j < inputObjects.length; j++) {\n            const $inputObjectJ = $(inputObjects[j]);\n\n            if (!$inputObjectJ.data(\"_shiny_initialized\")) {\n              $inputObjectJ.data(\"_shiny_initialized\", true);\n              binding.initialize(inputObjects[j]);\n            }\n          }\n        }\n      }\n    }\n    this.initializeInputs = initializeInputs;\n\n    function getIdFromEl(el: HTMLElement) {\n      const $el = $(el);\n      const bindingAdapter = $el.data(\"shiny-output-binding\");\n\n      if (!bindingAdapter) return null;\n      else return bindingAdapter.getId();\n    }\n\n    // Initialize all input objects in the document, before binding\n    initializeInputs(document.documentElement);\n\n    // The input values returned by _bindAll() each have a structure like this:\n    //   { value: 123, opts: { ... } }\n    // We want to only keep the value. This is because when the initialValues is\n    // passed to ShinyApp.connect(), the ShinyApp object stores the\n    // initialValues object for the duration of the session, and the opts may\n    // have a reference to the DOM element, which would prevent it from being\n    // GC'd.\n    const initialValues = mapValues(\n      await _bindAll(shinyBindCtx(), document.documentElement),\n      (x) => x.value\n    );\n\n    // The server needs to know the size of each image and plot output element,\n    // in case it is auto-sizing\n    $(\".shiny-image-output, .shiny-plot-output, .shiny-report-size\").each(\n      function () {\n        const id = getIdFromEl(this),\n          rect = getBoundingClientSizeBeforeZoom(this);\n\n        if (rect.width !== 0 || rect.height !== 0) {\n          initialValues[\".clientdata_output_\" + id + \"_width\"] = rect.width;\n          initialValues[\".clientdata_output_\" + id + \"_height\"] = rect.height;\n        }\n      }\n    );\n\n    function getComputedBgColor(\n      el: HTMLElement | null\n    ): string | null | undefined {\n      if (!el) {\n        // Top of document, can't recurse further\n        return null;\n      }\n\n      const bgColor = getStyle(el, \"background-color\");\n\n      if (!bgColor) return bgColor;\n      const m = bgColor.match(\n        /^rgba\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*\\)$/\n      );\n\n      if (bgColor === \"transparent\" || (m && parseFloat(m[4]) === 0)) {\n        // No background color on this element. See if it has a background image.\n        const bgImage = getStyle(el, \"background-image\");\n\n        if (bgImage && bgImage !== \"none\") {\n          // Failed to detect background color, since it has a background image\n          return null;\n        } else {\n          // Recurse\n          return getComputedBgColor(el.parentElement);\n        }\n      }\n      return bgColor;\n    }\n\n    function getComputedFont(el: HTMLElement) {\n      const fontFamily = getStyle(el, \"font-family\");\n      const fontSize = getStyle(el, \"font-size\");\n\n      return {\n        families: fontFamily?.replace(/\"/g, \"\").split(\", \"),\n        size: fontSize,\n      };\n    }\n\n    $(\".shiny-image-output, .shiny-plot-output, .shiny-report-theme\").each(\n      function () {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const el = this;\n        const id = getIdFromEl(el);\n\n        initialValues[\".clientdata_output_\" + id + \"_bg\"] =\n          getComputedBgColor(el);\n        initialValues[\".clientdata_output_\" + id + \"_fg\"] = getStyle(\n          el,\n          \"color\"\n        );\n        initialValues[\".clientdata_output_\" + id + \"_accent\"] =\n          getComputedLinkColor(el);\n        initialValues[\".clientdata_output_\" + id + \"_font\"] =\n          getComputedFont(el);\n        maybeAddThemeObserver(el);\n      }\n    );\n\n    // Resend computed styles if *an output element's* class or style attribute changes.\n    // This gives us some level of confidence that getCurrentOutputInfo() will be\n    // properly invalidated if output container is mutated; but unfortunately,\n    // we don't have a reasonable way to detect change in *inherited* styles\n    // (other than session$setCurrentTheme())\n    // https://github.com/rstudio/shiny/issues/3196\n    // https://github.com/rstudio/shiny/issues/2998\n    function maybeAddThemeObserver(el: HTMLElement): void {\n      if (!window.MutationObserver) {\n        return; // IE10 and lower\n      }\n\n      const cl = el.classList;\n      const reportTheme =\n        cl.contains(\"shiny-image-output\") ||\n        cl.contains(\"shiny-plot-output\") ||\n        cl.contains(\"shiny-report-theme\");\n\n      if (!reportTheme) {\n        return;\n      }\n\n      const $el = $(el);\n\n      if ($el.data(\"shiny-theme-observer\")) {\n        return; // i.e., observer is already observing\n      }\n\n      const observerCallback = new Debouncer(null, () => doSendTheme(el), 100);\n      const observer = new MutationObserver(() =>\n        observerCallback.normalCall()\n      );\n      const config = { attributes: true, attributeFilter: [\"style\", \"class\"] };\n\n      observer.observe(el, config);\n      $el.data(\"shiny-theme-observer\", observer);\n    }\n\n    function doSendTheme(el: HTMLElement): void {\n      // Sending theme info on error isn't necessary (it'd add an unnecessary additional round-trip)\n      if (el.classList.contains(\"shiny-output-error\")) {\n        return;\n      }\n      const id = getIdFromEl(el);\n\n      inputs.setInput(\n        \".clientdata_output_\" + id + \"_bg\",\n        getComputedBgColor(el)\n      );\n      inputs.setInput(\n        \".clientdata_output_\" + id + \"_fg\",\n        getStyle(el, \"color\")\n      );\n      inputs.setInput(\n        \".clientdata_output_\" + id + \"_accent\",\n        getComputedLinkColor(el)\n      );\n      inputs.setInput(\n        \".clientdata_output_\" + id + \"_font\",\n        getComputedFont(el)\n      );\n    }\n\n    function doSendImageSize() {\n      $(\".shiny-image-output, .shiny-plot-output, .shiny-report-size\").each(\n        function () {\n          const id = getIdFromEl(this),\n            rect = getBoundingClientSizeBeforeZoom(this);\n\n          if (rect.width !== 0 || rect.height !== 0) {\n            inputs.setInput(\".clientdata_output_\" + id + \"_width\", rect.width);\n            inputs.setInput(\n              \".clientdata_output_\" + id + \"_height\",\n              rect.height\n            );\n          }\n        }\n      );\n\n      $(\".shiny-image-output, .shiny-plot-output, .shiny-report-theme\").each(\n        function () {\n          doSendTheme(this);\n        }\n      );\n\n      $(\".shiny-bound-output\").each(function () {\n        const $this = $(this),\n          binding = $this.data(\"shiny-output-binding\");\n\n        $this.trigger({\n          type: \"shiny:visualchange\",\n          // @ts-expect-error; Can not remove info on a established, malformed Event object\n          visible: !isHidden(this),\n          binding: binding,\n        });\n        binding.onResize();\n      });\n    }\n\n    sendImageSizeFns.setImageSend(inputBatchSender, doSendImageSize);\n\n    // Return true if the object or one of its ancestors in the DOM tree has\n    // style='display:none'; otherwise return false.\n    function isHidden(obj: HTMLElement | null): boolean {\n      // null means we've hit the top of the tree. If width or height is\n      // non-zero, then we know that no ancestor has display:none.\n      if (obj === null || obj.offsetWidth !== 0 || obj.offsetHeight !== 0) {\n        return false;\n      } else if (getStyle(obj, \"display\") === \"none\") {\n        return true;\n      } else {\n        return isHidden(obj.parentNode as HTMLElement | null);\n      }\n    }\n    let lastKnownVisibleOutputs: { [key: string]: boolean } = {};\n    // Set initial state of outputs to hidden, if needed\n\n    $(\".shiny-bound-output\").each(function () {\n      const id = getIdFromEl(this);\n\n      if (isHidden(this)) {\n        initialValues[\".clientdata_output_\" + id + \"_hidden\"] = true;\n      } else {\n        lastKnownVisibleOutputs[id] = true;\n        initialValues[\".clientdata_output_\" + id + \"_hidden\"] = false;\n      }\n    });\n    // Send update when hidden state changes\n    function doSendOutputHiddenState() {\n      const visibleOutputs: { [key: string]: boolean } = {};\n\n      $(\".shiny-bound-output\").each(function () {\n        const id = getIdFromEl(this);\n\n        delete lastKnownVisibleOutputs[id];\n        // Assume that the object is hidden when width and height are 0\n        const hidden = isHidden(this),\n          evt = {\n            type: \"shiny:visualchange\",\n            visible: !hidden,\n          };\n\n        if (hidden) {\n          inputs.setInput(\".clientdata_output_\" + id + \"_hidden\", true);\n        } else {\n          visibleOutputs[id] = true;\n          inputs.setInput(\".clientdata_output_\" + id + \"_hidden\", false);\n        }\n        const $this = $(this);\n\n        // @ts-expect-error; Can not remove info on a established, malformed Event object\n        evt.binding = $this.data(\"shiny-output-binding\");\n        // @ts-expect-error; Can not remove info on a established, malformed Event object\n        $this.trigger(evt);\n      });\n      // Anything left in lastKnownVisibleOutputs is orphaned\n      for (const name in lastKnownVisibleOutputs) {\n        if (hasDefinedProperty(lastKnownVisibleOutputs, name))\n          inputs.setInput(\".clientdata_output_\" + name + \"_hidden\", true);\n      }\n      // Update the visible outputs for next time\n      lastKnownVisibleOutputs = visibleOutputs;\n    }\n    // sendOutputHiddenState gets called each time DOM elements are shown or\n    // hidden. This can be in the hundreds or thousands of times at startup.\n    // We'll debounce it, so that we do the actual work once per tick.\n    const sendOutputHiddenStateDebouncer = new Debouncer(\n      null,\n      doSendOutputHiddenState,\n      0\n    );\n\n    function sendOutputHiddenState() {\n      sendOutputHiddenStateDebouncer.normalCall();\n    }\n    // We need to make sure doSendOutputHiddenState actually gets called before\n    // the inputBatchSender sends data to the server. The lastChanceCallback\n    // here does that - if the debouncer has a pending call, flush it.\n    inputBatchSender.lastChanceCallback.push(function () {\n      if (sendOutputHiddenStateDebouncer.isPending())\n        sendOutputHiddenStateDebouncer.immediateCall();\n    });\n\n    // Given a namespace and a handler function, return a function that invokes\n    // the handler only when e's namespace matches. For example, if the\n    // namespace is \"bs\", it would match when e.namespace is \"bs\" or \"bs.tab\".\n    // If the namespace is \"bs.tab\", it would match for \"bs.tab\", but not \"bs\".\n    function filterEventsByNamespace(\n      namespace: string,\n      handler: (...handlerArgs: any[]) => void,\n      ...args: any[]\n    ) {\n      const namespaceArr = namespace.split(\".\");\n\n      return function (this: HTMLElement, e: JQuery.TriggeredEvent) {\n        const eventNamespace = e.namespace?.split(\".\") ?? [];\n\n        // If any of the namespace strings aren't present in this event, quit.\n        for (let i = 0; i < namespaceArr.length; i++) {\n          if (eventNamespace.indexOf(namespaceArr[i]) === -1) return;\n        }\n\n        handler.apply(this, [namespaceArr, handler, ...args]);\n      };\n    }\n\n    // The size of each image may change either because the browser window was\n    // resized, or because a tab was shown/hidden (hidden elements report size\n    // of 0x0). It's OK to over-report sizes because the input pipeline will\n    // filter out values that haven't changed.\n    $(window).resize(debounce(500, sendImageSizeFns.regular));\n    // Need to register callbacks for each Bootstrap 3 class.\n    const bs3classes = [\n      \"modal\",\n      \"dropdown\",\n      \"tab\",\n      \"tooltip\",\n      \"popover\",\n      \"collapse\",\n    ];\n\n    $.each(bs3classes, function (idx, classname) {\n      $(document.body).on(\n        \"shown.bs.\" + classname + \".sendImageSize\",\n        \"*\",\n        filterEventsByNamespace(\"bs\", sendImageSizeFns.regular)\n      );\n      $(document.body).on(\n        \"shown.bs.\" +\n          classname +\n          \".sendOutputHiddenState \" +\n          \"hidden.bs.\" +\n          classname +\n          \".sendOutputHiddenState\",\n        \"*\",\n        filterEventsByNamespace(\"bs\", sendOutputHiddenState)\n      );\n    });\n\n    // This is needed for Bootstrap 2 compatibility and for non-Bootstrap\n    // related shown/hidden events (like conditionalPanel)\n    $(document.body).on(\"shown.sendImageSize\", \"*\", sendImageSizeFns.regular);\n    $(document.body).on(\n      \"shown.sendOutputHiddenState hidden.sendOutputHiddenState\",\n      \"*\",\n      sendOutputHiddenState\n    );\n\n    // Send initial pixel ratio, and update it if it changes\n    initialValues[\".clientdata_pixelratio\"] = pixelRatio();\n    $(window).resize(function () {\n      inputs.setInput(\".clientdata_pixelratio\", pixelRatio());\n    });\n\n    // Send initial URL\n    initialValues[\".clientdata_url_protocol\"] = window.location.protocol;\n    initialValues[\".clientdata_url_hostname\"] = window.location.hostname;\n    initialValues[\".clientdata_url_port\"] = window.location.port;\n    initialValues[\".clientdata_url_pathname\"] = window.location.pathname;\n\n    // Send initial URL search (query string) and update it if it changes\n    initialValues[\".clientdata_url_search\"] = window.location.search;\n\n    $(window).on(\"pushstate\", function (e) {\n      inputs.setInput(\".clientdata_url_search\", window.location.search);\n      return;\n      e;\n    });\n\n    $(window).on(\"popstate\", function (e) {\n      inputs.setInput(\".clientdata_url_search\", window.location.search);\n      return;\n      e;\n    });\n\n    // This is only the initial value of the hash. The hash can change, but\n    // a reactive version of this isn't sent because watching for changes can\n    // require polling on some browsers. The JQuery hashchange plugin can be\n    // used if this capability is important.\n    initialValues[\".clientdata_url_hash_initial\"] = window.location.hash;\n    initialValues[\".clientdata_url_hash\"] = window.location.hash;\n\n    $(window).on(\"hashchange\", function (e) {\n      inputs.setInput(\".clientdata_url_hash\", window.location.hash);\n      return;\n      e;\n    });\n\n    // The server needs to know what singletons were rendered as part of\n    // the page loading\n    const singletonText = (initialValues[\".clientdata_singletons\"] = $(\n      'script[type=\"application/shiny-singletons\"]'\n    ).text());\n\n    singletonsRegisterNames(singletonText.split(/,/));\n\n    const dependencyText = $(\n      'script[type=\"application/html-dependencies\"]'\n    ).text();\n\n    $.each(dependencyText.split(/;/), function (i, depStr) {\n      const match = /\\s*^(.+)\\[(.+)\\]\\s*$/.exec(depStr);\n\n      if (match) {\n        registerDependency(match[1], match[2]);\n      }\n    });\n\n    // We've collected all the initial values--start the server process!\n    inputsNoResend.reset(initialValues);\n    shinyapp.connect(initialValues);\n    $(document).one(\"shiny:connected\", () => {\n      initDeferredIframes();\n    });\n\n    $(document).one(\"shiny:sessioninitialized\", () => {\n      this.initializedPromise.resolve();\n    });\n  }\n}\n\n// Give any deferred iframes a chance to load.\nfunction initDeferredIframes(): void {\n  // TODO-barret; This method uses `window.Shiny`. Could be replaced with `fullShinyObj_.shinyapp?.isConnected()`,\n  // but that would not use `window.Shiny`. Is it a problem???\n  if (\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore; Do not want to define `window.Shiny` as a type to discourage usage of `window.Shiny`;\n    // Can not expect error when combining with window available Shiny definition\n    !window.Shiny ||\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore; Do not want to define `window.Shiny` as a type to discourage usage of `window.Shiny`;\n    // Can not expect error when combining with window available Shiny definition\n    !window.Shiny.shinyapp ||\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore; Do not want to define `window.Shiny` as a type to discourage usage of `window.Shiny`;\n    // Can not expect error when combining with window available Shiny definition\n    !window.Shiny.shinyapp.isConnected()\n  ) {\n    // If somehow we accidentally call this before the server connection is\n    // established, just ignore the call. At the time of this writing it\n    // doesn't happen, but it's easy to imagine a later refactoring putting\n    // us in this situation and it'd be hard to notice with either manual\n    // testing or automated tests, because the only effect is on HTTP request\n    // timing. (Update: Actually Aron saw this being called without even\n    // window.Shiny being defined, but it was hard to repro.)\n    return;\n  }\n\n  $(\".shiny-frame-deferred\").each(function (i, el) {\n    const $el = $(el);\n\n    $el.removeClass(\"shiny-frame-deferred\");\n    // @ts-expect-error; If it is undefined, set using the undefined value\n    $el.attr(\"src\", $el.attr(\"data-deferred-src\"));\n    $el.attr(\"data-deferred-src\", null);\n  });\n}\n\nexport { ShinyClass };\n", "import $ from \"jquery\";\nimport { windowDevicePixelRatio } from \"../window/pixelRatio\";\nimport type { MapValuesUnion, MapWithResult } from \"./extraTypes\";\nimport { hasDefinedProperty, hasOwnProperty } from \"./object\";\n\nfunction escapeHTML(str: string): string {\n  /* eslint-disable @typescript-eslint/naming-convention */\n  const escaped: { [key: string]: string } = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    // eslint-disable-next-line prettier/prettier\n    '\"': \"&quot;\",\n    \"'\": \"&#039;\",\n    \"/\": \"&#x2F;\",\n  };\n  /* eslint-enable @typescript-eslint/naming-convention */\n\n  return str.replace(/[&<>'\"/]/g, function (m) {\n    return escaped[m] as string;\n  });\n}\n\nfunction randomId(): string {\n  return Math.floor(0x100000000 + Math.random() * 0xf00000000).toString(16);\n}\n\nfunction strToBool(str: string): boolean | undefined {\n  if (!str || !str.toLowerCase) return undefined;\n\n  switch (str.toLowerCase()) {\n    case \"true\":\n      return true;\n    case \"false\":\n      return false;\n    default:\n      return undefined;\n  }\n}\n\n// A wrapper for getComputedStyle that is compatible with older browsers.\n// This is significantly faster than jQuery's .css() function.\nfunction getStyle(el: Element, styleProp: string): string | undefined {\n  let x = undefined;\n\n  if (\"currentStyle\" in el) {\n    // @ts-expect-error; Old, IE 5+ attribute only - https://developer.mozilla.org/en-US/docs/Web/API/Element/currentStyle\n    x = el.currentStyle[styleProp];\n  } else {\n    // getComputedStyle can return null when we're inside a hidden iframe on\n    // Firefox; don't attempt to retrieve style props in this case.\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    const style = document?.defaultView?.getComputedStyle(el, null);\n\n    if (style) x = style.getPropertyValue(styleProp);\n  }\n  return x;\n}\n\n// Convert a number to a string with leading zeros\nfunction padZeros(n: number, digits: number): string {\n  let str = n.toString();\n\n  while (str.length < digits) str = \"0\" + str;\n  return str;\n}\n\n// Round to a specified number of significant digits.\nfunction roundSignif(x: number, digits = 1): number {\n  if (digits < 1) throw \"Significant digits must be at least 1.\";\n\n  // This converts to a string and back to a number, which is inelegant, but\n  // is less prone to FP rounding error than an alternate method which used\n  // Math.round().\n  return parseFloat(x.toPrecision(digits));\n}\n\n// Take a string with format \"YYYY-MM-DD\" and return a Date object.\n// IE8 and QTWebKit don't support YYYY-MM-DD, but they support YYYY/MM/DD\nfunction parseDate(dateString: string): Date {\n  let date = new Date(dateString);\n\n  if (date.toString() === \"Invalid Date\") {\n    date = new Date(dateString.replace(/-/g, \"/\"));\n  }\n  return date;\n}\n\n// Given a Date object, return a string in yyyy-mm-dd format, using the\n// UTC date. This may be a day off from the date in the local time zone.\nfunction formatDateUTC(x: Date): string;\nfunction formatDateUTC(date: Date | null): string | null {\n  if (date instanceof Date) {\n    return (\n      date.getUTCFullYear() +\n      \"-\" +\n      padZeros(date.getUTCMonth() + 1, 2) +\n      \"-\" +\n      padZeros(date.getUTCDate(), 2)\n    );\n  } else {\n    return null;\n  }\n}\n\n// Given an element and a function(width, height), returns a function(). When\n// the output function is called, it calls the input function with the offset\n// width and height of the input element--but only if the size of the element\n// is non-zero and the size is different than the last time the output\n// function was called.\n//\n// Basically we are trying to filter out extraneous calls to func, so that\n// when the window size changes or whatever, we don't run resize logic for\n// elements that haven't actually changed size or aren't visible anyway.\ntype LastSizeInterface = {\n  w?: number;\n  h?: number;\n};\nfunction makeResizeFilter(\n  el: HTMLElement,\n  func: (\n    width: HTMLElement[\"offsetWidth\"],\n    height: HTMLElement[\"offsetHeight\"]\n  ) => void\n): () => void {\n  let lastSize: LastSizeInterface = {};\n\n  return function () {\n    const rect = el.getBoundingClientRect();\n    const size = { w: rect.width, h: rect.height };\n\n    if (size.w === 0 && size.h === 0) return;\n    if (size.w === lastSize.w && size.h === lastSize.h) return;\n    lastSize = size;\n    func(size.w, size.h);\n  };\n}\n\nfunction pixelRatio(): number {\n  if (windowDevicePixelRatio()) {\n    return Math.round(windowDevicePixelRatio() * 100) / 100;\n  } else {\n    return 1;\n  }\n}\n\nfunction getBoundingClientSizeBeforeZoom(el: HTMLElement): {\n  width: number;\n  height: number;\n} {\n  const rect = el.getBoundingClientRect();\n  // Cast to any because currentCSSZoom isn't in the type def of HTMLElement\n  // TODO: typescript >= 5.5.2 added this property to the type definition\n  const zoom = (el as any).currentCSSZoom || 1;\n  return {\n    width: rect.width / zoom,\n    height: rect.height / zoom,\n  };\n}\n\n// Takes a string expression and returns a function that takes an argument.\n//\n// When the function is executed, it will evaluate that expression using\n// \"with\" on the argument value, and return the result.\nfunction scopeExprToFunc(expr: string): (scope: unknown) => unknown {\n  /*jshint evil: true */\n  const exprEscaped = expr\n    .replace(/[\\\\\"']/g, \"\\\\$&\")\n    // eslint-disable-next-line no-control-regex\n    .replace(/\\u0000/g, \"\\\\0\")\n    .replace(/\\n/g, \"\\\\n\")\n    .replace(/\\r/g, \"\\\\r\")\n    // \\b has a special meaning; need [\\b] to match backspace char.\n    .replace(/[\\b]/g, \"\\\\b\");\n\n  let func: () => unknown;\n\n  try {\n    // @ts-expect-error; Do not know how to type this _dangerous_ situation\n    func = new Function(\n      `with (this) {\n        try {\n          return (${expr});\n        } catch (e) {\n          console.error('Error evaluating expression: ${exprEscaped}');\n          throw e;\n        }\n      }`\n    );\n  } catch (e) {\n    console.error(\"Error parsing expression: \" + expr);\n    throw e;\n  }\n\n  return function (scope: unknown): unknown {\n    return func.call(scope);\n  };\n}\n\nfunction asArray<T>(value: T | T[] | null | undefined): T[] {\n  if (value === null || value === undefined) return [];\n  if (Array.isArray(value)) return value;\n  return [value];\n}\n\n// We need a stable sorting algorithm for ordering\n// bindings by priority and insertion order.\nfunction mergeSort<Item>(\n  list: Item[],\n  sortfunc: (a: Item, b: Item) => boolean | number\n): Item[] {\n  function merge(a: Item[], b: Item[]) {\n    let ia = 0;\n    let ib = 0;\n    const sorted = [];\n\n    while (ia < a.length && ib < b.length) {\n      if (sortfunc(a[ia], b[ib]) <= 0) {\n        sorted.push(a[ia++]);\n      } else {\n        sorted.push(b[ib++]);\n      }\n    }\n    while (ia < a.length) sorted.push(a[ia++]);\n    while (ib < b.length) sorted.push(b[ib++]);\n    return sorted;\n  }\n\n  // Don't mutate list argument\n  list = list.slice(0);\n\n  for (let chunkSize = 1; chunkSize < list.length; chunkSize *= 2) {\n    for (let i = 0; i < list.length; i += chunkSize * 2) {\n      const listA = list.slice(i, i + chunkSize);\n      const listB = list.slice(i + chunkSize, i + chunkSize * 2);\n      const merged = merge(listA, listB);\n      const args = [i, merged.length] as [number, number];\n\n      Array.prototype.push.apply(args, merged);\n      Array.prototype.splice.apply(list, args);\n    }\n  }\n\n  return list;\n}\n\n// Escape jQuery selector metacharacters: !\"#$%&'()*+,./:;<=>?@[\\]^`{|}~\nfunction $escape(val: undefined): undefined;\nfunction $escape(val: string): string;\nfunction $escape(val: string | undefined): string | undefined {\n  if (typeof val === \"undefined\") return val;\n  return val.replace(/([!\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~])/g, \"\\\\$1\");\n}\n\n// Maps a function over an object, preserving keys. Like the mapValues\n// function from lodash.\nfunction mapValues<T extends { [key: string]: any }, R>(\n  obj: T,\n  f: (value: MapValuesUnion<T>, key: string, object: typeof obj) => R\n): MapWithResult<T, R> {\n  const newObj = {} as MapWithResult<T, R>;\n\n  Object.keys(obj).forEach((key: keyof typeof obj) => {\n    newObj[key] = f(obj[key], key as string, obj);\n  });\n  return newObj;\n}\n\n// This is does the same as Number.isNaN, but that function unfortunately does\n// not exist in any version of IE.\nfunction isnan(x: unknown): boolean {\n  return typeof x === \"number\" && isNaN(x);\n}\n\n// Binary equality function used by the equal function.\n// (Name existed before TS conversion)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction _equal(x: unknown, y: unknown): boolean {\n  if ($.type(x) === \"object\" && $.type(y) === \"object\") {\n    const xo = x as { [key: string]: unknown };\n    const yo = y as { [key: string]: unknown };\n\n    if (Object.keys(xo).length !== Object.keys(yo).length) return false;\n    for (const prop in xo) {\n      if (!hasOwnProperty(yo, prop) || !_equal(xo[prop], yo[prop]))\n        return false;\n    }\n    return true;\n  } else if ($.type(x) === \"array\" && $.type(y) === \"array\") {\n    const xa = x as unknown[];\n    const ya = y as unknown[];\n\n    if (xa.length !== ya.length) return false;\n    for (let i = 0; i < xa.length; i++) if (!_equal(xa[i], ya[i])) return false;\n    return true;\n  } else {\n    return x === y;\n  }\n}\n\n// Structural or \"deep\" equality predicate. Tests two or more arguments for\n// equality, traversing arrays and objects (as determined by $.type) as\n// necessary.\n//\n// Objects other than objects and arrays are tested for equality using ===.\nfunction equal(...args: unknown[]): boolean {\n  if (args.length < 2)\n    throw new Error(\"equal requires at least two arguments.\");\n  for (let i = 0; i < args.length - 1; i++) {\n    if (!_equal(args[i], args[i + 1])) return false;\n  }\n  return true;\n}\n\n// Compare version strings like \"1.0.1\", \"1.4-2\". `op` must be a string like\n// \"==\" or \"<\".\nconst compareVersion = function (\n  a: string,\n  op: \"<\" | \"<=\" | \"==\" | \">\" | \">=\",\n  b: string\n): boolean {\n  function versionParts(ver: string) {\n    return (ver + \"\")\n      .replace(/-/, \".\")\n      .replace(/(\\.0)+[^.]*$/, \"\")\n      .split(\".\");\n  }\n\n  function cmpVersion(a: string, b: string) {\n    const aParts = versionParts(a);\n    const bParts = versionParts(b);\n    const len = Math.min(aParts.length, bParts.length);\n    let cmp;\n\n    for (let i = 0; i < len; i++) {\n      cmp = parseInt(aParts[i], 10) - parseInt(bParts[i], 10);\n      if (cmp !== 0) {\n        return cmp;\n      }\n    }\n    return aParts.length - bParts.length;\n  }\n\n  const diff = cmpVersion(a, b);\n\n  if (op === \"==\") return diff === 0;\n  else if (op === \">=\") return diff >= 0;\n  else if (op === \">\") return diff > 0;\n  else if (op === \"<=\") return diff <= 0;\n  else if (op === \"<\") return diff < 0;\n  else throw `Unknown operator: ${op}`;\n};\n\nfunction updateLabel(\n  labelTxt: string | undefined,\n  labelNode: JQuery<HTMLElement>\n): void {\n  // Only update if label was specified in the update method\n  if (typeof labelTxt === \"undefined\") return;\n  if (labelNode.length !== 1) {\n    throw new Error(\"labelNode must be of length 1\");\n  }\n\n  // Should the label be empty?\n  const emptyLabel = Array.isArray(labelTxt) && labelTxt.length === 0;\n\n  if (emptyLabel) {\n    labelNode.addClass(\"shiny-label-null\");\n  } else {\n    labelNode.text(labelTxt);\n    labelNode.removeClass(\"shiny-label-null\");\n  }\n}\n\n// Compute the color property of an a tag, scoped within the element\nfunction getComputedLinkColor(el: HTMLElement): string {\n  const a = document.createElement(\"a\");\n\n  a.href = \"/\";\n  const div = document.createElement(\"div\");\n\n  div.style.setProperty(\"position\", \"absolute\", \"important\");\n  div.style.setProperty(\"top\", \"-1000px\", \"important\");\n  div.style.setProperty(\"left\", \"0\", \"important\");\n  div.style.setProperty(\"width\", \"30px\", \"important\");\n  div.style.setProperty(\"height\", \"10px\", \"important\");\n  div.appendChild(a);\n  el.appendChild(div);\n  const linkColor = window.getComputedStyle(a).getPropertyValue(\"color\");\n\n  el.removeChild(div);\n  return linkColor;\n}\n\nfunction isBS3(): boolean {\n  // @ts-expect-error; Check if `window.bootstrap` exists\n  return !window.bootstrap;\n}\n\nfunction toLowerCase<T extends string>(str: T): Lowercase<T> {\n  return str.toLowerCase() as Lowercase<T>;\n}\n\nexport {\n  escapeHTML,\n  randomId,\n  strToBool,\n  getStyle,\n  padZeros,\n  roundSignif,\n  parseDate,\n  formatDateUTC,\n  makeResizeFilter,\n  pixelRatio,\n  getBoundingClientSizeBeforeZoom,\n  scopeExprToFunc,\n  asArray,\n  mergeSort,\n  $escape,\n  mapValues,\n  isnan,\n  _equal,\n  equal,\n  compareVersion,\n  updateLabel,\n  getComputedLinkColor,\n  hasOwnProperty,\n  hasDefinedProperty,\n  isBS3,\n  toLowerCase,\n};\n", "function windowDevicePixelRatio(): number {\n  return window.devicePixelRatio;\n}\n\nexport { windowDevicePixelRatio };\n", "import type { NotUndefined } from \"./extraTypes\";\n\n// Inspriation from https://fettblog.eu/typescript-hasownproperty/\n// But mixing with \"NonNullable key of Obj\" instead of \"key to unknown values\"\nfunction hasOwnProperty<Prop extends keyof X, X extends { [key: string]: any }>(\n  obj: X,\n  prop: Prop\n): obj is X & { [key in NonNullable<Prop>]: X[key] } {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n// Return true if the key exists on the object and the value is not undefined.\n//\n// This method is mainly used in input bindings' `receiveMessage` method.\n// Since we know that the values are sent by Shiny via `{jsonlite}`,\n// then we know that there are no `undefined` values. `null` is possible, but not `undefined`.\nfunction hasDefinedProperty<\n  Prop extends keyof X,\n  X extends { [key: string]: any }\n>(\n  obj: X,\n  prop: Prop\n): obj is X & { [key in NonNullable<Prop>]: NotUndefined<X[key]> } {\n  return (\n    Object.prototype.hasOwnProperty.call(obj, prop) && obj[prop] !== undefined\n  );\n}\n\n// Return type for non-null value\nfunction ifUndefined<X extends NotUndefined<any>, Y>(\n  value: X,\n  alternate: Y\n): NotUndefined<X>;\n// Return type for null value\nfunction ifUndefined<X extends undefined, Y>(value: X, alternate: Y): Y;\n// Logic\nfunction ifUndefined<X, Y>(value: X, alternate: Y): X | Y {\n  if (value === undefined) return alternate;\n  return value;\n}\n\nexport { hasOwnProperty, hasDefinedProperty, ifUndefined };\n", "import { mergeSort } from \"../utils\";\n\ninterface BindingBase {\n  name: string;\n}\n\ninterface BindingObj<Binding> {\n  binding: Binding;\n  priority: number;\n  name?: string;\n}\n\nclass BindingRegistry<Binding extends BindingBase> {\n  name!: string;\n  bindings: Array<BindingObj<Binding>> = [];\n  bindingNames: { [key: string]: BindingObj<Binding> } = {};\n\n  register(binding: Binding, bindingName: string, priority = 0): void {\n    const bindingObj = { binding, priority };\n\n    this.bindings.unshift(bindingObj);\n    if (bindingName) {\n      this.bindingNames[bindingName] = bindingObj;\n      binding.name = bindingName;\n    }\n  }\n\n  setPriority(bindingName: string, priority: number): void {\n    const bindingObj = this.bindingNames[bindingName];\n\n    if (!bindingObj)\n      throw \"Tried to set priority on unknown binding \" + bindingName;\n    bindingObj.priority = priority || 0;\n  }\n\n  getPriority(bindingName: string): number | false {\n    const bindingObj = this.bindingNames[bindingName];\n\n    if (!bindingObj) return false;\n    return bindingObj.priority;\n  }\n\n  getBindings(): Array<BindingObj<Binding>> {\n    // Sort the bindings. The ones with higher priority are consulted\n    // first; ties are broken by most-recently-registered.\n    return mergeSort(this.bindings, function (a, b) {\n      return b.priority - a.priority;\n    });\n  }\n}\n\nexport { BindingRegistry };\n", "import type { RatePolicyModes } from \"../../inputPolicies/inputRateDecorator\";\nimport type { BindScope } from \"../../shiny/bind\";\n\nclass InputBinding {\n  name!: string;\n\n  // Returns a jQuery object or element array that contains the\n  // descendants of scope that match this binding\n  find(scope: BindScope): JQuery<HTMLElement> {\n    throw \"Not implemented\";\n    scope; // unused var\n  }\n\n  getId(el: HTMLElement): string {\n    return el.getAttribute(\"data-input-id\") || el.id;\n  }\n\n  // Gives the input a type in case the server needs to know it\n  // to deserialize the JSON correctly\n  getType(el: HTMLElement): string | null {\n    return null;\n    el; // unused var\n  }\n  getValue(el: HTMLElement): any {\n    throw \"Not implemented\";\n    el; // unused var\n  }\n\n  // The callback method takes one argument, whose value is boolean. If true,\n  // allow deferred (debounce or throttle) sending depending on the value of\n  // getRatePolicy. If false, send value immediately. Default behavior is `false`\n  subscribe(el: HTMLElement, callback: (value: boolean) => void): void {\n    // empty\n    el; // unused var\n    callback; // unused var\n  }\n  unsubscribe(el: HTMLElement): void {\n    // empty\n    el; // unused var\n  }\n\n  // This is used for receiving messages that tell the input object to do\n  // things, such as setting values (including min, max, and others).\n  // 'data' should be an object with elements corresponding to value, min,\n  // max, etc., as appropriate for the type of input object. It also should\n  // trigger a change event.\n  receiveMessage(el: HTMLElement, data: unknown): Promise<void> | void {\n    throw \"Not implemented\";\n    el; // unused var\n    data; // unused var\n  }\n  getState(el: HTMLElement): unknown {\n    throw \"Not implemented\";\n    el; // unused var\n  }\n\n  getRatePolicy(\n    el: HTMLElement\n  ): { policy: RatePolicyModes; delay: number } | null {\n    return null;\n    el; // unused var\n  }\n\n  // Some input objects need initialization before being bound. This is\n  // called when the document is ready (for statically-added input objects),\n  // and when new input objects are added to the document with\n  // htmlOutputBinding.renderValue() (for dynamically-added input objects).\n  // This is called before the input is bound.\n  initialize(el: HTMLElement): void {\n    //empty\n    el;\n  }\n\n  // This is called after unbinding the output.\n  dispose(el: HTMLElement): void {\n    //empty\n    el;\n  }\n}\n\n//// NOTES FOR FUTURE DEV\n// Turn register systemin into something that is intialized for every instance.\n// \"Have a new instance for every item, not an instance that does work on every item\"\n//\n// * Keep register as is for historical purposes\n// make a new register function that would take a class\n// these class could be constructed at build time\n// store the constructed obj on the ele and retrieve\n\n// Then the classes could store their information within their local class, rather than on the element\n// VERY CLEAN!!!\n\n// to invoke methods, it would be something like `el.shinyClass.METHOD(x,y,z)`\n// * See https://github.com/rstudio/shinyvalidate/blob/c8becd99c01fac1bac03b50e2140f49fca39e7f4/srcjs/shinyvalidate.js#L157-L167\n// these methods would be added using a new method like `inputBindings.registerClass(ClassObj, name)`\n\n// things to watch out for:\n// * unbind, then rebind. Maybe we stash the local content.\n\n// Updates:\n// * Feel free to alter method names on classes. (And make them private)\n//// END NOTES FOR FUTURE DEV\n\nexport { InputBinding };\n", "import $ from \"jquery\";\nimport { hasDefinedProperty } from \"../../utils\";\nimport { InputBinding } from \"./inputBinding\";\n\ntype ActionButtonReceiveMessageData = {\n  label?: string;\n  icon?: string | [];\n  disabled?: boolean;\n};\n\nclass ActionButtonInputBinding extends InputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\".action-button\");\n  }\n  getValue(el: HTMLElement): number {\n    return $(el).data(\"val\") || 0;\n  }\n  setValue(el: HTMLElement, value: number): void {\n    $(el).data(\"val\", value);\n  }\n  getType(el: HTMLElement): string {\n    return \"shiny.action\";\n    el;\n  }\n  subscribe(el: HTMLElement, callback: (x: boolean) => void): void {\n    $(el).on(\n      \"click.actionButtonInputBinding\",\n      // e: Event\n      function () {\n        const $el = $(this);\n        const val = $el.data(\"val\") || 0;\n\n        $el.data(\"val\", val + 1);\n\n        callback(false);\n      }\n    );\n  }\n  getState(el: HTMLElement): { value: number } {\n    return { value: this.getValue(el) };\n  }\n  receiveMessage(el: HTMLElement, data: ActionButtonReceiveMessageData): void {\n    const $el = $(el);\n\n    if (hasDefinedProperty(data, \"label\") || hasDefinedProperty(data, \"icon\")) {\n      // retrieve current label and icon\n      let label: string = $el.text();\n      let icon = \"\";\n\n      // to check (and store) the previous icon, we look for a $el child\n      // object that has an i tag, and some (any) class (this prevents\n      // italicized text - which has an i tag but, usually, no class -\n      // from being mistakenly selected)\n      if ($el.find(\"i[class]\").length > 0) {\n        const iconHtml = $el.find(\"i[class]\")[0];\n\n        if (iconHtml === $el.children()[0]) {\n          // another check for robustness\n          icon = $(iconHtml).prop(\"outerHTML\");\n        }\n      }\n\n      // update the requested properties\n      if (hasDefinedProperty(data, \"label\")) {\n        label = data.label;\n      }\n      if (hasDefinedProperty(data, \"icon\")) {\n        // `data.icon` can be an [] if user gave `character(0)`.\n        icon = Array.isArray(data.icon) ? \"\" : data.icon ?? \"\";\n      }\n\n      // produce new html\n      $el.html(icon + \" \" + label);\n    }\n\n    if (hasDefinedProperty(data, \"disabled\")) {\n      if (data.disabled) {\n        $el.attr(\"disabled\", \"\");\n      } else {\n        $el.attr(\"disabled\", null);\n      }\n    }\n  }\n\n  unsubscribe(el: HTMLElement): void {\n    $(el).off(\".actionButtonInputBinding\");\n  }\n}\n\n// TODO-barret should this be put in the init methods?\n$(document).on(\"click\", \"a.action-button\", function (e) {\n  e.preventDefault();\n});\n\nexport { ActionButtonInputBinding };\nexport type { ActionButtonReceiveMessageData };\n", "import $ from \"jquery\";\nimport { hasDefinedProperty } from \"../../utils\";\nimport { InputBinding } from \"./inputBinding\";\n\ntype CheckedHTMLElement = HTMLInputElement;\n\ntype CheckboxChecked = CheckedHTMLElement[\"checked\"];\ntype CheckboxReceiveMessageData = { value?: CheckboxChecked; label?: string };\n\nclass CheckboxInputBinding extends InputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    // Inputs also have .shiny-input-checkbox class\n    return $(scope).find('input[type=\"checkbox\"]');\n  }\n  getValue(el: CheckedHTMLElement): CheckboxChecked {\n    return el.checked;\n  }\n  setValue(el: CheckedHTMLElement, value: CheckboxChecked): void {\n    el.checked = value;\n  }\n  subscribe(el: HTMLElement, callback: (x: boolean) => void): void {\n    $(el).on(\"change.checkboxInputBinding\", function () {\n      callback(true);\n    });\n  }\n  unsubscribe(el: HTMLElement): void {\n    $(el).off(\".checkboxInputBinding\");\n  }\n  getState(el: CheckedHTMLElement): { label: string; value: CheckboxChecked } {\n    return {\n      label: $(el).parent().find(\"span\").text(),\n      value: el.checked,\n    };\n  }\n  receiveMessage(\n    el: CheckedHTMLElement,\n    data: CheckboxReceiveMessageData\n  ): void {\n    if (hasDefinedProperty(data, \"value\")) {\n      el.checked = data.value;\n    }\n\n    // checkboxInput()'s label works different from other\n    // input labels...the label container should always exist\n    if (hasDefinedProperty(data, \"label\")) {\n      $(el).parent().find(\"span\").text(data.label);\n    }\n\n    $(el).trigger(\"change\");\n  }\n}\n\nexport { CheckboxInputBinding };\nexport type { CheckedHTMLElement, CheckboxReceiveMessageData };\n", "import $ from \"jquery\";\n\nimport { $escape, hasDefinedProperty, updateLabel } from \"../../utils\";\nimport type { CheckedHTMLElement } from \"./checkbox\";\nimport { InputBinding } from \"./inputBinding\";\n\ntype CheckboxGroupHTMLElement = CheckedHTMLElement;\ntype ValueLabelObject = {\n  value: HTMLInputElement[\"value\"];\n  label: string;\n};\ntype CheckboxGroupReceiveMessageData = {\n  options?: string;\n  value?: Parameters<CheckboxGroupInputBinding[\"setValue\"]>[1];\n  label: string;\n};\n\ntype CheckboxGroupValue = CheckboxGroupHTMLElement[\"value\"];\n\n// Get the DOM element that contains the top-level label\nfunction getLabelNode(el: CheckboxGroupHTMLElement): JQuery<HTMLElement> {\n  return $(el).find('label[for=\"' + $escape(el.id) + '\"]');\n}\n// Given an input DOM object, get the associated label. Handles labels\n// that wrap the input as well as labels associated with 'for' attribute.\nfunction getLabel(obj: HTMLElement): string | null {\n  const parentNode = obj.parentNode as HTMLElement;\n\n  // If <label><input /><span>label text</span></label>\n  if (parentNode.tagName === \"LABEL\") {\n    return $(parentNode).find(\"span\").text().trim();\n  }\n\n  return null;\n}\n// Given an input DOM object, set the associated label. Handles labels\n// that wrap the input as well as labels associated with 'for' attribute.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction setLabel(obj: HTMLElement, value: string): null {\n  const parentNode = obj.parentNode as HTMLElement;\n\n  // If <label><input /><span>label text</span></label>\n  if (parentNode.tagName === \"LABEL\") {\n    $(parentNode).find(\"span\").text(value);\n  }\n\n  return null;\n}\n\nclass CheckboxGroupInputBinding extends InputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\".shiny-input-checkboxgroup\");\n  }\n\n  getValue(el: CheckboxGroupHTMLElement): CheckboxGroupValue[] {\n    // Select the checkbox objects that have name equal to the grouping div's id\n    const $objs = $('input:checkbox[name=\"' + $escape(el.id) + '\"]:checked');\n    const values = new Array($objs.length);\n\n    for (let i = 0; i < $objs.length; i++) {\n      values[i] = ($objs[i] as CheckboxGroupHTMLElement).value;\n    }\n    return values;\n  }\n  setValue(el: HTMLElement, value: string[] | string | null): void {\n    // Null value should be treated as empty array\n    value = value ?? [];\n\n    // Clear all checkboxes\n    $('input:checkbox[name=\"' + $escape(el.id) + '\"]').prop(\"checked\", false);\n\n    // Accept array\n    if (value instanceof Array) {\n      for (let i = 0; i < value.length; i++) {\n        $(\n          'input:checkbox[name=\"' +\n            $escape(el.id) +\n            '\"][value=\"' +\n            $escape(value[i]) +\n            '\"]'\n        ).prop(\"checked\", true);\n      }\n      // Else assume it's a single value\n    } else {\n      $(\n        'input:checkbox[name=\"' +\n          $escape(el.id) +\n          '\"][value=\"' +\n          $escape(value) +\n          '\"]'\n      ).prop(\"checked\", true);\n    }\n  }\n  getState(el: CheckboxGroupHTMLElement): {\n    label: string;\n    value: ReturnType<CheckboxGroupInputBinding[\"getValue\"]>;\n    options: ValueLabelObject[];\n  } {\n    const $objs = $(\n      'input:checkbox[name=\"' + $escape(el.id) + '\"]'\n    ) as JQuery<CheckboxGroupHTMLElement>;\n\n    // Store options in an array of objects, each with with value and label\n    const options = new Array($objs.length);\n\n    for (let i = 0; i < options.length; i++) {\n      options[i] = { value: $objs[i].value, label: getLabel($objs[i]) };\n    }\n\n    return {\n      label: getLabelNode(el).text(),\n      value: this.getValue(el),\n      options: options,\n    };\n  }\n  receiveMessage(\n    el: CheckboxGroupHTMLElement,\n    data: CheckboxGroupReceiveMessageData\n  ): void {\n    const $el = $(el);\n\n    // This will replace all the options\n    if (hasDefinedProperty(data, \"options\")) {\n      // Clear existing options and add each new one\n      $el.find(\"div.shiny-options-group\").remove();\n      // Backward compatibility: for HTML generated by shinybootstrap2 package\n      $el.find(\"label.checkbox\").remove();\n      $el.append(data.options);\n    }\n\n    if (hasDefinedProperty(data, \"value\")) {\n      this.setValue(el, data.value);\n    }\n\n    updateLabel(data.label, getLabelNode(el));\n\n    $(el).trigger(\"change\");\n  }\n  subscribe(\n    el: CheckboxGroupHTMLElement,\n    callback: (x: boolean) => void\n  ): void {\n    $(el).on(\"change.checkboxGroupInputBinding\", function () {\n      callback(false);\n    });\n  }\n  unsubscribe(el: CheckboxGroupHTMLElement): void {\n    $(el).off(\".checkboxGroupInputBinding\");\n  }\n}\n\nexport { CheckboxGroupInputBinding };\nexport type { CheckboxGroupReceiveMessageData };\n", "import $ from \"jquery\";\nimport {\n  $escape,\n  formatDateUTC,\n  hasDefinedProperty,\n  parseDate,\n  updateLabel,\n} from \"../../utils\";\nimport type { NotUndefined } from \"../../utils/extraTypes\";\nimport { InputBinding } from \"./inputBinding\";\n\ndeclare global {\n  interface JQuery {\n    // Adjustment of https://github.com/DefinitelyTyped/DefinitelyTyped/blob/1626e0bac175121ec2e9f766a770e03a91843c31/types/bootstrap-datepicker/index.d.ts#L113-L114\n    bsDatepicker(methodName: \"getUTCDate\"): Date;\n    // Infinity is not allowed as a literal return type. Using `1e9999` as a placeholder that resolves to Infinity\n    // https://github.com/microsoft/TypeScript/issues/32277\n    // eslint-disable-next-line @typescript-eslint/no-loss-of-precision\n    bsDatepicker(methodName: \"getStartDate\"): Date | -1e9999;\n    // eslint-disable-next-line @typescript-eslint/no-loss-of-precision\n    bsDatepicker(methodName: \"getEndDate\"): Date | 1e9999;\n    bsDatepicker(methodName: string): void;\n    bsDatepicker(methodName: string, params: Date | null): void;\n  }\n}\n\ntype DateReceiveMessageData = {\n  label: string;\n  min?: Date | null;\n  max?: Date | null;\n  value?: Date | null;\n};\n\nclass DateInputBindingBase extends InputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\".shiny-date-input\");\n  }\n  getType(el: HTMLElement): string {\n    return \"shiny.date\";\n    el;\n  }\n  subscribe(el: HTMLElement, callback: (x: boolean) => void): void {\n    // Don't update when in the middle of typing; listening on keyup or input\n    // tends to send spurious values to the server, based on unpredictable\n    // browser-dependant interpretation of partially-typed date strings.\n    $(el).on(\n      \"changeDate.dateInputBinding change.dateInputBinding\",\n      // event: Event\n      function () {\n        // Send immediately when clicked\n        // Or if typing, when enter pressed or focus lost\n        callback(false);\n      }\n    );\n  }\n  unsubscribe(el: HTMLElement): void {\n    $(el).off(\".dateInputBinding\");\n  }\n\n  getRatePolicy(): { policy: \"debounce\"; delay: 250 } {\n    return {\n      policy: \"debounce\",\n      delay: 250,\n    };\n  }\n\n  setValue(el: HTMLElement, data: unknown): void {\n    throw \"not implemented\";\n    el;\n    data;\n  }\n  initialize(el: HTMLElement): void {\n    const $input = $(el).find(\"input\");\n\n    // The challenge with dates is that we want them to be at 00:00 in UTC so\n    // that we can do comparisons with them. However, the Date object itself\n    // does not carry timezone information, so we should call _floorDateTime()\n    // on Dates as soon as possible so that we know we're always working with\n    // consistent objects.\n\n    let date = $input.data(\"initial-date\");\n    // If initial_date is null, set to current date\n\n    if (date === undefined || date === null) {\n      // Get local date, but normalized to beginning of day in UTC.\n      date = this._floorDateTime(this._dateAsUTC(new Date()));\n    }\n\n    this.setValue(el, date);\n\n    // Set the start and end dates, from min-date and max-date. These always\n    // use yyyy-mm-dd format, instead of bootstrap-datepicker's built-in\n    // support for date-startdate and data-enddate, which use the current\n    // date format.\n    if ($input.data(\"min-date\") !== undefined) {\n      this._setMin($input[0], $input.data(\"min-date\"));\n    }\n    if ($input.data(\"max-date\") !== undefined) {\n      this._setMax($input[0], $input.data(\"max-date\"));\n    }\n  }\n  protected _getLabelNode(el: HTMLElement): JQuery<HTMLElement> {\n    return $(el).find('label[for=\"' + $escape(el.id) + '\"]');\n  }\n  // Given a format object from a date picker, return a string\n  protected _formatToString(format: {\n    parts: string[];\n    separators: string[];\n  }): string {\n    // Format object has structure like:\n    // { parts: ['mm', 'dd', 'yy'], separators: ['', '/', '/' ,''] }\n    let str = \"\";\n\n    let i;\n\n    for (i = 0; i < format.parts.length; i++) {\n      str += format.separators[i] + format.parts[i];\n    }\n    str += format.separators[i];\n    return str;\n  }\n  // Given an unambiguous date string or a Date object, set the min (start) date.\n  // null will unset. undefined will result in no change,\n  protected _setMin(el: HTMLElement, date: Date | null): void {\n    if (date === null) {\n      $(el).bsDatepicker(\"setStartDate\", null);\n      return;\n    }\n\n    const parsedDate = this._newDate(date);\n\n    // If date parsing fails, do nothing\n    if (parsedDate === null) return;\n\n    // (Assign back to date as a Date object)\n    date = parsedDate as Date;\n\n    if (isNaN(date.valueOf())) return;\n    // Workarounds for\n    // https://github.com/rstudio/shiny/issues/2335\n    const curValue = $(el).bsDatepicker(\"getUTCDate\");\n\n    // Note that there's no `setUTCStartDate`, so we need to convert this Date.\n    // It starts at 00:00 UTC, and we convert it to 00:00 in local time, which\n    // is what's needed for `setStartDate`.\n    $(el).bsDatepicker(\"setStartDate\", this._utcDateAsLocal(date));\n\n    // If the new min is greater than the current date, unset the current date.\n    if (date && curValue && date.getTime() > curValue.getTime()) {\n      $(el).bsDatepicker(\"clearDates\");\n    } else {\n      // Setting the date needs to be done AFTER `setStartDate`, because the\n      // datepicker has a bug where calling `setStartDate` will clear the date\n      // internally (even though it will still be visible in the UI) when a\n      // 2-digit year format is used.\n      // https://github.com/eternicode/bootstrap-datepicker/issues/2010\n      $(el).bsDatepicker(\"setUTCDate\", curValue);\n    }\n  }\n  // Given an unambiguous date string or a Date object, set the max (end) date\n  // null will unset.\n  protected _setMax(el: HTMLElement, date: Date | null): void {\n    if (date === null) {\n      $(el).bsDatepicker(\"setEndDate\", null);\n      return;\n    }\n\n    const parsedDate = this._newDate(date);\n\n    // If date parsing fails, do nothing\n    if (parsedDate === null) return;\n\n    date = parsedDate as Date;\n\n    if (isNaN(date.valueOf())) return;\n\n    // Workaround for same issue as in _setMin.\n    const curValue = $(el).bsDatepicker(\"getUTCDate\");\n\n    $(el).bsDatepicker(\"setEndDate\", this._utcDateAsLocal(date));\n\n    // If the new min is greater than the current date, unset the current date.\n    if (date && curValue && date.getTime() < curValue.getTime()) {\n      $(el).bsDatepicker(\"clearDates\");\n    } else {\n      $(el).bsDatepicker(\"setUTCDate\", curValue);\n    }\n  }\n  // Given a date string of format yyyy-mm-dd, return a Date object with\n  // that date at 12AM UTC.\n  // If date is a Date object, return it unchanged.\n  protected _newDate(date: Date | never | string): Date | null {\n    if (date instanceof Date) return date;\n    if (!date) return null;\n\n    // Get Date object - this will be at 12AM in UTC, but may print\n    // differently at the Javascript console.\n    const d = parseDate(date);\n\n    // If invalid date, return null\n    if (isNaN(d.valueOf())) return null;\n\n    return d;\n  }\n  // A Date can have any time during a day; this will return a new Date object\n  // set to 00:00 in UTC.\n  protected _floorDateTime(date: Date): Date {\n    date = new Date(date.getTime());\n    date.setUTCHours(0, 0, 0, 0);\n    return date;\n  }\n  // Given a Date object, return a Date object which has the same \"clock time\"\n  // in UTC. For example, if input date is 2013-02-01 23:00:00 GMT-0600 (CST),\n  // output will be 2013-02-01 23:00:00 UTC. Note that the JS console may\n  // print this in local time, as \"Sat Feb 02 2013 05:00:00 GMT-0600 (CST)\".\n  protected _dateAsUTC(date: Date): Date {\n    return new Date(date.getTime() - date.getTimezoneOffset() * 60000);\n  }\n  // The inverse of _dateAsUTC. This is needed to adjust time zones because\n  // some bootstrap-datepicker methods only take local dates as input, and not\n  // UTC.\n  protected _utcDateAsLocal(date: Date): Date {\n    return new Date(date.getTime() + date.getTimezoneOffset() * 60000);\n  }\n}\n\nclass DateInputBinding extends DateInputBindingBase {\n  // Return the date in an unambiguous format, yyyy-mm-dd (as opposed to a\n  // format like mm/dd/yyyy)\n  getValue(el: HTMLElement): string {\n    const date = $(el).find(\"input\").bsDatepicker(\"getUTCDate\");\n\n    return formatDateUTC(date);\n  }\n  // value must be an unambiguous string like '2001-01-01', or a Date object.\n  setValue(el: HTMLElement, value: Date | null): void {\n    // R's NA, which is null here will remove current value\n    if (value === null) {\n      $(el).find(\"input\").val(\"\").bsDatepicker(\"update\");\n      return;\n    }\n\n    const date = this._newDate(value);\n\n    if (date === null) {\n      return;\n    }\n\n    // If date is invalid, do nothing\n    if (isNaN((date as Date).valueOf())) return;\n\n    $(el).find(\"input\").bsDatepicker(\"setUTCDate\", date);\n  }\n  getState(el: HTMLElement): {\n    label: string;\n    value: string | null;\n    valueString: string[] | number | string;\n    min: string | null;\n    max: string | null;\n    language: string | null;\n    weekstart: number;\n    format: string;\n    startview: DatepickerViewModes;\n  } {\n    const $el = $(el);\n    const $input = $el.find(\"input\");\n\n    let min = $input.data(\"datepicker\").startDate;\n    let max = $input.data(\"datepicker\").endDate;\n\n    // Stringify min and max. If min and max aren't set, they will be\n    // -Infinity and Infinity; replace these with null.\n    min = min === -Infinity ? null : formatDateUTC(min);\n    max = max === Infinity ? null : formatDateUTC(max);\n\n    // startViewMode is stored as a number; convert to string\n    let startview = $input.data(\"datepicker\").startViewMode;\n\n    if (startview === 2) startview = \"decade\";\n    else if (startview === 1) startview = \"year\";\n    else if (startview === 0) startview = \"month\";\n\n    return {\n      label: this._getLabelNode(el).text(),\n      value: this.getValue(el),\n      valueString: $input.val() as NotUndefined<ReturnType<typeof $input.val>>,\n      min: min,\n      max: max,\n      language: $input.data(\"datepicker\").language,\n      weekstart: $input.data(\"datepicker\").weekStart,\n      format: this._formatToString($input.data(\"datepicker\").format),\n      startview: startview,\n    };\n  }\n  receiveMessage(el: HTMLElement, data: DateReceiveMessageData): void {\n    const $input = $(el).find(\"input\");\n\n    updateLabel(data.label, this._getLabelNode(el));\n\n    if (hasDefinedProperty(data, \"min\")) this._setMin($input[0], data.min);\n\n    if (hasDefinedProperty(data, \"max\")) this._setMax($input[0], data.max);\n\n    // Must set value only after min and max have been set. If new value is\n    // outside the bounds of the previous min/max, then the result will be a\n    // blank input.\n    if (hasDefinedProperty(data, \"value\")) this.setValue(el, data.value);\n\n    $(el).trigger(\"change\");\n  }\n}\n\nexport { DateInputBinding, DateInputBindingBase };\nexport type { DateReceiveMessageData };\n", "import $ from \"jquery\";\n\nimport {\n  $escape,\n  formatDateUTC,\n  hasDefinedProperty,\n  updateLabel,\n} from \"../../utils\";\nimport { DateInputBindingBase } from \"./date\";\n\ntype DateRangeReceiveMessageData = {\n  label: string;\n  min?: Date;\n  max?: Date;\n  value?: { start?: Date; end?: Date };\n};\n\nfunction getLabelNode(el: HTMLElement): JQuery<HTMLElement> {\n  return $(el).find('label[for=\"' + $escape(el.id) + '\"]');\n}\nclass DateRangeInputBinding extends DateInputBindingBase {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\".shiny-date-range-input\");\n  }\n  // Return the date in an unambiguous format, yyyy-mm-dd (as opposed to a\n  // format like mm/dd/yyyy)\n  getValue(el: HTMLElement): [string, string] {\n    const $inputs = $(el).find(\"input\");\n    const start = $inputs.eq(0).bsDatepicker(\"getUTCDate\");\n    const end = $inputs.eq(1).bsDatepicker(\"getUTCDate\");\n\n    return [formatDateUTC(start), formatDateUTC(end)];\n  }\n  // value must be an object, with optional fields `start` and `end`. These\n  // should be unambiguous strings like '2001-01-01', or Date objects.\n  setValue(el: HTMLElement, value: { start?: Date; end?: Date }): void {\n    if (!(value instanceof Object)) {\n      return;\n    }\n\n    // Get the start and end input objects\n    const $inputs = $(el).find(\"input\");\n\n    // If value is undefined, don't try to set\n    // null will remove the current value\n    if (value.start !== undefined) {\n      if (value.start === null) {\n        $inputs.eq(0).val(\"\").bsDatepicker(\"update\");\n      } else {\n        const start = this._newDate(value.start);\n\n        $inputs.eq(0).bsDatepicker(\"setUTCDate\", start);\n      }\n    }\n    if (value.end !== undefined) {\n      if (value.end === null) {\n        $inputs.eq(1).val(\"\").bsDatepicker(\"update\");\n      } else {\n        const end = this._newDate(value.end);\n\n        $inputs.eq(1).bsDatepicker(\"setUTCDate\", end);\n      }\n    }\n  }\n  getState(el: HTMLElement): {\n    label: string;\n    value: [string, string];\n    valueString: [string, string];\n    min: ReturnType<typeof formatDateUTC> | null;\n    max: ReturnType<typeof formatDateUTC> | null;\n    weekstart: string;\n    format: string;\n    language: string;\n    startview: string;\n  } {\n    const $el = $(el);\n    const $inputs = $el.find(\"input\");\n    const $startinput = $inputs.eq(0);\n    const $endinput = $inputs.eq(1);\n\n    // For many of the properties, assume start and end have the same values\n    const min = $startinput.bsDatepicker(\"getStartDate\");\n    const max = $startinput.bsDatepicker(\"getEndDate\");\n\n    // Stringify min and max. If min and max aren't set, they will be\n    // -Infinity and Infinity; replace these with null.\n    const minStr = min === -Infinity ? null : formatDateUTC(min as Date);\n    const maxStr = max === Infinity ? null : formatDateUTC(max as Date);\n\n    // startViewMode is stored as a number; convert to string\n    let startview = $startinput.data(\"datepicker\").startView;\n\n    if (startview === 2) startview = \"decade\";\n    else if (startview === 1) startview = \"year\";\n    else if (startview === 0) startview = \"month\";\n\n    return {\n      label: getLabelNode(el).text(),\n      value: this.getValue(el),\n      valueString: [$startinput.val() as string, $endinput.val() as string],\n      min: minStr,\n      max: maxStr,\n      weekstart: $startinput.data(\"datepicker\").weekStart,\n      format: this._formatToString($startinput.data(\"datepicker\").format),\n      language: $startinput.data(\"datepicker\").language,\n      startview: startview,\n    };\n  }\n  receiveMessage(el: HTMLElement, data: DateRangeReceiveMessageData): void {\n    const $el = $(el);\n    const $inputs = $el.find(\"input\");\n    const $startinput = $inputs.eq(0);\n    const $endinput = $inputs.eq(1);\n\n    updateLabel(data.label, getLabelNode(el));\n\n    if (hasDefinedProperty(data, \"min\")) {\n      this._setMin($startinput[0], data.min);\n      this._setMin($endinput[0], data.min);\n    }\n\n    if (hasDefinedProperty(data, \"max\")) {\n      this._setMax($startinput[0], data.max);\n      this._setMax($endinput[0], data.max);\n    }\n\n    // Must set value only after min and max have been set. If new value is\n    // outside the bounds of the previous min/max, then the result will be a\n    // blank input.\n    if (hasDefinedProperty(data, \"value\")) {\n      this.setValue(el, data.value);\n    }\n\n    $el.trigger(\"change\");\n  }\n\n  initialize(el: HTMLElement): void {\n    const $el = $(el);\n    const $inputs = $el.find(\"input\");\n    const $startinput = $inputs.eq(0);\n    const $endinput = $inputs.eq(1);\n\n    let start = $startinput.data(\"initial-date\");\n    let end = $endinput.data(\"initial-date\");\n\n    // If empty/null, use local date, but as UTC\n    if (start === undefined || start === null)\n      start = this._dateAsUTC(new Date());\n\n    if (end === undefined || end === null) end = this._dateAsUTC(new Date());\n\n    this.setValue(el, { start: start, end: end });\n\n    // // Set the start and end dates, from min-date and max-date. These always\n    // // use yyyy-mm-dd format, instead of bootstrap-datepicker's built-in\n    // // support for date-startdate and data-enddate, which use the current\n    // // date format.\n    this._setMin($startinput[0], $startinput.data(\"min-date\"));\n    this._setMin($endinput[0], $startinput.data(\"min-date\"));\n    this._setMax($startinput[0], $endinput.data(\"max-date\"));\n    this._setMax($endinput[0], $endinput.data(\"max-date\"));\n  }\n  subscribe(el: HTMLElement, callback: (x: boolean) => void): void {\n    // Don't update when in the middle of typing; listening on keyup or input\n    // tends to send spurious values to the server, based on unpredictable\n    // browser-dependant interpretation of partially-typed date strings.\n    $(el).on(\n      \"changeDate.dateRangeInputBinding change.dateRangeInputBinding\",\n      // event: Event\n      function () {\n        // Send immediately when clicked\n        // Or if typing, when enter pressed or focus lost\n        callback(false);\n      }\n    );\n  }\n  unsubscribe(el: HTMLElement): void {\n    $(el).off(\".dateRangeInputBinding\");\n  }\n}\n\nexport { DateRangeInputBinding };\nexport type { DateRangeReceiveMessageData };\n", "import $ from \"jquery\";\nimport { FileUploader } from \"../../file/fileProcessor\";\nimport { shinyShinyApp } from \"../../shiny/initedMethods\";\nimport { InputBinding } from \"./inputBinding\";\n\nconst zoneActive = \"shiny-file-input-active\";\nconst zoneOver = \"shiny-file-input-over\";\n\nfunction zoneOf(el: HTMLElement | JQuery<HTMLElement>): JQuery<HTMLElement> {\n  return $(el).closest(\"div.input-group\");\n}\n\n// This function makes it possible to attach listeners to the dragenter,\n// dragleave, and drop events of a single element with children. It's not\n// intuitive to do directly because outer elements fire \"dragleave\" events\n// both when the drag leaves the element and when the drag enters a child. To\n// make it easier, we maintain a count of the elements being dragged across\n// and trigger 3 new types of event:\n//\n// 1. draghover:enter - When a drag enters el and any of its children.\n// 2. draghover:leave - When the drag leaves el and all of its children.\n// 3. draghover:drop - When an item is dropped on el or any of its children.\nfunction enableDraghover(el: JQuery<HTMLElement>): JQuery<HTMLElement> {\n  const $el = $(el);\n  let childCounter = 0;\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  $el.on({\n    \"dragenter.draghover\": (e) => {\n      if (childCounter++ === 0) {\n        $el.trigger(\"draghover:enter\", e);\n      }\n    },\n    \"dragleave.draghover\": (e) => {\n      if (--childCounter === 0) {\n        $el.trigger(\"draghover:leave\", e);\n      }\n      if (childCounter < 0) {\n        console.error(\"draghover childCounter is negative somehow\");\n      }\n    },\n    \"dragover.draghover\": (e) => {\n      e.preventDefault();\n    },\n    \"drop.draghover\": (e) => {\n      childCounter = 0;\n      $el.trigger(\"draghover:drop\", e);\n      e.preventDefault();\n    },\n  });\n  return $el;\n}\nfunction disableDraghover(el: JQuery<HTMLElement>): JQuery<HTMLElement> {\n  return $(el).off(\".draghover\");\n}\nfunction enableDocumentEvents(): void {\n  const $doc = $(\"html\");\n\n  enableDraghover($doc).on({\n    \"draghover:enter.draghover\":\n      // e: Event\n      () => {\n        zoneOf($fileInputs).addClass(zoneActive);\n      },\n    \"draghover:leave.draghover\":\n      // e: Event\n      () => {\n        zoneOf($fileInputs).removeClass(zoneActive);\n      },\n    \"draghover:drop.draghover\":\n      // e: Event\n      () => {\n        zoneOf($fileInputs).removeClass(zoneOver).removeClass(zoneActive);\n      },\n  });\n}\nfunction disableDocumentEvents(): void {\n  const $doc = $(\"html\");\n\n  $doc.off(\".draghover\");\n  disableDraghover($doc);\n}\nfunction canSetFiles(fileList: FileList): boolean {\n  const testEl = document.createElement(\"input\");\n\n  testEl.type = \"file\";\n  try {\n    testEl.files = fileList;\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\nfunction handleDrop(e: JQuery.DragEventBase, el: HTMLInputElement): void {\n  const files = e.originalEvent?.dataTransfer?.files,\n    $el = $(el);\n\n  if (files === undefined || files === null) {\n    // 1. The FileList object isn't supported by this browser, and\n    // there's nothing else we can try. (< IE 10)\n    console.log(\n      \"Dropping files is not supported on this browser. (no FileList)\"\n    );\n  } else if (!canSetFiles(files)) {\n    // 2. The browser doesn't support assigning a type=file input's .files\n    // property, but we do have a FileList to work with. (IE10+/Edge)\n    $el.val(\"\");\n    uploadDroppedFilesIE10Plus(el, files);\n  } else {\n    // 3. The browser supports FileList and input.files assignment.\n    // (Chrome, Safari)\n    $el.val(\"\");\n    el.files = files;\n    // Recent versions of Firefox (57+, or \"Quantum\" and beyond) don't seem to\n    // automatically trigger a change event, so we trigger one manually here.\n    // On browsers that do trigger change, this operation appears to be\n    // idempotent, as el.files doesn't change between events.\n    $el.trigger(\"change\");\n  }\n}\n\n// NOTE On Safari, at least version 10.1.2, *if the developer console is open*,\n// setting the input's value will behave strangely because of a Safari bug. The\n// uploaded file's name will appear over the placeholder value, instead of\n// replacing it. The workaround is to restart Safari. When I (Alan Dipert) ran\n// into this bug Winston Chang helped me diagnose the exact problem, and Winston\n// then submitted a bug report to Apple.\nfunction setFileText($el: JQuery<EventTarget>, files: FileList) {\n  const $fileText = $el.closest(\"div.input-group\").find(\"input[type=text]\");\n\n  if (files.length === 1) {\n    $fileText.val(files[0].name);\n  } else {\n    $fileText.val(files.length + \" files\");\n  }\n}\n\n// If previously selected files are uploading, abort that.\nfunction abortCurrentUpload($el: JQuery<EventTarget>) {\n  const uploader = $el.data(\"currentUploader\");\n\n  if (uploader) uploader.abort();\n  // Clear data-restore attribute if present.\n  $el.removeAttr(\"data-restore\");\n}\n\nfunction uploadDroppedFilesIE10Plus(\n  el: HTMLInputElement,\n  files: FileList\n): void {\n  const $el = $(el);\n\n  abortCurrentUpload($el);\n\n  // Set the label in the text box\n  setFileText($el, files);\n\n  // Start the new upload and put the uploader in 'currentUploader'.\n  $el.data(\n    \"currentUploader\",\n    new FileUploader(shinyShinyApp(), fileInputBindingGetId(el), files, el)\n  );\n}\n\nfunction uploadFiles(evt: JQuery.DragEvent): void {\n  const $el = $(evt.target);\n\n  abortCurrentUpload($el);\n\n  const files = evt.target.files;\n  const id = fileInputBindingGetId(evt.target);\n\n  if (files.length === 0) return;\n\n  // Set the label in the text box\n  setFileText($el, files);\n\n  // Start the new upload and put the uploader in 'currentUploader'.\n  $el.data(\n    \"currentUploader\",\n    new FileUploader(shinyShinyApp(), id, files, evt.target)\n  );\n}\n\n// Here we maintain a list of all the current file inputs. This is necessary\n// because we need to trigger events on them in order to respond to file drag\n// events. For example, they should all light up when a file is dragged on to\n// the page.\n// TODO-barret ; Should this be an internal class property?\nlet $fileInputs = $();\n\nfunction fileInputBindingGetId(this: any, el: HTMLInputElement): string {\n  return InputBinding.prototype.getId.call(this, el) || el.name;\n}\n\nclass FileInputBinding extends InputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    // Inputs also have .shiny-input-file class\n    return $(scope).find('input[type=\"file\"]');\n  }\n  getId(el: HTMLInputElement): string {\n    return fileInputBindingGetId(el);\n  }\n  getValue(el: HTMLElement): { name?: string } | null {\n    // This returns a non-undefined value only when there's a 'data-restore'\n    // attribute, which is set only when restoring Shiny state. If a file is\n    // uploaded through the browser, 'data-restore' gets cleared.\n    const data = $(el).attr(\"data-restore\");\n\n    if (data) {\n      const dataParsed = JSON.parse(data);\n\n      // Set the label in the text box\n      const $fileText = $(el)\n        .closest(\"div.input-group\")\n        .find(\"input[type=text]\");\n\n      if (dataParsed.name.length === 1) {\n        $fileText.val(dataParsed.name[0]);\n      } else {\n        $fileText.val(dataParsed.name.length + \" files\");\n      }\n\n      // Manually set up progress bar. A bit inelegant because it duplicates\n      // code from FileUploader, but duplication is less bad than alternatives.\n      const $progress = $(el).closest(\"div.form-group\").find(\".progress\");\n      const $bar = $progress.find(\".progress-bar\");\n\n      $progress.removeClass(\"active\");\n      $bar.width(\"100%\");\n      $bar.css(\"visibility\", \"visible\");\n\n      return dataParsed;\n    } else {\n      return null;\n    }\n  }\n  setValue(el: HTMLElement, value: void): void {\n    // Not implemented\n    el;\n    value;\n  }\n  getType(el: HTMLElement): string {\n    // This will be used only when restoring a file from a saved state.\n    return \"shiny.file\";\n    el;\n  }\n\n  subscribe(el: HTMLInputElement, callback: (x: boolean) => void): void {\n    callback;\n\n    $(el).on(\"change.fileInputBinding\", uploadFiles);\n    // Here we try to set up the necessary events for Drag and Drop (\"DnD\").\n    if ($fileInputs.length === 0) enableDocumentEvents();\n    $fileInputs = $fileInputs.add(el);\n    const $zone = zoneOf(el);\n\n    enableDraghover($zone).on({\n      \"draghover:enter.draghover\": (e) => {\n        e;\n        $zone.addClass(zoneOver);\n      },\n      \"draghover:leave.draghover\": (e) => {\n        $zone.removeClass(zoneOver);\n        // Prevent this event from bubbling to the document handler,\n        // which would deactivate all zones.\n        e.stopPropagation();\n      },\n      \"draghover:drop.draghover\": (e, dropEvent) => {\n        e;\n        handleDrop(dropEvent, el);\n      },\n    });\n  }\n\n  unsubscribe(el: HTMLElement): void {\n    const $el = $(el),\n      $zone = zoneOf(el);\n\n    $zone.removeClass(zoneOver).removeClass(zoneActive);\n\n    disableDraghover($zone);\n    $el.off(\".fileInputBinding\");\n    $zone.off(\".draghover\");\n\n    // Remove el from list of inputs and (maybe) clean up global event handlers.\n    $fileInputs = $fileInputs.not(el);\n    if ($fileInputs.length === 0) disableDocumentEvents();\n  }\n}\n\nexport { FileInputBinding };\n", "import $ from \"jquery\";\nimport { triggerFileInputChanged } from \"../events/inputChanged\";\nimport { getFileInputBinding } from \"../shiny/initedMethods\";\nimport type { ShinyApp } from \"../shiny/shinyapp\";\nimport { $escape } from \"../utils\";\n\ntype JobId = string;\ntype UploadUrl = string;\ntype UploadInitValue = { jobId: JobId; uploadUrl: UploadUrl };\ntype UploadEndValue = never;\n\n// Generic driver class for doing chunk-wise asynchronous processing of a\n// FileList object. Subclass/clone it and override the `on*` functions to\n// make it do something useful.\nclass FileProcessor {\n  files: File[];\n  fileIndex = -1;\n  // Currently need to use small chunk size because R-Websockets can't\n  // handle continuation frames\n  aborted = false;\n  completed = false;\n\n  constructor(files: FileList, exec$run = true) {\n    this.files = Array.from(files);\n\n    // TODO: Register error/abort callbacks\n    if (exec$run) {\n      this.$run();\n    }\n  }\n\n  // Begin callbacks. Subclassers/cloners may override any or all of these.\n  onBegin(files: File[], cont: () => void): void {\n    files;\n    setTimeout(cont, 0);\n  }\n  onFile(file: File, cont: () => void): void {\n    file;\n    setTimeout(cont, 0);\n  }\n  onComplete(): void {\n    return;\n  }\n  onAbort(): void {\n    return;\n  }\n  // End callbacks\n\n  // Aborts processing, unless it's already completed\n  abort(): void {\n    if (this.completed || this.aborted) return;\n\n    this.aborted = true;\n    this.onAbort();\n  }\n\n  // Returns a bound function that will call this.$run one time.\n  $getRun(): () => void {\n    let called = false;\n\n    return () => {\n      if (called) return;\n      called = true;\n      this.$run();\n    };\n  }\n\n  // This function will be called multiple times to advance the process.\n  // It relies on the state of the object's fields to know what to do next.\n  $run(): void {\n    if (this.aborted || this.completed) return;\n\n    if (this.fileIndex < 0) {\n      // Haven't started yet--begin\n      this.fileIndex = 0;\n      this.onBegin(this.files, this.$getRun());\n      return;\n    }\n\n    if (this.fileIndex === this.files.length) {\n      // Just ended\n      this.completed = true;\n      this.onComplete();\n      return;\n    }\n\n    // If we got here, then we have a file to process, or we are\n    // in the middle of processing a file, or have just finished\n    // processing a file.\n\n    const file = this.files[this.fileIndex++];\n\n    this.onFile(file, this.$getRun());\n  }\n}\n\nclass FileUploader extends FileProcessor {\n  shinyapp: ShinyApp;\n  id: string;\n  el: HTMLElement;\n\n  jobId!: JobId;\n  uploadUrl!: UploadUrl;\n  progressBytes!: number;\n  totalBytes!: number;\n\n  constructor(\n    shinyapp: ShinyApp,\n    id: string,\n    files: FileList,\n    el: HTMLElement\n  ) {\n    // Init super with files, do not execute `this.$run()` before setting variables\n    super(files, false);\n    this.shinyapp = shinyapp;\n    this.id = id;\n    this.el = el;\n    this.$run();\n  }\n\n  makeRequest(\n    method: \"uploadInit\",\n    args: Array<Array<{ name: string; size: number; type: string }>>,\n    onSuccess: (value: UploadInitValue) => void,\n    onFailure: Parameters<ShinyApp[\"makeRequest\"]>[3],\n    blobs: Parameters<ShinyApp[\"makeRequest\"]>[4]\n  ): void;\n  makeRequest(\n    method: \"uploadEnd\",\n    args: [string, string],\n    // UploadEndValue can not be used as the type will not conform\n    onSuccess: (value: unknown) => void,\n    onFailure: Parameters<ShinyApp[\"makeRequest\"]>[3],\n    blobs: Parameters<ShinyApp[\"makeRequest\"]>[4]\n  ): void;\n  makeRequest(\n    method: string,\n    args: unknown[],\n    onSuccess: Parameters<ShinyApp[\"makeRequest\"]>[2],\n    onFailure: Parameters<ShinyApp[\"makeRequest\"]>[3],\n    blobs: Parameters<ShinyApp[\"makeRequest\"]>[4]\n  ): void {\n    this.shinyapp.makeRequest(method, args, onSuccess, onFailure, blobs);\n  }\n  onBegin(files: File[], cont: () => void): void {\n    // Reset progress bar\n    this.$setError(null);\n    this.$setActive(true);\n    this.$setVisible(true);\n    this.onProgress(null, 0);\n\n    this.totalBytes = 0;\n    this.progressBytes = 0;\n    $.each(files, (i, file) => {\n      this.totalBytes += file.size;\n    });\n\n    const fileInfo = $.map(files, function (file: File) {\n      return {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n      };\n    });\n\n    this.makeRequest(\n      \"uploadInit\",\n      [fileInfo],\n      (response) => {\n        this.jobId = response.jobId;\n        this.uploadUrl = response.uploadUrl;\n        cont();\n      },\n      (error) => {\n        this.onError(error);\n      },\n      undefined\n    );\n  }\n  onFile(file: File, cont: () => void): void {\n    this.onProgress(file, 0);\n\n    /* eslint-disable-next-line @typescript-eslint/no-floating-promises */\n    $.ajax(this.uploadUrl, {\n      type: \"POST\",\n      cache: false,\n      xhr: () => {\n        if (typeof $.ajaxSettings.xhr !== \"function\")\n          throw \"jQuery's XHR is not a function\";\n\n        const xhrVal = $.ajaxSettings.xhr();\n\n        if (xhrVal.upload) {\n          xhrVal.upload.onprogress = (e) => {\n            if (e.lengthComputable) {\n              this.onProgress(\n                file,\n                (this.progressBytes + e.loaded) / this.totalBytes\n              );\n            }\n          };\n        }\n        return xhrVal;\n      },\n      data: file,\n      contentType: \"application/octet-stream\",\n      processData: false,\n      success: () => {\n        this.progressBytes += file.size;\n        cont();\n      },\n      error: (jqXHR, textStatus, errorThrown) => {\n        errorThrown;\n        this.onError(jqXHR.responseText || textStatus);\n      },\n    });\n  }\n  onComplete(): void {\n    const fileInfo = $.map(this.files, function (file: File, i) {\n      return {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n      };\n      i;\n    });\n\n    // Trigger shiny:inputchanged. Unlike a normal shiny:inputchanged event,\n    // it's not possible to modify the information before the values get\n    // sent to the server.\n    const evt = triggerFileInputChanged(\n      this.id,\n      fileInfo,\n      getFileInputBinding(),\n      this.el,\n      \"shiny.fileupload\",\n      document\n    );\n\n    this.makeRequest(\n      \"uploadEnd\",\n      [this.jobId, this.id],\n      () => {\n        this.$setActive(false);\n        this.onProgress(null, 1);\n        this.$bar().text(\"Upload complete\");\n        // Reset the file input's value to \"\". This allows the same file to be\n        // uploaded again. https://stackoverflow.com/a/22521275\n        $(evt.el as HTMLElement).val(\"\");\n      },\n      (error) => {\n        this.onError(error);\n      },\n      undefined\n    );\n    this.$bar().text(\"Finishing upload\");\n  }\n  onError(message: string): void {\n    this.$setError(message || \"\");\n    this.$setActive(false);\n  }\n  onAbort(): void {\n    this.$setVisible(false);\n  }\n  onProgress(file: File | null, completed: number): void {\n    this.$bar().width(Math.round(completed * 100) + \"%\");\n    this.$bar().text(file ? file.name : \"\");\n  }\n  $container(): JQuery<HTMLElement> {\n    return $(\"#\" + $escape(this.id) + \"_progress.shiny-file-input-progress\");\n  }\n  $bar(): JQuery<HTMLElement> {\n    return $(\n      \"#\" +\n        $escape(this.id) +\n        \"_progress.shiny-file-input-progress .progress-bar\"\n    );\n  }\n  $setVisible(visible: boolean): void {\n    this.$container().css(\"visibility\", visible ? \"visible\" : \"hidden\");\n  }\n  $setError(error: string | null): void {\n    this.$bar().toggleClass(\"progress-bar-danger\", error !== null);\n    if (error !== null) {\n      this.onProgress(null, 1);\n      this.$bar().text(error);\n    }\n  }\n  $setActive(active: boolean): void {\n    this.$container().toggleClass(\"active\", !!active);\n  }\n}\n\nexport { FileUploader };\nexport type { UploadInitValue, UploadEndValue };\n", "import $ from \"jquery\";\nimport type { FileInputBinding } from \"../bindings/input/fileinput\";\nimport type { ShinyEventInputChanged } from \"./shinyEvents\";\n\nfunction triggerFileInputChanged(\n  name: string,\n  value: unknown,\n  binding: FileInputBinding,\n  el: HTMLElement,\n  inputType: string,\n  onEl: typeof document\n): ShinyEventInputChanged {\n  const evt = $.Event(\"shiny:inputchanged\") as ShinyEventInputChanged;\n\n  evt.name = name;\n  evt.value = value;\n  evt.binding = binding;\n  evt.el = el;\n  evt.inputType = inputType;\n\n  $(onEl).trigger(evt);\n\n  return evt;\n}\n\nexport { triggerFileInputChanged };\n", "import type { ShinyClass } from \".\";\nimport type { FileInputBinding } from \"../bindings/input/fileinput\";\nimport type { OutputBindingAdapter } from \"../bindings/outputAdapter\";\nimport type { EventPriority } from \"../inputPolicies\";\nimport type { BindScope } from \"./bind\";\nimport type { Handler, ShinyApp } from \"./shinyapp\";\n\nlet fullShinyObj: FullShinyDef;\n\n// TODO-future; It would be nice to have a way to export this type value instead of / in addition to `Shiny`\ntype FullShinyDef = Required<\n  Pick<\n    ShinyClass,\n    | \"bindAll\"\n    | \"forgetLastInputValue\"\n    | \"initializeInputs\"\n    | \"oncustommessage\"\n    | \"setInputValue\"\n    | \"shinyapp\"\n    | \"unbindAll\"\n    | \"user\"\n  >\n> &\n  ShinyClass;\n\nfunction setShinyObj(shiny: ShinyClass): void {\n  fullShinyObj = shiny as FullShinyDef;\n}\n\nfunction validateShinyHasBeenSet(): FullShinyDef {\n  if (typeof fullShinyObj === \"undefined\") {\n    throw \"Shiny has not finish initialization yet. Please wait for the 'shiny-initialized' event.\";\n  }\n  return fullShinyObj;\n}\n\n//// 2021/03: TypeScript Conversion note\n// These methods are here due to the delayed initialization of `Shiny.shinyapp`. I\n// In theory, there could be multiple instances of `shinyapp`. In practice (and implementation), this is not possible and is a 1:1 coupling with `window.Shiny`.\n// To avoid calls to a large Shiny object, helper methods are created to wrap around calling the fully instantiated window.Shiny value.\n// TODO-barret; Why is `initShiny()` delayed? Is this to allow users to shim in some code? Why can't it be defined in the init method (maybe w/ an extra trigger call?)\nfunction shinySetInputValue(\n  name: string,\n  value: unknown,\n  opts?: { priority?: EventPriority }\n): void {\n  validateShinyHasBeenSet().setInputValue(name, value, opts);\n}\nfunction shinyShinyApp(): ShinyApp {\n  return validateShinyHasBeenSet().shinyapp;\n}\nfunction setShinyUser(user: string): void {\n  validateShinyHasBeenSet().user = user;\n}\nfunction shinyForgetLastInputValue(name: string): void {\n  validateShinyHasBeenSet().forgetLastInputValue(name);\n}\nasync function shinyBindAll(scope: BindScope): Promise<void> {\n  await validateShinyHasBeenSet().bindAll(scope);\n}\nfunction shinyUnbindAll(scope: BindScope, includeSelf = false): void {\n  validateShinyHasBeenSet().unbindAll(scope, includeSelf);\n}\nfunction shinyInitializeInputs(scope: BindScope): void {\n  validateShinyHasBeenSet().initializeInputs(scope);\n}\n\nasync function shinyAppBindOutput(\n  id: string,\n  binding: OutputBindingAdapter\n): Promise<void> {\n  await shinyShinyApp().bindOutput(id, binding);\n}\n\nfunction shinyAppUnbindOutput(\n  id: string,\n  binding: OutputBindingAdapter\n): boolean {\n  return shinyShinyApp().unbindOutput(id, binding);\n}\n\nfunction getShinyOnCustomMessage(): Handler | null {\n  return validateShinyHasBeenSet().oncustommessage;\n}\n\nlet fileInputBinding: FileInputBinding;\n\nfunction getFileInputBinding(): FileInputBinding {\n  return fileInputBinding;\n}\nfunction setFileInputBinding(fileInputBinding_: FileInputBinding): void {\n  fileInputBinding = fileInputBinding_;\n}\n\nfunction getShinyCreateWebsocket(): (() => WebSocket) | void {\n  return validateShinyHasBeenSet().createSocket;\n}\n\nexport {\n  setShinyObj,\n  shinySetInputValue,\n  shinyShinyApp,\n  setShinyUser,\n  shinyForgetLastInputValue,\n  shinyBindAll,\n  shinyUnbindAll,\n  shinyInitializeInputs,\n  shinyAppBindOutput,\n  shinyAppUnbindOutput,\n  getShinyOnCustomMessage,\n  getFileInputBinding,\n  setFileInputBinding,\n  getShinyCreateWebsocket,\n};\n", "import $ from \"jquery\";\nimport { $escape, hasDefinedProperty, updateLabel } from \"../../utils\";\nimport { TextInputBindingBase } from \"./text\";\n\ntype NumberHTMLElement = HTMLInputElement;\n\ntype NumberReceiveMessageData = {\n  label: string;\n  value?: string | null;\n  min?: string | null;\n  max?: string | null;\n  step?: string | null;\n};\n\nfunction getLabelNode(el: NumberHTMLElement): JQuery<HTMLElement> {\n  return $(el)\n    .parent()\n    .find('label[for=\"' + $escape(el.id) + '\"]');\n}\n\nclass NumberInputBinding extends TextInputBindingBase {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    // Inputs also have .shiny-input-number class\n    return $(scope).find('input[type=\"number\"]');\n  }\n\n  getValue(\n    el: NumberHTMLElement\n  ): string[] | number | string | null | undefined {\n    const numberVal = $(el).val();\n\n    if (typeof numberVal == \"string\") {\n      if (/^\\s*$/.test(numberVal))\n        // Return null if all whitespace\n        return null;\n    }\n\n    // If valid Javascript number string, coerce to number\n    const numberValue = Number(numberVal);\n\n    if (!isNaN(numberValue)) {\n      return numberValue;\n    }\n\n    return numberVal; // If other string like \"1e6\", send it unchanged\n  }\n  setValue(el: NumberHTMLElement, value: number): void {\n    el.value = \"\" + value;\n  }\n  getType(el: NumberHTMLElement): string {\n    return \"shiny.number\";\n    el;\n  }\n  receiveMessage(el: NumberHTMLElement, data: NumberReceiveMessageData): void {\n    // Setting values to `\"\"` will remove the attribute value from the DOM element.\n    // The attr key will still remain, but there is not value... ex: `<input id=\"foo\" type=\"number\" min max/>`\n    if (hasDefinedProperty(data, \"value\")) el.value = data.value ?? \"\";\n    if (hasDefinedProperty(data, \"min\")) el.min = data.min ?? \"\";\n    if (hasDefinedProperty(data, \"max\")) el.max = data.max ?? \"\";\n    if (hasDefinedProperty(data, \"step\")) el.step = data.step ?? \"\";\n\n    updateLabel(data.label, getLabelNode(el));\n\n    $(el).trigger(\"change\");\n  }\n\n  getState(el: NumberHTMLElement): {\n    label: string;\n    value: ReturnType<NumberInputBinding[\"getValue\"]>;\n    min: number;\n    max: number;\n    step: number;\n  } {\n    return {\n      label: getLabelNode(el).text(),\n      value: this.getValue(el),\n      min: Number(el.min),\n      max: Number(el.max),\n      step: Number(el.step),\n    };\n  }\n}\n\nexport { NumberInputBinding };\nexport type { NumberReceiveMessageData };\n", "import $ from \"jquery\";\nimport { $escape, hasDefinedProperty, updateLabel } from \"../../utils\";\n\nimport { InputBinding } from \"./inputBinding\";\n\n// interface TextHTMLElement extends NameValueHTMLElement {\n//   placeholder: any;\n// }\n\ntype TextHTMLElement = HTMLInputElement;\ntype TextReceiveMessageData = {\n  label: string;\n  value?: TextHTMLElement[\"value\"];\n  placeholder?: TextHTMLElement[\"placeholder\"];\n};\n\nfunction getLabelNode(el: HTMLElement): JQuery<HTMLElement> {\n  return $(el)\n    .parent()\n    .find('label[for=\"' + $escape(el.id) + '\"]');\n}\n\nclass TextInputBindingBase extends InputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    const $inputs = $(scope).find(\n      'input[type=\"text\"], input[type=\"search\"], input[type=\"url\"], input[type=\"email\"]'\n    );\n    // selectize.js 0.12.4 inserts a hidden text input with an\n    // id that ends in '-selectized'. The .not() selector below\n    // is to prevent textInputBinding from accidentally picking up\n    // this hidden element as a shiny input (#2396)\n    //\n    // Inputs also now have .shiny-input-text class\n    return $inputs.not('input[type=\"text\"][id$=\"-selectized\"]');\n  }\n\n  getId(el: TextHTMLElement): string {\n    return super.getId(el) || el.name;\n    // return InputBinding.prototype.getId.call(this, el) || el.name;\n  }\n\n  getValue(el: TextHTMLElement): unknown {\n    throw \"not implemented\";\n    el;\n  }\n  setValue(el: TextHTMLElement, value: unknown): void {\n    throw \"not implemented\";\n    el;\n    value;\n  }\n\n  subscribe(el: TextHTMLElement, callback: (x: boolean) => void): void {\n    $(el).on(\n      \"keyup.textInputBinding input.textInputBinding\",\n      // event: Event\n      function () {\n        callback(true);\n      }\n    );\n    $(el).on(\n      \"change.textInputBinding\",\n      // event: Event\n      function () {\n        callback(false);\n      }\n    );\n  }\n  unsubscribe(el: TextHTMLElement): void {\n    $(el).off(\".textInputBinding\");\n  }\n\n  receiveMessage(el: TextHTMLElement, data: unknown): void {\n    throw \"not implemented\";\n    el;\n    data;\n  }\n\n  getState(el: TextHTMLElement): unknown {\n    throw \"not implemented\";\n    el;\n  }\n\n  getRatePolicy(el: HTMLElement): { policy: \"debounce\"; delay: 250 } {\n    return {\n      policy: \"debounce\",\n      delay: 250,\n    };\n    el;\n  }\n}\n\nclass TextInputBinding extends TextInputBindingBase {\n  setValue(el: TextHTMLElement, value: string): void {\n    el.value = value;\n  }\n\n  getValue(el: TextHTMLElement): TextHTMLElement[\"value\"] {\n    return el.value;\n  }\n\n  getState(el: TextHTMLElement): {\n    label: string;\n    value: string;\n    placeholder: string;\n  } {\n    return {\n      label: getLabelNode(el).text(),\n      value: el.value,\n      placeholder: el.placeholder,\n    };\n  }\n  receiveMessage(el: TextHTMLElement, data: TextReceiveMessageData): void {\n    if (hasDefinedProperty(data, \"value\")) this.setValue(el, data.value);\n\n    updateLabel(data.label, getLabelNode(el));\n\n    if (hasDefinedProperty(data, \"placeholder\"))\n      el.placeholder = data.placeholder;\n\n    $(el).trigger(\"change\");\n  }\n}\n\nexport { TextInputBinding, TextInputBindingBase };\nexport type { TextHTMLElement, TextReceiveMessageData };\n", "import $ from \"jquery\";\n\nimport { TextInputBinding } from \"./text\";\n\nclass PasswordInputBinding extends TextInputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    // Inputs also have .shiny-input-password class\n    return $(scope).find('input[type=\"password\"]');\n  }\n\n  getType(el: HTMLElement): string {\n    return \"shiny.password\";\n    el;\n  }\n}\n\nexport { PasswordInputBinding };\n", "import $ from \"jquery\";\nimport { $escape, hasDefinedProperty, updateLabel } from \"../../utils\";\nimport { InputBinding } from \"./inputBinding\";\n\ntype RadioHTMLElement = HTMLInputElement;\n\ntype ValueLabelObject = {\n  value: HTMLInputElement[\"value\"];\n  label: string;\n};\n\ntype RadioReceiveMessageData = {\n  value?: string | [];\n  options?: ValueLabelObject[];\n  label: string;\n};\n\n// Get the DOM element that contains the top-level label\nfunction getLabelNode(el: RadioHTMLElement): JQuery<HTMLElement> {\n  return $(el)\n    .parent()\n    .find('label[for=\"' + $escape(el.id) + '\"]');\n}\n// Given an input DOM object, get the associated label. Handles labels\n// that wrap the input as well as labels associated with 'for' attribute.\nfunction getLabel(obj: HTMLElement): string | null {\n  const parentNode = obj.parentNode as HTMLElement;\n\n  // If <label><input /><span>label text</span></label>\n  if (parentNode.tagName === \"LABEL\") {\n    return $(parentNode).find(\"span\").text().trim();\n  }\n\n  return null;\n}\n// Given an input DOM object, set the associated label. Handles labels\n// that wrap the input as well as labels associated with 'for' attribute.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction setLabel(obj: HTMLElement, value: string): null {\n  const parentNode = obj.parentNode as HTMLElement;\n\n  // If <label><input /><span>label text</span></label>\n  if (parentNode.tagName === \"LABEL\") {\n    $(parentNode).find(\"span\").text(value);\n  }\n\n  return null;\n}\n\nclass RadioInputBinding extends InputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\".shiny-input-radiogroup\");\n  }\n  getValue(\n    el: RadioHTMLElement\n  ): string[] | number | string | null | undefined {\n    // Select the radio objects that have name equal to the grouping div's id\n    const checkedItems = $(\n      'input:radio[name=\"' + $escape(el.id) + '\"]:checked'\n    );\n\n    if (checkedItems.length === 0) {\n      // If none are checked, the input will return null (it's the default on load,\n      // but it wasn't emptied when calling updateRadioButtons with character(0)\n      return null;\n    }\n\n    return checkedItems.val();\n  }\n  setValue(el: RadioHTMLElement, value: string | []): void {\n    if (Array.isArray(value) && value.length === 0) {\n      // Removing all checked item if the sent data is empty\n      $('input:radio[name=\"' + $escape(el.id) + '\"]').prop(\"checked\", false);\n    } else {\n      $(\n        'input:radio[name=\"' +\n          $escape(el.id) +\n          '\"][value=\"' +\n          $escape(value) +\n          '\"]'\n      ).prop(\"checked\", true);\n    }\n  }\n  getState(el: RadioHTMLElement): {\n    label: string;\n    value: ReturnType<RadioInputBinding[\"getValue\"]>;\n    options: ValueLabelObject[];\n  } {\n    const $objs = $(\n      'input:radio[name=\"' + $escape(el.id) + '\"]'\n    ) as JQuery<RadioHTMLElement>;\n\n    // Store options in an array of objects, each with with value and label\n    const options = new Array($objs.length);\n\n    for (let i = 0; i < options.length; i++) {\n      options[i] = { value: $objs[i].value, label: getLabel($objs[i]) };\n    }\n\n    return {\n      label: getLabelNode(el).text(),\n      value: this.getValue(el),\n      options: options,\n    };\n  }\n  receiveMessage(el: RadioHTMLElement, data: RadioReceiveMessageData): void {\n    const $el = $(el);\n    // This will replace all the options\n\n    if (hasDefinedProperty(data, \"options\")) {\n      // Clear existing options and add each new one\n      $el.find(\"div.shiny-options-group\").remove();\n      // Backward compatibility: for HTML generated by shinybootstrap2 package\n      $el.find(\"label.radio\").remove();\n      // @ts-expect-error; TODO-barret; IDK what this line is doing\n      // TODO-barret; Should this line be setting attributes instead?\n      // `data.options` is an array of `{value, label}` objects\n      $el.append(data.options);\n    }\n\n    if (hasDefinedProperty(data, \"value\")) {\n      this.setValue(el, data.value);\n    }\n\n    updateLabel(data.label, getLabelNode(el));\n\n    $(el).trigger(\"change\");\n  }\n  subscribe(el: RadioHTMLElement, callback: (x: boolean) => void): void {\n    $(el).on(\"change.radioInputBinding\", function () {\n      callback(false);\n    });\n  }\n  unsubscribe(el: RadioHTMLElement): void {\n    $(el).off(\".radioInputBinding\");\n  }\n}\n\nexport { RadioInputBinding };\nexport type { RadioReceiveMessageData };\n", "import $ from \"jquery\";\nimport { $escape, hasDefinedProperty, updateLabel } from \"../../utils\";\nimport { indirectEval } from \"../../utils/eval\";\nimport { InputBinding } from \"./inputBinding\";\n\ntype SelectHTMLElement = HTMLSelectElement & { nonempty: boolean };\n\ntype SelectInputReceiveMessageData = {\n  label: string;\n  options?: string;\n  config?: string;\n  url?: string;\n  value?: string;\n};\n\ntype SelectizeOptions = Selectize.IOptions<string, unknown>;\ntype SelectizeInfo = Selectize.IApi<string, unknown> & {\n  settings: SelectizeOptions;\n};\n\nfunction getLabelNode(el: SelectHTMLElement): JQuery<HTMLElement> {\n  let escapedId = $escape(el.id);\n\n  if (isSelectize(el)) {\n    escapedId += \"-selectized\";\n  }\n  return $(el)\n    .parent()\n    .parent()\n    .find('label[for=\"' + escapedId + '\"]');\n}\n// Return true if it's a selectize input, false if it's a regular select input.\n// eslint-disable-next-line camelcase\nfunction isSelectize(el: HTMLElement): boolean {\n  const config = $(el)\n    .parent()\n    .find('script[data-for=\"' + $escape(el.id) + '\"]');\n\n  return config.length > 0;\n}\n\nclass SelectInputBinding extends InputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    // Inputs also have .shiny-input-select class\n    return $(scope).find(\"select\");\n  }\n  getType(el: HTMLElement): string | null {\n    const $el = $(el);\n\n    if (!$el.hasClass(\"symbol\")) {\n      // default character type\n      return null;\n    }\n    if ($el.attr(\"multiple\") === \"multiple\") {\n      return \"shiny.symbolList\";\n    } else {\n      return \"shiny.symbol\";\n    }\n  }\n  getId(el: SelectHTMLElement): string {\n    return InputBinding.prototype.getId.call(this, el) || el.name;\n  }\n  getValue(el: SelectHTMLElement): any {\n    if (!isSelectize(el)) {\n      return $(el).val();\n    } else {\n      const selectize = this._selectize(el);\n\n      return selectize?.getValue();\n    }\n  }\n  setValue(el: SelectHTMLElement, value: string): void {\n    if (!isSelectize(el)) {\n      $(el).val(value);\n    } else {\n      const selectize = this._selectize(el);\n\n      selectize?.setValue(value);\n    }\n  }\n  getState(el: SelectHTMLElement): {\n    label: JQuery<HTMLElement>;\n    value: ReturnType<SelectInputBinding[\"getValue\"]>;\n    options: Array<{ value: string; label: string }>;\n  } {\n    // Store options in an array of objects, each with with value and label\n    const options: Array<{ value: string; label: string }> = new Array(\n      el.length\n    );\n\n    for (let i = 0; i < el.length; i++) {\n      options[i] = {\n        // TODO-barret; Is this a safe assumption?; Are there no Option Groups?\n        value: (el[i] as HTMLOptionElement).value,\n        label: el[i].label,\n      };\n    }\n\n    return {\n      label: getLabelNode(el),\n      value: this.getValue(el),\n      options: options,\n    };\n  }\n  receiveMessage(\n    el: SelectHTMLElement,\n    data: SelectInputReceiveMessageData\n  ): void {\n    const $el = $(el);\n\n    // This will replace all the options\n    if (hasDefinedProperty(data, \"options\")) {\n      const selectize = this._selectize(el);\n\n      // Must destroy selectize before appending new options, otherwise\n      // selectize will restore the original select\n      selectize?.destroy();\n      // Clear existing options and add each new one\n      $el.empty().append(data.options);\n      this._selectize(el);\n    }\n\n    // re-initialize selectize\n    if (hasDefinedProperty(data, \"config\")) {\n      $el\n        .parent()\n        .find('script[data-for=\"' + $escape(el.id) + '\"]')\n        .replaceWith(data.config);\n      this._selectize(el, true);\n    }\n\n    // use server-side processing for selectize\n    if (hasDefinedProperty(data, \"url\")) {\n      type CallbackFn = Parameters<\n        NonNullable<SelectizeInfo[\"settings\"][\"load\"]>\n      >[1];\n      const selectize = this._selectize(el) as ReturnType<\n        SelectInputBinding[\"_selectize\"]\n      > & {\n        settings: {\n          load: (query: string, callback: CallbackFn) => any;\n        };\n      };\n\n      // Calling selectize.clear() first works around https://github.com/selectize/selectize.js/issues/2146\n      // As of selectize.js >= v0.13.1, .clearOptions() clears the selection,\n      // but does NOT remove the previously-selected options. So unless we call\n      // .clear() first, the current selection(s) will remain as (deselected)\n      // options. See #3966 #4142\n      selectize.clear();\n      selectize.clearOptions();\n      let loaded = false;\n\n      selectize.settings.load = function (query: string, callback: CallbackFn) {\n        const settings = selectize.settings;\n\n        /* eslint-disable-next-line @typescript-eslint/no-floating-promises */\n        $.ajax({\n          url: data.url,\n          data: {\n            query: query,\n            field: JSON.stringify([settings.searchField]),\n            value: settings.valueField,\n            conju: settings.searchConjunction,\n            maxop: settings.maxOptions,\n          },\n          type: \"GET\",\n          error: function () {\n            callback();\n          },\n          success: function (res) {\n            // res = [{label: '1', value: '1', group: '1'}, ...]\n            // success is called after options are added, but\n            // groups need to be added manually below\n            $.each(res, function (index, elem) {\n              // Call selectize.addOptionGroup once for each optgroup; the\n              // first argument is the group ID, the second is an object with\n              // the group's label and value. We use the current settings of\n              // the selectize object to decide the fieldnames of that obj.\n              const optgroupId = elem[settings.optgroupField || \"optgroup\"];\n              const optgroup: { [key: string]: string } = {};\n\n              optgroup[settings.optgroupLabelField || \"label\"] = optgroupId;\n              optgroup[settings.optgroupValueField || \"value\"] = optgroupId;\n              selectize.addOptionGroup(optgroupId, optgroup);\n            });\n            callback(res);\n            if (!loaded) {\n              if (hasDefinedProperty(data, \"value\")) {\n                selectize.setValue(data.value as any);\n              } else if (settings.maxItems === 1) {\n                // first item selected by default only for single-select\n                selectize.setValue(res[0].value);\n              }\n            }\n            loaded = true;\n          },\n        });\n      };\n      // perform an empty search after changing the `load` function\n      selectize.load(function (callback) {\n        selectize.settings.load.apply(selectize, [\"\", callback]);\n      });\n    } else if (hasDefinedProperty(data, \"value\")) {\n      this.setValue(el, data.value);\n    }\n\n    updateLabel(data.label, getLabelNode(el));\n\n    $(el).trigger(\"change\");\n  }\n  subscribe(el: SelectHTMLElement, callback: (x: boolean) => void): void {\n    $(el).on(\n      \"change.selectInputBinding\",\n      // event: Event\n      () => {\n        // https://github.com/rstudio/shiny/issues/2162\n        // Prevent spurious events that are gonna be squelched in\n        // a second anyway by the onItemRemove down below\n        if (el.nonempty && this.getValue(el) === \"\") {\n          return;\n        }\n        callback(false);\n      }\n    );\n  }\n  unsubscribe(el: HTMLElement): void {\n    $(el).off(\".selectInputBinding\");\n  }\n  initialize(el: SelectHTMLElement): void {\n    this._selectize(el);\n  }\n  protected _selectize(\n    el: SelectHTMLElement,\n    update = false\n  ): SelectizeInfo | undefined {\n    // Apps like 008-html do not have the selectize js library\n    // Safe-guard against missing the selectize js library\n    if (!$.fn.selectize) return undefined;\n    const $el = $(el);\n    const config = $el\n      .parent()\n      .find('script[data-for=\"' + $escape(el.id) + '\"]');\n\n    if (config.length === 0) return undefined;\n\n    let options: SelectizeOptions & {\n      labelField: \"label\";\n      valueField: \"value\";\n      searchField: [\"label\"];\n      onItemRemove?: (value: string) => void;\n      onDropdownClose?: () => void;\n    } = $.extend(\n      {\n        labelField: \"label\",\n        valueField: \"value\",\n        searchField: [\"label\"],\n      },\n      JSON.parse(config.html())\n    );\n\n    // selectize created from selectInput()\n    if (typeof config.data(\"nonempty\") !== \"undefined\") {\n      el.nonempty = true;\n      options = $.extend(options, {\n        onItemRemove: function (this: SelectizeInfo, value: string) {\n          if (this.getValue() === \"\")\n            $(\"select#\" + $escape(el.id))\n              .empty()\n              .append(\n                $(\"<option/>\", {\n                  value: value,\n                  selected: true,\n                })\n              )\n              .trigger(\"change\");\n        },\n        onDropdownClose:\n          // $dropdown: any\n          function (this: SelectizeInfo) {\n            if (this.getValue() === \"\") {\n              this.setValue($(\"select#\" + $escape(el.id)).val() as string);\n            }\n          },\n      });\n    } else {\n      el.nonempty = false;\n    }\n    // options that should be eval()ed\n    if (config.data(\"eval\") instanceof Array)\n      $.each(config.data(\"eval\"), function (i, x: string) {\n        /*jshint evil: true*/\n        // @ts-expect-error; Need to type `options` keys to know exactly which values are accessed.\n        options[x] = indirectEval(\"(\" + options[x] + \")\");\n      });\n    let control = $el.selectize(options)[0].selectize as SelectizeInfo;\n    // .selectize() does not really update settings; must destroy and rebuild\n\n    if (update) {\n      const settings = $.extend(control.settings, options);\n\n      control.destroy();\n      control = $el.selectize(settings)[0].selectize as SelectizeInfo;\n    }\n\n    return control;\n  }\n}\n\nexport { SelectInputBinding };\nexport type { SelectInputReceiveMessageData };\n", "//esbuild.github.io/content-types/#direct-eval\n//tl/dr;\n// * Direct usage of `eval(\"x\")` is bad with bundled code.\n// * Instead, use indirect calls to `eval` such as `indirectEval(\"x\")`\n//   * Even just renaming the function works well enough.\n// > This is known as \"indirect eval\" because eval is not being called directly, and so does not trigger the grammatical special case for direct eval in the JavaScript VM. You can call indirect eval using any syntax at all except for an expression of the exact form eval('x'). For example, var eval2 = eval; eval2('x') and [eval][0]('x') and window.eval('x') are all indirect eval calls.\n// > When you use indirect eval, the code is evaluated in the global scope instead of in the inline scope of the caller.\n\nconst indirectEval = eval;\n\nexport { indirectEval };\n", "import type {\n  IonRangeSliderEvent,\n  IonRangeSliderOptions,\n} from \"ion-rangeslider\";\nimport $ from \"jquery\";\n// import { NameValueHTMLElement } from \".\";\nimport {\n  $escape,\n  formatDateUTC,\n  hasDefinedProperty,\n  updateLabel,\n} from \"../../utils\";\n\nimport type { TextHTMLElement } from \"./text\";\nimport { TextInputBindingBase } from \"./text\";\n\n// interface SliderHTMLElement extends NameValueHTMLElement {\n//   checked?: any;\n// }\n\ntype TimeFormatter = (fmt: string, dt: Date) => string;\n// Backward compatible code for old-style jsliders (Shiny <= 0.10.2.2),\ntype LegacySlider = {\n  canStepNext: () => boolean;\n  stepNext: () => void;\n  resetToStart: () => void;\n};\n\ntype SliderReceiveMessageData = {\n  label: string;\n  value?: Array<number | string> | number | string;\n  min?: number;\n  max?: number;\n  step?: number;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  \"data-type\"?: string;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  \"time-format\"?: string;\n  timezone?: string;\n};\n\n// MUST use window.strftime as the javascript dependency is dynamic\n// and could be needed after shiny has initialized.\ndeclare global {\n  interface Window {\n    strftime: TimeFormatter & {\n      utc: () => TimeFormatter;\n      timezone: (timezone: string) => TimeFormatter;\n    };\n  }\n}\n\n// Necessary to get hidden sliders to send their updated values\nfunction forceIonSliderUpdate(slider: any) {\n  if (slider.$cache && slider.$cache.input)\n    slider.$cache.input.trigger(\"change\");\n  else console.log(\"Couldn't force ion slider to update\");\n}\n\ntype Prettify = (num: number) => string;\nfunction getTypePrettifyer(\n  dataType: string,\n  timeFormat: string,\n  timezone: string\n) {\n  let timeFormatter: TimeFormatter;\n  let prettify: Prettify;\n\n  if (dataType === \"date\") {\n    timeFormatter = window.strftime.utc();\n    prettify = function (num) {\n      return timeFormatter(timeFormat, new Date(num));\n    };\n  } else if (dataType === \"datetime\") {\n    if (timezone) timeFormatter = window.strftime.timezone(timezone);\n    else timeFormatter = window.strftime;\n\n    prettify = function (num) {\n      return timeFormatter(timeFormat, new Date(num));\n    };\n  } else {\n    // The default prettify function for ion.rangeSlider adds thousands\n    // separators after the decimal mark, so we have our own version here.\n    // (#1958)\n    prettify = function (this: IonRangeSliderOptions, num: number) {\n      // When executed, `this` will refer to the `IonRangeSlider.options`\n      // object.\n      return formatNumber(num, this.prettify_separator);\n    };\n  }\n  return prettify;\n}\n\nfunction getLabelNode(el: HTMLElement): JQuery<HTMLElement> {\n  return $(el)\n    .parent()\n    .find('label[for=\"' + $escape(el.id) + '\"]');\n}\n// Number of values; 1 for single slider, 2 for range slider\nfunction numValues(el: HTMLElement): 1 | 2 {\n  if ($(el).data(\"ionRangeSlider\").options.type === \"double\") return 2;\n  else return 1;\n}\n\nclass SliderInputBinding extends TextInputBindingBase {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    // Check if ionRangeSlider plugin is loaded\n    if (!$.fn.ionRangeSlider) {\n      // Return empty set of _found_ items\n      return $();\n    }\n\n    return $(scope).find(\"input.js-range-slider\");\n  }\n\n  getType(el: HTMLElement): string | null {\n    const dataType = $(el).data(\"data-type\");\n\n    if (dataType === \"date\") return \"shiny.date\";\n    else if (dataType === \"datetime\") return \"shiny.datetime\";\n    else return null;\n  }\n  getValue(\n    el: TextHTMLElement\n  ): number | string | [number | string, number | string] {\n    const $el = $(el);\n    const result = $(el).data(\"ionRangeSlider\").result as IonRangeSliderEvent;\n\n    // Function for converting numeric value from slider to appropriate type.\n    let convert: (val: unknown) => number | string;\n    const dataType = $el.data(\"data-type\");\n\n    if (dataType === \"date\") {\n      convert = function (val: unknown) {\n        return formatDateUTC(new Date(Number(val)));\n      };\n    } else if (dataType === \"datetime\") {\n      convert = function (val: unknown) {\n        // Convert ms to s\n        return Number(val) / 1000;\n      };\n    } else {\n      convert = function (val: unknown) {\n        return Number(val);\n      };\n    }\n\n    if (numValues(el) === 2) {\n      return [convert(result.from), convert(result.to)];\n    } else {\n      return convert(result.from);\n    }\n  }\n  setValue(\n    el: HTMLElement,\n    value: number | string | [number | string, number | string]\n  ): void {\n    const $el = $(el);\n    const slider = $el.data(\"ionRangeSlider\");\n\n    $el.data(\"immediate\", true);\n    try {\n      if (numValues(el) === 2 && value instanceof Array) {\n        slider.update({ from: value[0], to: value[1] });\n      } else {\n        slider.update({ from: value });\n      }\n\n      forceIonSliderUpdate(slider);\n    } finally {\n      $el.data(\"immediate\", false);\n    }\n  }\n  subscribe(el: HTMLElement, callback: (x: boolean) => void): void {\n    $(el).on(\"change.sliderInputBinding\", function () {\n      callback(!$(el).data(\"immediate\") && !$(el).data(\"animating\"));\n    });\n  }\n  unsubscribe(el: HTMLElement): void {\n    $(el).off(\".sliderInputBinding\");\n  }\n  receiveMessage(el: HTMLElement, data: SliderReceiveMessageData): void {\n    const $el = $(el);\n    const slider = $el.data(\"ionRangeSlider\");\n    const msg: {\n      from?: number | string;\n      to?: number | string;\n      min?: number;\n      max?: number;\n      step?: number;\n      prettify?: Prettify;\n    } = {};\n\n    if (hasDefinedProperty(data, \"value\")) {\n      if (numValues(el) === 2 && data.value instanceof Array) {\n        msg.from = data.value[0];\n        msg.to = data.value[1];\n      } else {\n        if (Array.isArray(data.value)) {\n          const errorReason = [\n            \"an empty array.\",\n            \"a single-value array.\",\n            \"an array with more than two values.\",\n          ];\n          throw (\n            \"Slider requires two values to update with an array, \" +\n            \"but message value was \" +\n            errorReason[Math.min(data.value.length, 2)]\n          );\n        }\n        msg.from = data.value;\n      }\n    }\n\n    const sliderFeatures: Array<\"max\" | \"min\" | \"step\"> = [\n      \"min\",\n      \"max\",\n      \"step\",\n    ];\n\n    for (let i = 0; i < sliderFeatures.length; i++) {\n      const feats = sliderFeatures[i];\n\n      if (hasDefinedProperty(data, feats)) {\n        msg[feats] = data[feats];\n      }\n    }\n\n    updateLabel(data.label, getLabelNode(el));\n\n    // (maybe) update data elements\n    const domElements: Array<\"data-type\" | \"time-format\" | \"timezone\"> = [\n      \"data-type\",\n      \"time-format\",\n      \"timezone\",\n    ];\n\n    for (let i = 0; i < domElements.length; i++) {\n      const elem = domElements[i];\n\n      if (hasDefinedProperty(data, elem)) {\n        $el.data(elem, data[elem]);\n      }\n    }\n\n    // retrieve latest data values\n    const dataType = $el.data(\"data-type\");\n    const timeFormat = $el.data(\"time-format\");\n    const timezone = $el.data(\"timezone\");\n\n    msg.prettify = getTypePrettifyer(dataType, timeFormat, timezone);\n\n    $el.data(\"immediate\", true);\n    try {\n      slider.update(msg);\n      forceIonSliderUpdate(slider);\n    } finally {\n      $el.data(\"immediate\", false);\n    }\n  }\n  getRatePolicy(el: HTMLElement): { policy: \"debounce\"; delay: 250 } {\n    return {\n      policy: \"debounce\",\n      delay: 250,\n    };\n    el;\n  }\n  // TODO-barret Why not implemented?\n  getState(el: HTMLInputElement): void {\n    // empty\n    el;\n  }\n\n  initialize(el: HTMLElement): void {\n    const $el = $(el);\n    const dataType = $el.data(\"data-type\");\n    const timeFormat = $el.data(\"time-format\");\n    const timezone = $el.data(\"timezone\");\n\n    const opts = {\n      prettify: getTypePrettifyer(dataType, timeFormat, timezone),\n    };\n\n    $el.ionRangeSlider(opts);\n  }\n}\n\n// Format numbers for nicer output.\n// formatNumber(1234567.12345)           === \"1,234,567.12345\"\n// formatNumber(1234567.12345, \".\", \",\") === \"1.234.567,12345\"\n// formatNumber(1000, \" \")               === \"1 000\"\n// formatNumber(20)                      === \"20\"\n// formatNumber(1.2345e24)               === \"1.2345e+24\"\nfunction formatNumber(\n  num: number,\n  thousandSep = \",\",\n  decimalSep = \".\"\n): string {\n  const parts = num.toString().split(\".\");\n\n  // Add separators to portion before decimal mark.\n  parts[0] = parts[0].replace(\n    /(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g,\n    \"$1\" + thousandSep\n  );\n\n  if (parts.length === 1) return parts[0];\n  else if (parts.length === 2) return parts[0] + decimalSep + parts[1];\n  else return \"\";\n}\n\n// TODO-barret ; this should be put in the \"init\" areas, correct?\n$(document).on(\"click\", \".slider-animate-button\", function (evt: Event) {\n  evt.preventDefault();\n  const self = $(this);\n  const target = $(\"#\" + $escape(self.attr(\"data-target-id\") as string));\n  const startLabel = \"Play\";\n  const stopLabel = \"Pause\";\n  const loop =\n    self.attr(\"data-loop\") !== undefined &&\n    !/^\\s*false\\s*$/i.test(self.attr(\"data-loop\") as string);\n  let animInterval = self.attr(\"data-interval\") as number | string;\n\n  if (isNaN(animInterval as number)) animInterval = 1500;\n  else animInterval = Number(animInterval);\n\n  if (!target.data(\"animTimer\")) {\n    let timer;\n\n    // Separate code paths:\n    // Backward compatible code for old-style jsliders (Shiny <= 0.10.2.2),\n    // and new-style ionsliders.\n    if (target.hasClass(\"jslider\")) {\n      const slider = target.slider() as unknown as LegacySlider;\n\n      // If we're currently at the end, restart\n      if (!slider.canStepNext()) slider.resetToStart();\n\n      timer = setInterval(function () {\n        if (loop && !slider.canStepNext()) {\n          slider.resetToStart();\n        } else {\n          slider.stepNext();\n          if (!loop && !slider.canStepNext()) {\n            // TODO-barret replace with self.trigger(\"click\")\n            self.click(); // stop the animation\n          }\n        }\n      }, animInterval);\n    } else {\n      const slider = target.data(\"ionRangeSlider\");\n      // Single sliders have slider.options.type == \"single\", and only the\n      // `from` value is used. Double sliders have type == \"double\", and also\n      // use the `to` value for the right handle.\n      const sliderCanStep = function () {\n        if (slider.options.type === \"double\")\n          return slider.result.to < slider.result.max;\n        else return slider.result.from < slider.result.max;\n      };\n      const sliderReset = function () {\n        const val: { from: number; to?: number } = { from: slider.result.min };\n        // Preserve the current spacing for double sliders\n\n        if (slider.options.type === \"double\")\n          val.to = val.from + (slider.result.to - slider.result.from);\n\n        slider.update(val);\n        forceIonSliderUpdate(slider);\n      };\n      const sliderStep = function () {\n        // Don't overshoot the end\n        const val: { from: number; to?: number } = {\n          from: Math.min(\n            slider.result.max,\n            slider.result.from + slider.options.step\n          ),\n        };\n\n        if (slider.options.type === \"double\")\n          val.to = Math.min(\n            slider.result.max,\n            slider.result.to + slider.options.step\n          );\n\n        slider.update(val);\n        forceIonSliderUpdate(slider);\n      };\n\n      // If we're currently at the end, restart\n      if (!sliderCanStep()) sliderReset();\n\n      timer = setInterval(function () {\n        if (loop && !sliderCanStep()) {\n          sliderReset();\n        } else {\n          sliderStep();\n          if (!loop && !sliderCanStep()) {\n            self.click(); // stop the animation\n          }\n        }\n      }, animInterval);\n    }\n\n    target.data(\"animTimer\", timer);\n    self.attr(\"title\", stopLabel);\n    self.addClass(\"playing\");\n    target.data(\"animating\", true);\n  } else {\n    clearTimeout(target.data(\"animTimer\"));\n    target.removeData(\"animTimer\");\n    self.attr(\"title\", startLabel);\n    self.removeClass(\"playing\");\n    target.removeData(\"animating\");\n  }\n});\n\nexport { SliderInputBinding };\nexport type { SliderReceiveMessageData };\n", "import $ from \"jquery\";\nimport { hasDefinedProperty, isBS3 } from \"../../utils\";\nimport { InputBinding } from \"./inputBinding\";\n\ntype TabInputReceiveMessageData = { value?: string };\n\nfunction getTabName(anchor: JQuery<HTMLElement>): string {\n  return anchor.attr(\"data-value\") || anchor.text();\n}\n\nclass BootstrapTabInputBinding extends InputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\"ul.nav.shiny-tab-input\");\n  }\n  getValue(el: HTMLElement): string | null {\n    // prettier-ignore\n    // The BS4+ selectors may not work as is for dropdowns within dropdowns, but BS3+ dropped support for those anyway\n    const anchor = isBS3()\n      ? $(el).find(\"li:not(.dropdown).active > a\")\n      : $(el).find(\n        \".nav-link:not(.dropdown-toggle).active, .dropdown-menu .dropdown-item.active\"\n      );\n\n    if (anchor.length === 1) return getTabName(anchor);\n\n    return null;\n  }\n  setValue(el: HTMLElement, value: string | undefined): void {\n    let success = false;\n\n    if (value) {\n      // prettier-ignore\n      // The BS4+ selectors may not work as is for dropdowns within dropdowns, but BS3+ dropped support for those anyway\n      const anchors = isBS3()\n        ? $(el).find(\"li:not(.dropdown) > a\")\n        : $(el).find(\n          \".nav-link:not(.dropdown-toggle), .dropdown-menu .dropdown-item\"\n        );\n\n      anchors.each(function () {\n        if (getTabName($(this)) === value) {\n          $(this).tab(\"show\");\n          success = true;\n          return false; // Break out of each()\n        }\n        return;\n      });\n    }\n    if (!success) {\n      // This is to handle the case where nothing is selected, e.g. the last tab\n      // was removed using removeTab.\n      $(el).trigger(\"change\");\n    }\n  }\n  getState(el: HTMLElement): { value: string | null } {\n    return { value: this.getValue(el) };\n  }\n  receiveMessage(el: HTMLElement, data: TabInputReceiveMessageData): void {\n    if (hasDefinedProperty(data, \"value\")) this.setValue(el, data.value);\n    $(el).trigger(\"change\");\n  }\n  subscribe(el: HTMLElement, callback: (x: boolean) => void): void {\n    $(el).on(\n      \"change shown.bootstrapTabInputBinding shown.bs.tab.bootstrapTabInputBinding\",\n      // event: Event\n      function () {\n        callback(false);\n      }\n    );\n  }\n  unsubscribe(el: HTMLElement): void {\n    $(el).off(\".bootstrapTabInputBinding\");\n  }\n}\n\nexport { BootstrapTabInputBinding };\nexport type { TabInputReceiveMessageData };\n", "import $ from \"jquery\";\n\nimport { TextInputBinding } from \"./text\";\n\nclass TextareaInputBinding extends TextInputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    // Inputs now also have the .shiny-input-textarea class\n    return $(scope).find(\"textarea\");\n  }\n}\n\nexport { TextareaInputBinding };\n", "import { BindingRegistry } from \"../registry\";\n\nimport { InputBinding } from \"./inputBinding\";\n\nimport { ActionButtonInputBinding } from \"./actionbutton\";\nimport { CheckboxInputBinding } from \"./checkbox\";\nimport { CheckboxGroupInputBinding } from \"./checkboxgroup\";\nimport { DateInputBinding } from \"./date\";\nimport { DateRangeInputBinding } from \"./daterange\";\nimport { FileInputBinding } from \"./fileinput\";\nimport { NumberInputBinding } from \"./number\";\nimport { PasswordInputBinding } from \"./password\";\nimport { RadioInputBinding } from \"./radio\";\nimport { SelectInputBinding } from \"./selectInput\";\nimport { SliderInputBinding } from \"./slider\";\nimport { BootstrapTabInputBinding } from \"./tabinput\";\nimport { TextInputBinding } from \"./text\";\nimport { TextareaInputBinding } from \"./textarea\";\n\n// TODO-barret make this an init method\nfunction initInputBindings(): {\n  inputBindings: BindingRegistry<InputBinding>;\n  fileInputBinding: FileInputBinding;\n} {\n  const inputBindings = new BindingRegistry<InputBinding>();\n\n  inputBindings.register(new TextInputBinding(), \"shiny.textInput\");\n  inputBindings.register(new TextareaInputBinding(), \"shiny.textareaInput\");\n  inputBindings.register(new PasswordInputBinding(), \"shiny.passwordInput\");\n  inputBindings.register(new NumberInputBinding(), \"shiny.numberInput\");\n  inputBindings.register(new CheckboxInputBinding(), \"shiny.checkboxInput\");\n  inputBindings.register(\n    new CheckboxGroupInputBinding(),\n    \"shiny.checkboxGroupInput\"\n  );\n  inputBindings.register(new RadioInputBinding(), \"shiny.radioInput\");\n  inputBindings.register(new SliderInputBinding(), \"shiny.sliderInput\");\n  inputBindings.register(new DateInputBinding(), \"shiny.dateInput\");\n  inputBindings.register(new DateRangeInputBinding(), \"shiny.dateRangeInput\");\n  inputBindings.register(new SelectInputBinding(), \"shiny.selectInput\");\n  inputBindings.register(\n    new ActionButtonInputBinding(),\n    \"shiny.actionButtonInput\"\n  );\n  inputBindings.register(\n    new BootstrapTabInputBinding(),\n    \"shiny.bootstrapTabInput\"\n  );\n  const fileInputBinding = new FileInputBinding();\n\n  inputBindings.register(fileInputBinding, \"shiny.fileInputBinding\");\n\n  return { inputBindings, fileInputBinding };\n}\n\nexport { initInputBindings, InputBinding };\n", "import $ from \"jquery\";\n\nimport { shinyUnbindAll } from \"../../shiny/initedMethods\";\nimport type { ErrorsMessageValue } from \"../../shiny/shinyapp\";\nimport { debounce } from \"../../time\";\nimport { escapeHTML } from \"../../utils\";\nimport { indirectEval } from \"../../utils/eval\";\nimport { OutputBinding } from \"./outputBinding\";\n\nclass DatatableOutputBinding extends OutputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\".shiny-datatable-output\");\n  }\n  onValueError(el: HTMLElement, err: ErrorsMessageValue): void {\n    shinyUnbindAll(el);\n    this.renderError(el, err);\n  }\n  renderValue(\n    el: HTMLElement,\n    data: {\n      colnames?: string[];\n      options?: {\n        searching?: boolean;\n        search?: { caseInsensitive?: boolean };\n        // To be sent to data table;\n        // Will copy in R value to this location\n        escape?: string;\n      } | null;\n      escape?: string; // Incoming from R\n      action?: string;\n      evalOptions?: string[];\n      callback?: string;\n      searchDelay?: number;\n    } | null\n  ): void {\n    const $el = $(el).empty();\n\n    if (!data || !data.colnames) return;\n\n    const colnames = $.makeArray(data.colnames);\n    let header = $.map(colnames, function (x) {\n      return \"<th>\" + x + \"</th>\";\n    }).join(\"\");\n\n    header = \"<thead><tr>\" + header + \"</tr></thead>\";\n    let footer = \"\";\n\n    if (data.options?.searching ?? true) {\n      footer = $.map(colnames, function (x) {\n        // placeholder needs to be escaped (and HTML tags are stripped off)\n        return (\n          '<th><input type=\"text\" placeholder=\"' +\n          escapeHTML(x.replace(/(<([^>]+)>)/gi, \"\")) +\n          '\" /></th>'\n        );\n      }).join(\"\");\n      footer = \"<tfoot>\" + footer + \"</tfoot>\";\n    }\n    const content =\n      '<table class=\"table table-striped table-hover\">' +\n      header +\n      footer +\n      \"</table>\";\n\n    $el.append(content);\n\n    // options that should be eval()ed\n    if (data.evalOptions) {\n      $.each(data.evalOptions, function (i, x) {\n        /*jshint evil: true */\n        // @ts-expect-error; If `evalOptions` is defined, `data.options` should be defined\n        data.options[x] = indirectEval(\"(\" + data.options[x] + \")\");\n      });\n    }\n\n    // caseInsensitive searching? default true\n    const searchCI = data.options?.search?.caseInsensitive !== false;\n    const oTable = $(el)\n      .children(\"table\")\n      .DataTable(\n        $.extend(\n          {\n            processing: true,\n            serverSide: true,\n            order: [],\n            orderClasses: false,\n            pageLength: 25,\n            ajax: {\n              url: data.action,\n              type: \"POST\",\n              data: function (d: NonNullable<typeof data.options>) {\n                d.search || (d.search = {});\n                d.search.caseInsensitive = searchCI;\n                // Copy from the R value (`data.escape`) to the escape option\n                // (`d.escape`) similar to `data.options.escape`;\n                // Note: this logic may be wrong, but the method is strongly\n                // deprecated in favor of DT package. So users should not\n                // naturally run this line of code\n                d.escape = data.escape;\n              },\n            },\n          },\n          data.options\n        )\n      );\n    // the table object may need post-processing\n\n    if (typeof data.callback === \"string\") {\n      /*jshint evil: true */\n      const callback = indirectEval(\"(\" + data.callback + \")\");\n\n      if (typeof callback === \"function\") callback(oTable);\n    }\n\n    // use debouncing for searching boxes\n    $el\n      .find(\"label input\")\n      .first()\n      .unbind(\"keyup\")\n      .keyup(\n        debounce(data.searchDelay, function (this: HTMLInputElement) {\n          oTable.search(this.value).draw();\n        })\n      );\n    const searchInputs = $el.find(\"tfoot input\");\n\n    if (searchInputs.length > 0) {\n      // this is a little weird: aoColumns/bSearchable are still in DT 1.10\n      // https://github.com/DataTables/DataTables/issues/388\n      $.each(oTable.settings()[0].aoColumns, function (i, x) {\n        // hide the text box if not searchable\n        if (!x.bSearchable) searchInputs.eq(i as number).hide();\n      });\n      searchInputs.keyup(\n        debounce(data.searchDelay, function (this: HTMLInputElement) {\n          oTable.column(searchInputs.index(this)).search(this.value).draw();\n        })\n      );\n    }\n    // FIXME: ugly scrollbars in tab panels b/c Bootstrap uses 'visible: auto'\n    $el.parents(\".tab-content\").css(\"overflow\", \"visible\");\n  }\n}\n\nexport { DatatableOutputBinding };\n", "import type { InputPolicy } from \"../inputPolicies\";\nimport type { InputRatePolicy } from \"../inputPolicies/inputRatePolicy\";\nimport type { AnyVoidFunction } from \"../utils/extraTypes\";\n\nclass Debouncer<X extends AnyVoidFunction> implements InputRatePolicy<X> {\n  target: InputPolicy | null;\n  func: X;\n  delayMs: number | undefined;\n  timerId: ReturnType<typeof setTimeout> | null;\n  args: Parameters<X> | null;\n\n  constructor(\n    target: InputPolicy | null,\n    func: X,\n    delayMs: number | undefined\n  ) {\n    this.target = target;\n    this.func = func;\n    this.delayMs = delayMs;\n\n    this.timerId = null;\n    this.args = null;\n  }\n\n  normalCall(...args: Parameters<X>): void {\n    this.$clearTimer();\n    this.args = args;\n\n    this.timerId = setTimeout(() => {\n      // IE8 doesn't reliably clear timeout, so this additional\n      // check is needed\n      if (this.timerId === null) return;\n      this.$clearTimer();\n      this.$invoke();\n    }, this.delayMs);\n  }\n  immediateCall(...args: Parameters<X>): void {\n    this.$clearTimer();\n    this.args = args;\n    this.$invoke();\n  }\n  isPending(): boolean {\n    return this.timerId !== null;\n  }\n  $clearTimer(): void {\n    if (this.timerId !== null) {\n      clearTimeout(this.timerId);\n      this.timerId = null;\n    }\n  }\n  $invoke(): void {\n    if (this.args && this.args.length > 0) {\n      this.func.apply(this.target, this.args);\n    } else {\n      this.func.apply(this.target);\n    }\n    this.args = null;\n  }\n}\n\n// Returns a debounced version of the given function.\n// Debouncing means that when the function is invoked,\n// there is a delay of `threshold` milliseconds before\n// it is actually executed, and if the function is\n// invoked again before that threshold has elapsed then\n// the clock starts over.\n//\n// For example, if a function is debounced with a\n// threshold of 1000ms, then calling it 17 times at\n// 900ms intervals will result in a single execution\n// of the underlying function, 1000ms after the 17th\n// call.\nfunction debounce<T extends (...args: unknown[]) => void>(\n  threshold: number | undefined,\n  func: T\n): (...args: Parameters<T>) => void {\n  let timerId: ReturnType<typeof setTimeout> | null = null;\n\n  // Do not alter `function()` into an arrow function.\n  // The `this` context needs to be dynamically bound\n  return function thisFunc(...args: Parameters<T>) {\n    if (timerId !== null) {\n      clearTimeout(timerId);\n      timerId = null;\n    }\n    timerId = setTimeout(() => {\n      // IE8 doesn't reliably clear timeout, so this additional\n      // check is needed\n      if (timerId === null) return;\n      timerId = null;\n      // Applying on `thisFunc` passes through the `this` context\n      func.apply(thisFunc, args);\n    }, threshold);\n  };\n}\n\nexport { Debouncer, debounce };\n", "import type { InputPolicy } from \"../inputPolicies\";\nimport type { InputRatePolicy } from \"../inputPolicies/inputRatePolicy\";\nimport type { AnyVoidFunction } from \"../utils/extraTypes\";\n\nclass Invoker<X extends AnyVoidFunction> implements InputRatePolicy<X> {\n  target: InputPolicy | null;\n  func: X;\n\n  constructor(target: InputPolicy | null, func: X) {\n    this.target = target;\n    this.func = func;\n  }\n\n  // TODO-barret - Don't know how to define the method twice and still have access to \"this\"\n  normalCall(...args: Parameters<X>): void {\n    this.func.apply(this.target, args);\n  }\n  immediateCall(...args: Parameters<X>): void {\n    this.func.apply(this.target, args);\n  }\n}\n\nexport { Invoker };\n", "/* eslint-disable indent */\nimport type { InputPolicy } from \"../inputPolicies\";\nimport type { InputRatePolicy } from \"../inputPolicies/inputRatePolicy\";\nimport type { AnyVoidFunction } from \"../utils/extraTypes\";\n\nclass Throttler<X extends AnyVoidFunction> implements InputRatePolicy<X> {\n  target: InputPolicy | null;\n  func: X;\n  delayMs: number | undefined;\n  timerId: ReturnType<typeof setTimeout> | null;\n  args: Parameters<X> | null;\n\n  constructor(\n    target: InputPolicy | null,\n    func: X,\n    delayMs: number | undefined\n  ) {\n    this.target = target;\n    this.func = func;\n    this.delayMs = delayMs;\n\n    this.timerId = null;\n    this.args = null;\n  }\n\n  // If no timer is currently running, immediately call the function and set the\n  // timer; if a timer is running out, just queue up the args for the call when\n  // the timer runs out. Later calls during the same timeout will overwrite\n  // earlier ones.\n  normalCall(...args: Parameters<X>): void {\n    // This will be an empty array (not null) if called without arguments, and\n    // `[null]` if called with `null`.\n    this.args = args;\n\n    // Only invoke immediately if there isn't a timer running.\n    if (this.timerId === null) {\n      this.$invoke();\n    }\n  }\n\n  // Reset the timer if active and call immediately\n  immediateCall(...args: Parameters<X>): void {\n    this.$clearTimer();\n    this.args = args;\n    this.$invoke();\n  }\n\n  // Is there a call waiting to send?\n  isPending(): boolean {\n    return this.args !== null;\n  }\n\n  $clearTimer(): void {\n    if (this.timerId !== null) {\n      clearTimeout(this.timerId);\n      this.timerId = null;\n    }\n  }\n\n  // Invoke the throttled function with the currently-stored args and start the\n  // timer.\n  $invoke(): void {\n    if (this.args === null) {\n      // Shouldn't get here, because $invoke should only be called right after\n      // setting this.args. But just in case.\n      return;\n    }\n\n    this.func.apply(this.target, this.args);\n\n    // Clear the stored args. This is used to track if a call is pending.\n    this.args = null;\n\n    // Set this.timerId to a newly-created timer, which will invoke a call with\n    // the most recently called args (if any) when it expires.\n    this.timerId = setTimeout(() => {\n      // IE8 doesn't reliably clear timeout, so this additional check is needed\n      if (this.timerId === null) return;\n\n      this.$clearTimer();\n      // Do we have a call queued up?\n      if (this.isPending()) {\n        // If so, invoke the call with queued args and reset timer.\n        this.$invoke();\n      }\n    }, this.delayMs);\n  }\n}\n\n// // Returns a throttled version of the given function.\n// // Throttling means that the underlying function will\n// // be executed no more than once every `threshold`\n// // milliseconds.\n// //\n// // For example, if a function is throttled with a\n// // threshold of 1000ms, then calling it 17 times at\n// // 900ms intervals will result in something like 15\n// // or 16 executions of the underlying function.\n// // eslint-disable-next-line no-unused-vars\n// function throttle<T>(\n//   threshold: number,\n//   func: (...args: T[]) => void\n// ): (...args: T[]) => void {\n//   let executionPending = false;\n//   let timerId: number | null = null;\n//   let self: unknown, args: T[] | null;\n\n//   function throttled(...argumentVals: T[]) {\n//     self = null;\n//     args = null;\n//     if (timerId === null) {\n//       // Haven't seen a call recently. Execute now and\n//       // start a timer to buffer any subsequent calls.\n//       timerId = setTimeout(function () {\n//         // When time expires, clear the timer; and if\n//         // there has been a call in the meantime, repeat.\n//         timerId = null;\n//         if (executionPending) {\n//           executionPending = false;\n//           throttled.apply(self, args || []);\n//         }\n//       }, threshold);\n//       func.apply(this, argumentVals);\n//     } else {\n//       // Something executed recently. Don't do anything\n//       // except set up target/arguments to be called later\n//       executionPending = true;\n//       self = this as unknown;\n//       args = argumentVals;\n//     }\n//   }\n//   return throttled;\n// }\n\nexport {\n  Throttler,\n  // throttle\n};\n", "import $ from \"jquery\";\nimport type { ErrorsMessageValue } from \"../../shiny/shinyapp\";\nimport { asArray } from \"../../utils\";\n\nclass OutputBinding {\n  name!: string;\n\n  // Returns a jQuery object or element array that contains the\n  // descendants of scope that match this binding\n  find(scope: HTMLElement | JQuery<HTMLElement>): JQuery<HTMLElement> {\n    throw \"Not implemented\";\n    scope;\n  }\n  renderValue(el: HTMLElement, data: unknown): Promise<void> | void {\n    throw \"Not implemented\";\n    el;\n    data;\n  }\n\n  getId(el: HTMLElement): string {\n    return el.getAttribute(\"data-input-id\") || el.id;\n  }\n\n  async onValueChange(el: HTMLElement, data: unknown): Promise<void> {\n    this.clearError(el);\n    await this.renderValue(el, data);\n  }\n  onValueError(el: HTMLElement, err: ErrorsMessageValue): void {\n    this.renderError(el, err);\n  }\n  renderError(el: HTMLElement, err: ErrorsMessageValue): void {\n    this.clearError(el);\n    if (err.message === \"\") {\n      // not really error, but we just need to wait (e.g. action buttons)\n      $(el).empty();\n      return;\n    }\n    let errClass = \"shiny-output-error\";\n\n    if (err.type !== null) {\n      // use the classes of the error condition as CSS class names\n      errClass =\n        errClass +\n        \" \" +\n        $.map(asArray(err.type), function (type) {\n          return errClass + \"-\" + type;\n        }).join(\" \");\n    }\n    $(el).addClass(errClass).text(err.message);\n  }\n  clearError(el: HTMLElement): void {\n    $(el).attr(\"class\", function (i, c) {\n      return c.replace(/(^|\\s)shiny-output-error\\S*/g, \"\");\n    });\n  }\n  showProgress(el: HTMLElement, show: boolean): void {\n    const recalcClass = \"recalculating\";\n\n    if (show) $(el).addClass(recalcClass);\n    else $(el).removeClass(recalcClass);\n  }\n}\n\nexport { OutputBinding };\n", "import $ from \"jquery\";\n\nimport { OutputBinding } from \"./outputBinding\";\n\nclass DownloadLinkOutputBinding extends OutputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\"a.shiny-download-link\");\n  }\n  renderValue(el: HTMLElement, data: string): void {\n    el.setAttribute(\"href\", data);\n    el.classList.remove(\"disabled\");\n    el.removeAttribute(\"aria-disabled\");\n    el.removeAttribute(\"tabindex\");\n  }\n  // Progress shouldn't be shown on the download button\n  // (progress will be shown as a page level pulse instead)\n  showProgress(el: HTMLElement, show: boolean): void {\n    return;\n    el;\n    show;\n  }\n}\n\ninterface FileDownloadEvent extends JQuery.Event {\n  name: string;\n  href: string;\n}\n\n// TODO-barret should this be in an init method?\n// Trigger shiny:filedownload event whenever a downloadButton/Link is clicked\n$(document).on(\n  \"click.shinyDownloadLink\",\n  \"a.shiny-download-link\",\n  function (e: Event) {\n    e;\n\n    const evt: FileDownloadEvent = $.Event(\"shiny:filedownload\");\n\n    evt.name = this.id;\n    evt.href = this.href;\n    $(document).trigger(evt);\n  }\n);\n\nexport { DownloadLinkOutputBinding };\n", "import $ from \"jquery\";\n\nimport { shinyUnbindAll } from \"../../shiny/initedMethods\";\nimport { renderContentAsync } from \"../../shiny/render\";\nimport type { ErrorsMessageValue } from \"../../shiny/shinyapp\";\nimport { OutputBinding } from \"./outputBinding\";\n\nclass HtmlOutputBinding extends OutputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\".shiny-html-output\");\n  }\n  onValueError(el: HTMLElement, err: ErrorsMessageValue): void {\n    shinyUnbindAll(el);\n    this.renderError(el, err);\n  }\n  override async renderValue(\n    el: HTMLElement,\n    data: Parameters<typeof renderContentAsync>[1]\n  ): Promise<void> {\n    await renderContentAsync(el, data);\n  }\n}\n\nexport { HtmlOutputBinding };\n", "import $ from \"jquery\";\nimport { asArray, hasDefinedProperty } from \"../utils\";\nimport { isIE } from \"../utils/browser\";\nimport type { BindScope } from \"./bind\";\nimport {\n  shinyBindAll,\n  shinyInitializeInputs,\n  shinyUnbindAll,\n} from \"./initedMethods\";\nimport { sendImageSizeFns } from \"./sendImageSize\";\n\nimport type { WherePosition } from \"./singletons\";\nimport { renderHtml as singletonsRenderHtml } from \"./singletons\";\n\n// There are synchronous and asynchronous versions of the exported functions\n// renderContent(), renderHtml(), and renderDependencies(). This is because they\n// the original versions of these functions were synchronous, but we added\n// support for asynchronous rendering, to avoid the deprecated XMLHttpRequest\n// function (https://github.com/rstudio/shiny/pull/3666).\n//\n// At the bottom, there is the appendScriptTags(), which calls $.append(), which\n// in turn calls (synchronous) XMLHttpRequest(); and its counterpart\n// appendScriptTagsAsync(), which uses a different (asynchronous) method. The\n// sync and async versions of this function necessitate the sync and async\n// versions of the other functions.\n//\n// The async versions of these functions are used internally and should be used\n// for new external code when possible, but for backward compatibility for\n// external code that calls these functions, we'll keep the synchronous versions\n// around as well.\n\n// =============================================================================\n// renderContent\n// =============================================================================\n// Render HTML in a DOM element, add dependencies, and bind Shiny\n// inputs/outputs. `content` can be null, a string, or an object with\n// properties 'html' and 'deps'.\nasync function renderContentAsync(\n  el: BindScope,\n  content: string | { html: string; deps?: HtmlDep[] } | null,\n  where: WherePosition = \"replace\"\n): Promise<void> {\n  if (where === \"replace\") {\n    shinyUnbindAll(el);\n  }\n\n  let html = \"\";\n  let dependencies: HtmlDep[] = [];\n\n  if (content === null) {\n    html = \"\";\n  } else if (typeof content === \"string\") {\n    html = content;\n  } else if (typeof content === \"object\") {\n    html = content.html;\n    dependencies = content.deps || [];\n  }\n\n  await renderHtmlAsync(html, el, dependencies, where);\n\n  let scope: BindScope = el;\n\n  if (where === \"replace\") {\n    shinyInitializeInputs(el);\n    await shinyBindAll(el);\n  } else {\n    const $parent = $(el).parent();\n\n    if ($parent.length > 0) {\n      scope = $parent;\n      if (where === \"beforeBegin\" || where === \"afterEnd\") {\n        const $grandparent = $parent.parent();\n\n        if ($grandparent.length > 0) scope = $grandparent;\n      }\n    }\n    shinyInitializeInputs(scope);\n    await shinyBindAll(scope);\n  }\n}\n\nfunction renderContent(\n  el: BindScope,\n  content: string | { html: string; deps?: HtmlDep[] } | null,\n  where: WherePosition = \"replace\"\n): Promise<void> {\n  if (where === \"replace\") {\n    shinyUnbindAll(el);\n  }\n\n  let html = \"\";\n  let dependencies: HtmlDep[] = [];\n\n  if (content === null) {\n    html = \"\";\n  } else if (typeof content === \"string\") {\n    html = content;\n  } else if (typeof content === \"object\") {\n    html = content.html;\n    dependencies = content.deps || [];\n  }\n\n  renderHtml(html, el, dependencies, where);\n\n  let scope: BindScope = el;\n\n  if (where === \"replace\") {\n    shinyInitializeInputs(el);\n    return shinyBindAll(el);\n  } else {\n    const $parent = $(el).parent();\n\n    if ($parent.length > 0) {\n      scope = $parent;\n      if (where === \"beforeBegin\" || where === \"afterEnd\") {\n        const $grandparent = $parent.parent();\n\n        if ($grandparent.length > 0) scope = $grandparent;\n      }\n    }\n    shinyInitializeInputs(scope);\n    return shinyBindAll(scope);\n  }\n}\n\n// =============================================================================\n// renderHtml\n// =============================================================================\n// Render HTML in a DOM element, inserting singletons into head as needed\nasync function renderHtmlAsync(\n  html: string,\n  el: BindScope,\n  dependencies: HtmlDep[],\n  where: WherePosition = \"replace\"\n): Promise<ReturnType<typeof singletonsRenderHtml>> {\n  await renderDependenciesAsync(dependencies);\n  return singletonsRenderHtml(html, el, where);\n}\n\n// Render HTML in a DOM element, inserting singletons into head as needed\nfunction renderHtml(\n  html: string,\n  el: BindScope,\n  dependencies: HtmlDep[],\n  where: WherePosition = \"replace\"\n): ReturnType<typeof singletonsRenderHtml> {\n  renderDependencies(dependencies);\n  return singletonsRenderHtml(html, el, where);\n}\n\n// =============================================================================\n// renderDependencies\n// =============================================================================\nasync function renderDependenciesAsync(\n  dependencies: HtmlDep[] | null\n): Promise<void> {\n  if (dependencies) {\n    for (const dep of dependencies) {\n      await renderDependencyAsync(dep);\n    }\n  }\n}\n\nfunction renderDependencies(dependencies: HtmlDep[] | null): void {\n  if (dependencies) {\n    for (const dep of dependencies) {\n      renderDependency(dep);\n    }\n  }\n}\n\n// =============================================================================\n// HTML dependency types\n// =============================================================================\ntype HtmlDepVersion = string;\n\ntype MetaItem = {\n  name: string;\n  content: string;\n  [x: string]: string;\n};\n\ntype StylesheetItem = {\n  href: string;\n  rel?: string;\n  type?: string;\n};\n\ntype ScriptItem = {\n  src: string;\n  [x: string]: string;\n};\n\ntype AttachmentItem = {\n  key: string;\n  href: string;\n  [x: string]: string;\n};\n\n// This supports the older R htmltools HtmlDependency structure, and it also\n// encompasses the newer, consistent HTMLDependency structure.\ntype HtmlDep = {\n  name: string;\n  version: HtmlDepVersion;\n  restyle?: boolean;\n  src?: { href: string };\n  meta?: MetaItem[] | { [x: string]: string };\n  stylesheet?: string[] | StylesheetItem | StylesheetItem[] | string;\n  script?: ScriptItem | ScriptItem[] | string[] | string;\n  attachment?: AttachmentItem[] | string[] | string | { [key: string]: string };\n  head?: string;\n};\n\n// This is the newer, consistent HTMLDependency structure.\ntype HtmlDepNormalized = {\n  name: string;\n  version: HtmlDepVersion;\n  restyle?: boolean;\n  meta: MetaItem[];\n  stylesheet: StylesheetItem[];\n  script: ScriptItem[];\n  attachment: AttachmentItem[];\n  head?: string;\n};\n\n// =============================================================================\n// renderDependency helper functions\n// =============================================================================\nconst htmlDependencies: { [key: string]: HtmlDepVersion } = {};\n\nfunction registerDependency(name: string, version: HtmlDepVersion): void {\n  htmlDependencies[name] = version;\n}\n\n// Re-render stylesheet(s) if the dependency has specificially requested it\n// and it matches an existing dependency (name and version)\nfunction needsRestyle(dep: HtmlDepNormalized) {\n  if (!dep.restyle) {\n    return false;\n  }\n  const names = Object.keys(htmlDependencies);\n  const idx = names.indexOf(dep.name);\n\n  if (idx === -1) {\n    return false;\n  }\n  return htmlDependencies[names[idx]] === dep.version;\n}\n\nfunction addStylesheetsAndRestyle(links: HTMLLinkElement[]): void {\n  const $head = $(\"head\").first();\n\n  // This inline <style> based approach works for IE11\n  const refreshStyle = function (href: string, oldSheet: CSSStyleSheet | null) {\n    const xhr = new XMLHttpRequest();\n\n    xhr.open(\"GET\", href);\n    xhr.onload = function () {\n      const id =\n        \"shiny_restyle_\" + href.split(\"?restyle\")[0].replace(/\\W/g, \"_\");\n      const oldStyle = $head.find(\"style#\" + id);\n      const newStyle = $(\"<style>\").attr(\"id\", id).html(xhr.responseText);\n\n      $head.append(newStyle);\n\n      // We can remove the old styles immediately because the new styles\n      // should have been applied synchronously.\n      oldStyle.remove();\n      removeSheet(oldSheet);\n      sendImageSizeFns.transitioned();\n    };\n    xhr.send();\n  };\n\n  const findSheet = function (href: string | undefined): CSSStyleSheet | null {\n    if (!href) return null;\n\n    for (let i = 0; i < document.styleSheets.length; i++) {\n      const sheet = document.styleSheets[i];\n      // The sheet's href is a full URL\n\n      if (typeof sheet.href === \"string\" && sheet.href.indexOf(href) > -1) {\n        return sheet;\n      }\n    }\n    return null;\n  };\n\n  // Removes the stylesheet from document.styleSheets, and also removes\n  // the owning <link> element, if present.\n  const removeSheet = function (sheet: CSSStyleSheet | null) {\n    if (!sheet) return;\n    sheet.disabled = true;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore; .cssText doesn't normally exist, but it does on IE?\n    if (isIE()) sheet.cssText = \"\";\n\n    if (sheet.ownerNode instanceof Element) {\n      $(sheet.ownerNode).remove();\n    }\n  };\n\n  links.map((link) => {\n    const $link = $(link);\n    // Find any document.styleSheets that match this link's href\n    // so we can remove it after bringing in the new stylesheet\n    const oldSheet = findSheet($link.attr(\"href\"));\n\n    // Add a timestamp to the href to prevent caching\n    const href = $link.attr(\"href\") + \"?restyle=\" + new Date().getTime();\n    // Use inline <style> approach for IE, otherwise use the more elegant\n    // <link> -based approach\n\n    if (isIE()) {\n      refreshStyle(href, oldSheet);\n    } else {\n      $link.attr(\"href\", href);\n\n      // This part is a bit tricky. The link's onload callback will be\n      // invoked after the file is loaded, but it can be _before_ the\n      // styles are actually applied. The amount of time it takes for the\n      // style to be applied is not predictable. We need to make sure the\n      // styles are applied before we send updated size/style information\n      // to the server.\n      //\n      // We do this by adding _another_ link, with CSS content\n      // base64-encoded and inlined into the href. We also add a dummy DOM\n      // element that the CSS applies to. The dummy CSS includes a\n      // transition, and when the `transitionend` event happens, we call\n      // sendImageSizeFns.transitioned() and remove the old sheet. We also remove the\n      // dummy DOM element and dummy CSS content.\n      //\n      // The reason this works is because (we assume) that if multiple\n      // <link> tags are added, they will be applied in the same order\n      // that they are loaded. This seems to be true in the browsers we\n      // have tested.\n      //\n      // Because it is common for multiple stylesheets to arrive close\n      // together, but not on exactly the same tick, we call\n      // sendImageSizeFns.transitioned(), which is debounced. Otherwise, it can result in\n      // the same plot being redrawn multiple times with different\n      // styling.\n      $link.attr(\"onload\", () => {\n        const $dummyEl = $(\"<div>\")\n          .css(\"transition\", \"0.1s all\")\n          .css(\"position\", \"absolute\")\n          .css(\"top\", \"-1000px\")\n          .css(\"left\", \"0\");\n\n        $dummyEl.one(\"transitionend\", () => {\n          $dummyEl.remove();\n          removeSheet(oldSheet);\n          sendImageSizeFns.transitioned();\n        });\n        $(document.body).append($dummyEl);\n\n        // To ensure a transition actually happens, change the inline style _after_\n        // the DOM element has been added, and also use a new random color each time\n        // to prevent any potential caching done by the browser\n        const color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n\n        setTimeout(() => $dummyEl.css(\"color\", color), 10);\n      });\n\n      $head.append(link);\n    }\n  });\n}\n\nfunction getStylesheetLinkTags(dep: HtmlDepNormalized): HTMLLinkElement[] {\n  // Convert stylesheet objs to links early, because if `restyle` is true, we'll\n  // pass them through to `addStylesheetsAndRestyle` below.\n  return dep.stylesheet.map((x) => {\n    // Add \"rel\" and \"type\" fields if not already present.\n    if (!hasDefinedProperty(x, \"rel\")) x.rel = \"stylesheet\";\n    if (!hasDefinedProperty(x, \"type\")) x.type = \"text/css\";\n\n    const link = document.createElement(\"link\");\n\n    Object.entries(x).forEach(function ([attr, val]: [\n      string,\n      string | undefined\n    ]) {\n      if (attr === \"href\") {\n        val = encodeURI(val as string);\n      }\n      // If val isn't truthy (e.g., null), consider it a boolean attribute\n      link.setAttribute(attr, val ? val : \"\");\n    });\n\n    return link;\n  });\n}\n\nfunction appendStylesheetLinkTags(\n  dep: HtmlDepNormalized,\n  $head: JQuery<HTMLElement>\n): void {\n  const stylesheetLinks = getStylesheetLinkTags(dep);\n\n  if (stylesheetLinks.length !== 0) {\n    $head.append(stylesheetLinks);\n  }\n}\n\nfunction appendScriptTags(dep: HtmlDepNormalized, $head: JQuery<HTMLElement>) {\n  dep.script.forEach((x) => {\n    const script = document.createElement(\"script\");\n\n    Object.entries(x).forEach(function ([attr, val]) {\n      if (attr === \"src\") {\n        val = encodeURI(val);\n      }\n      // If val isn't truthy (e.g., null), consider it a boolean attribute\n      script.setAttribute(attr, val ? val : \"\");\n    });\n\n    $head.append(script);\n  });\n}\n\nasync function appendScriptTagsAsync(dep: HtmlDepNormalized): Promise<void> {\n  const scriptPromises: Array<Promise<any>> = [];\n\n  dep.script.forEach((x) => {\n    const script = document.createElement(\"script\");\n\n    if (!hasDefinedProperty(x, \"async\")) {\n      // Set async to false by default, so that if there are multiple script\n      // tags, they are guaranteed to run in order. For dynamically added\n      // <script> tags, browsers set async to true by default, which differs\n      // from static <script> tags in the html, which default to false.\n      //\n      // Refs:\n      // https://stackoverflow.com/a/8996894/412655\n      // https://jason-ge.medium.com/dynamically-load-javascript-files-in-order-5318ac6bcc61\n      //\n      // Note that one odd thing about these dynamically-created <script> tags\n      // is that even though the JS object's `x.script` property is true, it\n      // does NOT show up as a property on the <script> element.\n      script.async = false;\n    }\n\n    Object.entries(x).forEach(function ([attr, val]) {\n      if (attr === \"src\") {\n        val = encodeURI(val);\n      }\n      // If val isn't truthy (e.g., null), consider it a boolean attribute\n      script.setAttribute(attr, val ? val : \"\");\n    });\n\n    const p = new Promise((resolve, reject) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      script.onload = (e: Event) => {\n        resolve(null);\n      };\n      script.onerror = (e: Event | string) => {\n        reject(e);\n      };\n    });\n\n    scriptPromises.push(p);\n    document.head.append(script);\n  });\n\n  await Promise.allSettled(scriptPromises);\n}\n\nfunction appendMetaTags(\n  dep: HtmlDepNormalized,\n  $head: JQuery<HTMLElement>\n): void {\n  dep.meta.forEach((x) => {\n    const meta = document.createElement(\"meta\");\n\n    for (const [attr, val] of Object.entries(x)) {\n      meta.setAttribute(attr, val);\n    }\n    $head.append(meta);\n  });\n}\n\nfunction appendAttachmentLinkTags(\n  dep: HtmlDepNormalized,\n  $head: JQuery<HTMLElement>\n): void {\n  dep.attachment.forEach((x) => {\n    const link = $(\"<link rel='attachment'>\")\n      .attr(\"id\", dep.name + \"-\" + x.key + \"-attachment\")\n      .attr(\"href\", encodeURI(x.href));\n\n    $head.append(link);\n  });\n}\n\nfunction appendExtraHeadContent(\n  dep: HtmlDepNormalized,\n  $head: JQuery<HTMLElement>\n): void {\n  if (dep.head) {\n    const $newHead = $(\"<head></head>\");\n\n    $newHead.html(dep.head);\n    $head.append($newHead.children());\n  }\n}\n\n// =============================================================================\n// renderDependency\n// =============================================================================\n// Client-side dependency resolution and rendering\nasync function renderDependencyAsync(dep_: HtmlDep): Promise<boolean> {\n  const dep = normalizeHtmlDependency(dep_);\n\n  // If a restyle is needed, do that stuff and return. Note that other items\n  // (like scripts) aren't added, because they would have been added in a\n  // previous run.\n  if (needsRestyle(dep)) {\n    addStylesheetsAndRestyle(getStylesheetLinkTags(dep));\n    return true;\n  }\n\n  if (hasDefinedProperty(htmlDependencies, dep.name)) return false;\n\n  registerDependency(dep.name, dep.version);\n\n  const $head = $(\"head\").first();\n\n  // Add each type of element to the DOM.\n  appendMetaTags(dep, $head);\n  appendStylesheetLinkTags(dep, $head);\n  await appendScriptTagsAsync(dep);\n  appendAttachmentLinkTags(dep, $head);\n  appendExtraHeadContent(dep, $head);\n\n  return true;\n}\n\n// Old-school synchronous version of renderDependencyAsync. This function is\n// here to preserve compatibility with outside packages that use it. The\n// implementation is the same except that it calls appendScriptTags() instead of\n// appendScriptTagsAsync().\nfunction renderDependency(dep_: HtmlDep): boolean {\n  const dep = normalizeHtmlDependency(dep_);\n\n  // If a restyle is needed, do that stuff and return. Note that other items\n  // (like scripts) aren't added, because they would have been added in a\n  // previous run.\n  if (needsRestyle(dep)) {\n    addStylesheetsAndRestyle(getStylesheetLinkTags(dep));\n    return true;\n  }\n\n  if (hasDefinedProperty(htmlDependencies, dep.name)) return false;\n\n  registerDependency(dep.name, dep.version);\n\n  const $head = $(\"head\").first();\n\n  // Add each type of element to the DOM.\n  appendMetaTags(dep, $head);\n  appendStylesheetLinkTags(dep, $head);\n  appendScriptTags(dep, $head);\n  appendAttachmentLinkTags(dep, $head);\n  appendExtraHeadContent(dep, $head);\n\n  return true;\n}\n\n// Convert legacy HtmlDependency to new HTMLDependency format. This is\n// idempotent; new HTMLDependency objects are returned unchanged.\nfunction normalizeHtmlDependency(dep: HtmlDep): HtmlDepNormalized {\n  const hrefPrefix: string | undefined = dep.src?.href;\n\n  const result: HtmlDepNormalized = {\n    name: dep.name,\n    version: dep.version,\n    restyle: dep.restyle,\n    meta: [],\n    stylesheet: [],\n    script: [],\n    attachment: [],\n    head: dep.head,\n  };\n\n  if (dep.meta) {\n    if (Array.isArray(dep.meta)) {\n      // Assume we already have the canonical format:\n      //   [{name: \"myname\", content: \"mycontent\"}, ...]\n      result.meta = dep.meta;\n    } else {\n      // If here, then we have the legacy format, which we have to convert.\n      //   {myname: \"mycontent\", ...}\n      result.meta = Object.entries(dep.meta).map(function ([attr, val]) {\n        return { name: attr, content: val };\n      });\n    }\n  }\n\n  result.stylesheet = asArray(dep.stylesheet).map((s) => {\n    if (typeof s === \"string\") {\n      s = { href: s };\n    }\n    if (hrefPrefix) {\n      s.href = hrefPrefix + \"/\" + s.href;\n    }\n    return s;\n  });\n\n  result.script = asArray(dep.script).map((s) => {\n    if (typeof s === \"string\") {\n      s = { src: s };\n    }\n    if (hrefPrefix) {\n      s.src = hrefPrefix + \"/\" + s.src;\n    }\n    return s;\n  });\n\n  // dep.attachment might be one of the following types, which we will convert\n  // as shown:\n  // 0. undefined => []\n  // 1. A single string:\n  //    \"foo.txt\"\n  //    => [{key: \"1\", href: \"foo.txt\"}]\n  // 2. An array of strings:\n  //    [\"foo.txt\" ,\"bar.dat\"]\n  //    => [{key: \"1\", href: \"foo.txt\"}, {key: \"2\", href: \"bar.dat\"}]\n  // 3. An object:\n  //    {foo: \"foo.txt\", bar: \"bar.dat\"}\n  //    => [{key: \"foo\", href: \"foo.txt\"}, {key: \"bar\", href: \"bar.dat\"}]\n  // 4. An array of objects:\n  //    [{key: \"foo\", href: \"foo.txt\"}, {key: \"bar\", href: \"bar.dat\"}]\n  //    => (Returned unchanged)\n  //\n  // Note that the first three formats are from legacy code, and the last format\n  // is from new code.\n  let attachments = dep.attachment;\n\n  // Convert format 0 (undefined) to format 2 or 4.\n  if (!attachments) attachments = [];\n\n  // Convert format 1 to format 2.\n  if (typeof attachments === \"string\") attachments = [attachments];\n\n  if (Array.isArray(attachments)) {\n    // If we've gotten here, the format is either 2 or 4. Even though they are\n    // quite different, we can handle them both in the same loop.\n\n    // Need to give TypeScript a bit of help so that it's happy with .map()\n    // below. Instead of a union of two array types, tell it it's an array of\n    // a union of two types.\n    const tmp = <Array<AttachmentItem | string>>attachments;\n\n    // The contract for attachments is that arrays of attachments are\n    // addressed using 1-based indexes. Convert this array to an object.\n    attachments = tmp.map((attachment, index) => {\n      if (typeof attachment === \"string\") {\n        return {\n          key: (index + 1).toString(),\n          href: attachment,\n        };\n      } else {\n        return attachment;\n      }\n    });\n  } else {\n    // If we got here, it's format 3.\n    attachments = Object.entries(attachments).map(function ([attr, val]) {\n      return { key: attr, href: val };\n    });\n  }\n\n  // At this point, we've normalized the format to #4. Now we can iterate over\n  // it and prepend `hrefPrefix`.\n  result.attachment = attachments.map((s) => {\n    if (hrefPrefix) {\n      s.href = hrefPrefix + \"/\" + s.href;\n    }\n    return s;\n  });\n\n  return result;\n}\n\nexport {\n  renderContentAsync,\n  renderContent,\n  renderHtmlAsync,\n  renderHtml,\n  renderDependenciesAsync,\n  renderDependencies,\n  registerDependency,\n};\nexport type { HtmlDep };\n", "import type { InputBatchSender } from \"../inputPolicies\";\nimport { debounce, Debouncer } from \"../time\";\n\nclass SendImageSize {\n  // This function gets defined in initShiny() and 'hoisted' so it can be reused\n  // (to send CSS info) inside of Shiny.renderDependencies()\n  regular!: () => void;\n  transitioned!: () => void;\n\n  setImageSend(\n    inputBatchSender: InputBatchSender,\n    doSendImageSize: () => void\n  ): Debouncer<typeof doSendImageSize> {\n    const sendImageSizeDebouncer = new Debouncer(null, doSendImageSize, 0);\n\n    this.regular = function () {\n      sendImageSizeDebouncer.normalCall();\n    };\n\n    // Make sure sendImageSize actually gets called before the inputBatchSender\n    // sends data to the server.\n    inputBatchSender.lastChanceCallback.push(function () {\n      if (sendImageSizeDebouncer.isPending())\n        sendImageSizeDebouncer.immediateCall();\n    });\n\n    // A version of sendImageSize which debounces for longer.\n    this.transitioned = debounce(200, this.regular);\n\n    return sendImageSizeDebouncer;\n  }\n}\n\nconst sendImageSizeFns = new SendImageSize();\n\nexport { sendImageSizeFns };\n", "import $ from \"jquery\";\nimport type { BindScope } from \"./bind\";\n\nconst reSingleton = /<!--(SHINY.SINGLETON\\[([\\w]+)\\])-->([\\s\\S]*?)<!--\\/\\1-->/;\nconst reHead = /<head(?:\\s[^>]*)?>([\\s\\S]*?)<\\/head>/;\n\nconst knownSingletons: { [key: string]: boolean } = {};\n\ntype WherePosition =\n  | \"afterBegin\"\n  | \"afterEnd\"\n  | \"beforeBegin\"\n  | \"beforeEnd\"\n  | \"replace\";\n\nfunction renderHtml(\n  html: string,\n  el: BindScope,\n  where: WherePosition\n): ReturnType<typeof processHtml> {\n  const processed = processHtml(html);\n\n  addToHead(processed.head);\n  register(processed.singletons);\n\n  // N.B. even though the DOM insertion below _could_ be done with vanilla JS,\n  // we intentionally use jQuery so that <script> tags execute.\n  // https://github.com/rstudio/shiny/pull/3630\n  switch (where.toLowerCase()) {\n    case \"replace\":\n      $(el).html(processed.html);\n      break;\n    case \"beforebegin\":\n      $(el).before(processed.html);\n      break;\n    case \"afterbegin\":\n      $(el).prepend(processed.html);\n      break;\n    case \"beforeend\":\n      $(el).append(processed.html);\n      break;\n    case \"afterend\":\n      $(el).after(processed.html);\n      break;\n    default:\n      throw new Error(\"Unknown where position: \" + where);\n  }\n\n  return processed;\n}\n// Take an object where keys are names of singletons, and merges it into\n// knownSingletons\nfunction register(s: typeof knownSingletons) {\n  $.extend(knownSingletons, s);\n}\n// Takes a string or array of strings and adds them to knownSingletons\nfunction registerNames(s: string[] | string): void {\n  if (typeof s === \"string\") {\n    knownSingletons[s] = true;\n  } else if (s instanceof Array) {\n    for (let i = 0; i < s.length; i++) {\n      knownSingletons[s[i]] = true;\n    }\n  }\n}\n// Inserts new content into document head\nfunction addToHead(head: string) {\n  if (head.length > 0) {\n    const tempDiv = $(\"<div>\" + head + \"</div>\").get(0) as HTMLDivElement;\n    const $head = $(\"head\");\n\n    while (tempDiv.hasChildNodes()) {\n      // @ts-expect-error; TODO-barret; IDK how this function works. Seems like it would add the first child forever.\n      $head.append(tempDiv.firstChild);\n    }\n  }\n}\n// Reads HTML and returns an object with info about singletons\nfunction processHtml(val: string): {\n  html: string;\n  head: string;\n  singletons: typeof knownSingletons;\n} {\n  const newSingletons: typeof knownSingletons = {};\n  let newVal: string;\n\n  const findNewPayload = function (\n    match: string,\n    p1: string,\n    sig: string,\n    payload: string\n  ) {\n    if (knownSingletons[sig] || newSingletons[sig]) return \"\";\n    newSingletons[sig] = true;\n    return payload;\n  };\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    newVal = val.replace(reSingleton, findNewPayload);\n    if (val.length === newVal.length) break;\n    val = newVal;\n  }\n\n  const heads: string[] = [];\n  const headAddPayload = function (match: string, payload: string) {\n    heads.push(payload);\n    return \"\";\n  };\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    newVal = val.replace(reHead, headAddPayload);\n    if (val.length === newVal.length) break;\n    val = newVal;\n  }\n\n  return {\n    html: val,\n    head: heads.join(\"\\n\"),\n    singletons: newSingletons,\n  };\n}\n\nexport { renderHtml, registerNames };\nexport type { WherePosition };\n", "import $ from \"jquery\";\nimport {\n  createBrushHandler,\n  createClickHandler,\n  createClickInfo,\n  createHoverHandler,\n  disableDrag,\n  initCoordmap,\n} from \"../../imageutils\";\nimport type { CoordmapInit } from \"../../imageutils/initCoordmap\";\nimport type { ErrorsMessageValue } from \"../../shiny/shinyapp\";\nimport {\n  getComputedLinkColor,\n  getStyle,\n  hasOwnProperty,\n  strToBool,\n} from \"../../utils\";\nimport { IEVersion, isIE } from \"../../utils/browser\";\nimport { ifUndefined } from \"../../utils/object\";\nimport { OutputBinding } from \"./outputBinding\";\n\nclass ImageOutputBinding extends OutputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\".shiny-image-output, .shiny-plot-output\");\n  }\n\n  renderValue(\n    el: HTMLElement,\n    data: {\n      coordmap: CoordmapInit;\n      error?: string;\n    } & { [key: string]: string }\n  ): void {\n    // The overall strategy:\n    // * Clear out existing image and event handlers.\n    // * Create new image.\n    // * Create various event handlers.\n    // * Bind those event handlers to events.\n    // * Insert the new image.\n\n    const outputId = this.getId(el);\n\n    const $el = $(el);\n    let img: HTMLImageElement;\n\n    // Get existing img element if present.\n    let $img = $el.find(\"img\");\n\n    if ($img.length === 0) {\n      // If a img element is not already present, that means this is either\n      // the first time renderValue() has been called, or this is after an\n      // error.\n      img = document.createElement(\"img\");\n      $el.append(img);\n      $img = $(img);\n    } else {\n      // Trigger custom 'reset' event for any existing images in the div\n      img = $img[0];\n      $img.trigger(\"reset\");\n    }\n\n    if (!data) {\n      $el.empty();\n      return;\n    }\n\n    // If value is undefined, return alternate. Sort of like ||, except it won't\n    // return alternate for other falsy values (0, false, null).\n\n    const opts = {\n      clickId: $el.data(\"click-id\"),\n      clickClip: ifUndefined(strToBool($el.data(\"click-clip\")), true),\n\n      dblclickId: $el.data(\"dblclick-id\"),\n      dblclickClip: ifUndefined(strToBool($el.data(\"dblclick-clip\")), true),\n      dblclickDelay: ifUndefined($el.data(\"dblclick-delay\"), 400),\n\n      hoverId: $el.data(\"hover-id\"),\n      hoverClip: ifUndefined(strToBool($el.data(\"hover-clip\")), true),\n      hoverDelayType: ifUndefined($el.data(\"hover-delay-type\"), \"debounce\"),\n      hoverDelay: ifUndefined($el.data(\"hover-delay\"), 300),\n      hoverNullOutside: ifUndefined(\n        strToBool($el.data(\"hover-null-outside\")),\n        false\n      ),\n\n      brushId: $el.data(\"brush-id\"),\n      brushClip: ifUndefined(strToBool($el.data(\"brush-clip\")), true),\n      brushDelayType: ifUndefined($el.data(\"brush-delay-type\"), \"debounce\"),\n      brushDelay: ifUndefined($el.data(\"brush-delay\"), 300),\n      brushFill: ifUndefined($el.data(\"brush-fill\"), \"#666\"),\n      brushStroke: ifUndefined($el.data(\"brush-stroke\"), \"#000\"),\n      brushOpacity: ifUndefined($el.data(\"brush-opacity\"), 0.3),\n      brushDirection: ifUndefined($el.data(\"brush-direction\"), \"xy\"),\n      brushResetOnNew: ifUndefined(\n        strToBool($el.data(\"brush-reset-on-new\")),\n        false\n      ),\n\n      coordmap: data.coordmap,\n    };\n\n    if (opts.brushFill === \"auto\") {\n      opts.brushFill = getComputedLinkColor($el[0]);\n    }\n    if (opts.brushStroke === \"auto\") {\n      opts.brushStroke = getStyle($el[0], \"color\");\n    }\n\n    // Copy items from data to img. Don't set the coordmap as an attribute.\n    $.each(data, function (key: string, value) {\n      if (value === null || key === \"coordmap\") {\n        return;\n      }\n      // this checks only against base64 encoded src values\n      // images put here are only from renderImage and renderPlot\n      if (key === \"src\" && value === img.getAttribute(\"src\")) {\n        // Ensure the browser actually fires an onLoad event, which doesn't\n        // happen on WebKit if the value we set on src is the same as the\n        // value it already has\n        // https://github.com/rstudio/shiny/issues/2197\n        // https://stackoverflow.com/questions/5024111/javascript-image-onload-doesnt-fire-in-webkit-if-loading-same-image\n        img.removeAttribute(\"src\");\n      }\n      img.setAttribute(key, value);\n    });\n\n    // Unset any attributes in the current img that were not provided in the\n    // new data.\n    for (let i = 0; i < img.attributes.length; i++) {\n      const attrib = img.attributes[i];\n      // Need to check attrib.specified on IE because img.attributes contains\n      // all possible attributes on IE.\n\n      if (attrib.specified && !hasOwnProperty(data, attrib.name)) {\n        img.removeAttribute(attrib.name);\n      }\n    }\n\n    if (!opts.coordmap) {\n      opts.coordmap = {\n        panels: [],\n        dims: {\n          // These values be set to the naturalWidth and naturalHeight once the image has loaded\n          height: null,\n          width: null,\n        },\n      };\n    }\n\n    // Remove event handlers that were added in previous runs of this function.\n    $el.off(\".image_output\");\n    $img.off(\".image_output\");\n\n    // When the image loads, initialize all the interaction handlers. When the\n    // value of src is set, the browser may not load the image immediately,\n    // even if it's a data URL. If we try to initialize this stuff\n    // immediately, it can cause problems because we use we need the raw image\n    // height and width\n    $img.off(\"load.shiny_image_interaction\");\n    $img.one(\"load.shiny_image_interaction\", function () {\n      // Use a local variable so the type check is happy\n      const optsCoordmap = (opts.coordmap = initCoordmap($el, opts.coordmap));\n\n      // This object listens for mousedowns, and triggers mousedown2 and dblclick2\n      // events as appropriate.\n      const clickInfo = createClickInfo(\n        $el,\n        opts.dblclickId,\n        opts.dblclickDelay\n      );\n\n      $el.on(\"mousedown.image_output\", clickInfo.mousedown);\n\n      if (isIE() && IEVersion() === 8) {\n        $el.on(\"dblclick.image_output\", clickInfo.dblclickIE8);\n      }\n\n      // ----------------------------------------------------------\n      // Register the various event handlers\n      // ----------------------------------------------------------\n      if (opts.clickId) {\n        disableDrag($el, $img);\n\n        const clickHandler = createClickHandler(\n          opts.clickId,\n          opts.clickClip,\n          optsCoordmap\n        );\n\n        $el.on(\"mousedown2.image_output\", clickHandler.mousedown);\n\n        $el.on(\"resize.image_output\", clickHandler.onResize);\n\n        // When img is reset, do housekeeping: clear $el's mouse listener and\n        // call the handler's onResetImg callback.\n        $img.on(\"reset.image_output\", clickHandler.onResetImg);\n      }\n\n      if (opts.dblclickId) {\n        disableDrag($el, $img);\n\n        // We'll use the clickHandler's mousedown function, but register it to\n        // our custom 'dblclick2' event.\n        const dblclickHandler = createClickHandler(\n          opts.dblclickId,\n          opts.clickClip,\n          optsCoordmap\n        );\n\n        $el.on(\"dblclick2.image_output\", dblclickHandler.mousedown);\n\n        $el.on(\"resize.image_output\", dblclickHandler.onResize);\n        $img.on(\"reset.image_output\", dblclickHandler.onResetImg);\n      }\n\n      if (opts.hoverId) {\n        disableDrag($el, $img);\n\n        const hoverHandler = createHoverHandler(\n          opts.hoverId,\n          opts.hoverDelay,\n          opts.hoverDelayType,\n          opts.hoverClip,\n          opts.hoverNullOutside,\n          optsCoordmap\n        );\n\n        $el.on(\"mousemove.image_output\", hoverHandler.mousemove);\n        $el.on(\"mouseout.image_output\", hoverHandler.mouseout);\n\n        $el.on(\"resize.image_output\", hoverHandler.onResize);\n        $img.on(\"reset.image_output\", hoverHandler.onResetImg);\n      }\n\n      if (opts.brushId) {\n        disableDrag($el, $img);\n\n        const brushHandler = createBrushHandler(\n          opts.brushId,\n          $el,\n          opts,\n          optsCoordmap,\n          outputId\n        );\n\n        $el.on(\"mousedown.image_output\", brushHandler.mousedown);\n        $el.on(\"mousemove.image_output\", brushHandler.mousemove);\n\n        $el.on(\"resize.image_output\", brushHandler.onResize);\n        $img.on(\"reset.image_output\", brushHandler.onResetImg);\n      }\n\n      if (opts.clickId || opts.dblclickId || opts.hoverId || opts.brushId) {\n        $el.addClass(\"crosshair\");\n      }\n\n      if (data.error)\n        console.log(\"Error on server extracting coordmap: \" + data.error);\n    });\n  }\n\n  renderError(el: HTMLElement, err: ErrorsMessageValue): void {\n    $(el).find(\"img\").trigger(\"reset\");\n    OutputBinding.prototype.renderError.call(this, el, err);\n  }\n\n  clearError(el: HTMLElement): void {\n    // Remove all elements except img and the brush; this is usually just\n    // error messages.\n    $(el)\n      .contents()\n      .filter(function () {\n        return !(\n          this instanceof HTMLElement &&\n          (this.tagName === \"IMG\" || this.id === el.id + \"_brush\")\n        );\n      })\n      .remove();\n\n    // TODO-barret does this work?: `super.clearError(el)`\n    OutputBinding.prototype.clearError.call(this, el);\n  }\n\n  resize(\n    el: HTMLElement,\n    width: number | string,\n    height: number | string\n  ): void {\n    $(el).find(\"img\").trigger(\"resize\");\n    return;\n    width;\n    height;\n  }\n}\n\nconst imageOutputBinding = new ImageOutputBinding();\n\nexport { imageOutputBinding, ImageOutputBinding };\n", "import $ from \"jquery\";\nimport { equal, isnan, mapValues, roundSignif } from \"../utils\";\nimport type { Coordmap } from \"./initCoordmap\";\nimport { findOrigin } from \"./initCoordmap\";\nimport type { Panel } from \"./initPanelScales\";\n\nimport type { Offset } from \"./findbox\";\nimport { findBox } from \"./findbox\";\nimport { shiftToRange } from \"./shiftToRange\";\n\ntype Bounds = {\n  xmin: number;\n  xmax: number;\n  ymin: number;\n  ymax: number;\n};\ntype BoundsCss = Bounds;\ntype BoundsData = Bounds;\n\ntype ImageState = {\n  brushing: boolean;\n  dragging: boolean;\n  resizing: boolean;\n\n  // Offset of last mouse down and up events (in CSS pixels)\n  down: Offset;\n  up: Offset;\n\n  // Which side(s) we're currently resizing\n  resizeSides: {\n    left: boolean;\n    right: boolean;\n    top: boolean;\n    bottom: boolean;\n  };\n\n  boundsCss: BoundsCss;\n  boundsData: BoundsData;\n\n  // Panel object that the brush is in\n  panel: Panel | null;\n\n  // The bounds at the start of a drag/resize (in CSS pixels)\n  changeStartBounds: Bounds;\n};\n\ntype BrushOpts = {\n  brushDirection: \"x\" | \"xy\" | \"y\";\n  brushClip: boolean;\n  brushFill: string;\n  brushOpacity: string;\n  brushStroke: string;\n  brushDelayType?: \"debounce\" | \"throttle\";\n  brushDelay?: number;\n  brushResetOnNew?: boolean;\n};\n\ntype Brush = {\n  reset: () => void;\n\n  hasOldBrush: () => boolean;\n  importOldBrush: () => void;\n  isInsideBrush: (offsetCss: Offset) => boolean;\n  isInResizeArea: (offsetCss: Offset) => boolean;\n  whichResizeSides: (offsetCss: Offset) => ImageState[\"resizeSides\"];\n\n  // A callback when the wrapper div or img is resized.\n  onResize: () => void;\n\n  boundsCss: {\n    (boxCss: BoundsCss): void;\n    (): BoundsCss;\n  };\n  boundsData: {\n    (boxData: BoundsData): void;\n    (): BoundsData;\n  };\n\n  getPanel: () => ImageState[\"panel\"];\n\n  down: {\n    (): ImageState[\"down\"];\n    (offsetCss: Offset): void;\n  };\n  up: {\n    (): ImageState[\"up\"];\n    (offsetCss: Offset): void;\n  };\n\n  isBrushing: () => ImageState[\"brushing\"];\n  startBrushing: () => void;\n  brushTo: (offsetCss: Offset) => void;\n  stopBrushing: () => void;\n\n  isDragging: () => ImageState[\"dragging\"];\n  startDragging: () => void;\n  dragTo: (offsetCss: Offset) => void;\n  stopDragging: () => void;\n\n  isResizing: () => ImageState[\"resizing\"];\n  startResizing: () => void;\n  resizeTo: (offsetCss: Offset) => void;\n  stopResizing: () => void;\n};\n\n// Returns an object that represents the state of the brush. This gets wrapped\n// in a brushHandler, which provides various event listeners.\nfunction createBrush(\n  $el: JQuery<HTMLElement>,\n  opts: BrushOpts,\n  coordmap: Coordmap,\n  expandPixels: number\n): Brush {\n  // Number of pixels outside of brush to allow start resizing\n  const resizeExpand = 10;\n\n  const el = $el[0];\n  let $div: JQuery<HTMLElement> | null = null; // The div representing the brush\n\n  const state = {} as ImageState;\n\n  // Aliases for conciseness\n  const cssToImg = coordmap.scaleCssToImg;\n  const imgToCss = coordmap.scaleImgToCss;\n\n  reset();\n\n  function reset() {\n    // Current brushing/dragging/resizing state\n    state.brushing = false;\n    state.dragging = false;\n    state.resizing = false;\n\n    // Offset of last mouse down and up events (in CSS pixels)\n    state.down = { x: NaN, y: NaN };\n    state.up = { x: NaN, y: NaN };\n\n    // Which side(s) we're currently resizing\n    state.resizeSides = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    };\n\n    // Bounding rectangle of the brush, in CSS pixel and data dimensions. We\n    // need to record data dimensions along with pixel dimensions so that when\n    // a new plot is sent, we can re-draw the brush div with the appropriate\n    // coords.\n    state.boundsCss = {\n      xmin: NaN,\n      xmax: NaN,\n      ymin: NaN,\n      ymax: NaN,\n    };\n    state.boundsData = {\n      xmin: NaN,\n      xmax: NaN,\n      ymin: NaN,\n      ymax: NaN,\n    };\n\n    // Panel object that the brush is in\n    state.panel = null;\n\n    // The bounds at the start of a drag/resize (in CSS pixels)\n    state.changeStartBounds = {\n      xmin: NaN,\n      xmax: NaN,\n      ymin: NaN,\n      ymax: NaN,\n    };\n\n    if ($div) $div.remove();\n  }\n\n  function hasOldBrush(): boolean {\n    const oldDiv = $el.find(\"#\" + el.id + \"_brush\");\n    return oldDiv.length > 0;\n  }\n\n  // If there's an existing brush div, use that div to set the new brush's\n  // settings, provided that the x, y, and panel variables have the same names,\n  // and there's a panel with matching panel variable values.\n  function importOldBrush(): void {\n    const oldDiv = $el.find(\"#\" + el.id + \"_brush\");\n\n    if (oldDiv.length === 0) return;\n\n    const oldBoundsData = oldDiv.data(\"bounds-data\");\n    const oldPanel = oldDiv.data(\"panel\");\n\n    if (!oldBoundsData || !oldPanel) return;\n\n    // Find a panel that has matching vars; if none found, we can't restore.\n    // The oldPanel and new panel must match on their mapping vars, and the\n    // values.\n    for (let i = 0; i < coordmap.panels.length; i++) {\n      const curPanel = coordmap.panels[i];\n\n      if (\n        equal(oldPanel.mapping, curPanel.mapping) &&\n        equal(oldPanel.panel_vars, curPanel.panel_vars)\n      ) {\n        // We've found a matching panel\n        state.panel = coordmap.panels[i];\n        break;\n      }\n    }\n\n    // If we didn't find a matching panel, remove the old div and return\n    if (state.panel === null) {\n      oldDiv.remove();\n      return;\n    }\n\n    $div = oldDiv;\n\n    boundsData(oldBoundsData);\n    updateDiv();\n  }\n\n  // This will reposition the brush div when the image is resized, maintaining\n  // the same data coordinates. Note that the \"resize\" here refers to the\n  // wrapper div/img being resized; elsewhere, \"resize\" refers to the brush\n  // div being resized.\n  function onResize() {\n    const boundsDataVal = boundsData();\n\n    // Check to see if we have valid boundsData\n    if (Object.values(boundsDataVal).some(isnan)) return;\n\n    boundsData(boundsDataVal);\n    updateDiv();\n  }\n\n  // Return true if the offset is inside min/max coords\n  function isInsideBrush(offsetCss: Offset) {\n    const bounds = state.boundsCss;\n\n    return (\n      offsetCss.x <= bounds.xmax &&\n      offsetCss.x >= bounds.xmin &&\n      offsetCss.y <= bounds.ymax &&\n      offsetCss.y >= bounds.ymin\n    );\n  }\n\n  // Return true if offset is inside a region to start a resize\n  function isInResizeArea(offsetCss: Offset) {\n    const sides = whichResizeSides(offsetCss);\n\n    return sides.left || sides.right || sides.top || sides.bottom;\n  }\n\n  // Return an object representing which resize region(s) the cursor is in.\n  function whichResizeSides(offsetCss: Offset) {\n    const b = state.boundsCss;\n    // Bounds with expansion\n    const e = {\n      xmin: b.xmin - resizeExpand,\n      xmax: b.xmax + resizeExpand,\n      ymin: b.ymin - resizeExpand,\n      ymax: b.ymax + resizeExpand,\n    };\n    const res = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    };\n\n    if (\n      (opts.brushDirection === \"xy\" || opts.brushDirection === \"x\") &&\n      offsetCss.y <= e.ymax &&\n      offsetCss.y >= e.ymin\n    ) {\n      if (offsetCss.x < b.xmin && offsetCss.x >= e.xmin) res.left = true;\n      else if (offsetCss.x > b.xmax && offsetCss.x <= e.xmax) res.right = true;\n    }\n\n    if (\n      (opts.brushDirection === \"xy\" || opts.brushDirection === \"y\") &&\n      offsetCss.x <= e.xmax &&\n      offsetCss.x >= e.xmin\n    ) {\n      if (offsetCss.y < b.ymin && offsetCss.y >= e.ymin) res.top = true;\n      else if (offsetCss.y > b.ymax && offsetCss.y <= e.ymax) res.bottom = true;\n    }\n\n    return res;\n  }\n\n  // Sets the bounds of the brush (in CSS pixels), given a box and optional\n  // panel. This will fit the box bounds into the panel, so we don't brush\n  // outside of it. This knows whether we're brushing in the x, y, or xy\n  // directions, and sets bounds accordingly. If no box is passed in, just\n  // return current bounds.\n  function boundsCss(): ImageState[\"boundsCss\"];\n  function boundsCss(boxCss: BoundsCss): void;\n  function boundsCss(boxCss?: BoundsCss) {\n    if (boxCss === undefined) {\n      return { ...state.boundsCss };\n    }\n\n    let minCss: Offset = { x: boxCss.xmin, y: boxCss.ymin };\n    let maxCss: Offset = { x: boxCss.xmax, y: boxCss.ymax };\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const panel = state.panel!;\n    const panelBoundsImg = panel.range;\n\n    if (opts.brushClip) {\n      minCss = imgToCss(panel.clipImg(cssToImg(minCss)));\n      maxCss = imgToCss(panel.clipImg(cssToImg(maxCss)));\n    }\n\n    if (opts.brushDirection === \"xy\") {\n      // No change\n    } else if (opts.brushDirection === \"x\") {\n      // Extend top and bottom of plotting area\n      minCss.y = imgToCss({ y: panelBoundsImg.top }).y;\n      maxCss.y = imgToCss({ y: panelBoundsImg.bottom }).y;\n    } else if (opts.brushDirection === \"y\") {\n      minCss.x = imgToCss({ x: panelBoundsImg.left }).x;\n      maxCss.x = imgToCss({ x: panelBoundsImg.right }).x;\n    }\n\n    state.boundsCss = {\n      xmin: minCss.x,\n      xmax: maxCss.x,\n      ymin: minCss.y,\n      ymax: maxCss.y,\n    };\n\n    // Positions in data space\n    const minData = panel.scaleImgToData(cssToImg(minCss));\n    const maxData = panel.scaleImgToData(cssToImg(maxCss));\n    // For reversed scales, the min and max can be reversed, so use findBox\n    // to ensure correct order.\n\n    state.boundsData = findBox(minData, maxData);\n    // Round to 14 significant digits to avoid spurious changes in FP values\n    // (#1634).\n    state.boundsData = mapValues(state.boundsData, (val) =>\n      roundSignif(val, 14)\n    );\n\n    // We also need to attach the data bounds and panel as data attributes, so\n    // that if the image is re-sent, we can grab the data bounds to create a new\n    // brush. This should be fast because it doesn't actually modify the DOM.\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    $div!.data(\"bounds-data\", state.boundsData);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    $div!.data(\"panel\", state.panel);\n    return undefined;\n  }\n\n  // Get or set the bounds of the brush using coordinates in the data space.\n  function boundsData(): BoundsData;\n  function boundsData(boxData: BoundsData): void;\n  function boundsData(boxData?: BoundsData | undefined): BoundsData | void {\n    if (typeof boxData === \"undefined\") {\n      return { ...state.boundsData };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    let boxCss = imgToCss(state.panel!.scaleDataToImg(boxData));\n    // Round to 13 significant digits to avoid spurious changes in FP values\n    // (#2197).\n\n    boxCss = mapValues(boxCss, (val) => roundSignif(val, 13));\n\n    // The scaling function can reverse the direction of the axes, so we need to\n    // find the min and max again.\n    boundsCss({\n      xmin: Math.min(boxCss.xmin, boxCss.xmax),\n      xmax: Math.max(boxCss.xmin, boxCss.xmax),\n      ymin: Math.min(boxCss.ymin, boxCss.ymax),\n      ymax: Math.max(boxCss.ymin, boxCss.ymax),\n    });\n    return undefined;\n  }\n\n  function getPanel() {\n    return state.panel;\n  }\n\n  // Add a new div representing the brush.\n  function addDiv() {\n    /* eslint-disable @typescript-eslint/naming-convention */\n    if ($div) $div.remove();\n\n    // Start hidden; we'll show it when movement occurs\n    $div = $(document.createElement(\"div\"))\n      .attr(\"id\", el.id + \"_brush\")\n      .css({\n        \"background-color\": opts.brushFill,\n        opacity: opts.brushOpacity,\n        \"pointer-events\": \"none\",\n        position: \"absolute\",\n      })\n      .hide();\n\n    const borderStyle = \"1px solid \" + opts.brushStroke;\n\n    if (opts.brushDirection === \"xy\") {\n      $div.css({\n        border: borderStyle,\n      });\n    } else if (opts.brushDirection === \"x\") {\n      $div.css({\n        \"border-left\": borderStyle,\n        \"border-right\": borderStyle,\n      });\n    } else if (opts.brushDirection === \"y\") {\n      $div.css({\n        \"border-top\": borderStyle,\n        \"border-bottom\": borderStyle,\n      });\n    }\n\n    $el.append($div);\n    $div\n      .offset(\n        // @ts-expect-error; This is a jQuery Typing issue\n        { x: 0, y: 0 }\n      )\n      .width(0)\n      .outerHeight(0);\n  }\n\n  // Update the brush div to reflect the current brush bounds.\n  function updateDiv() {\n    // Need parent offset relative to page to calculate mouse offset\n    // relative to page.\n    const imgOffsetCss = findOrigin($el.find(\"img\"));\n    const b = state.boundsCss;\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    $div!\n      .offset({\n        top: imgOffsetCss.y + b.ymin,\n        left: imgOffsetCss.x + b.xmin,\n      })\n      .outerWidth(b.xmax - b.xmin + 1)\n      .outerHeight(b.ymax - b.ymin + 1);\n  }\n\n  function down(): ImageState[\"down\"];\n  function down(offsetCss: Offset): void;\n  function down(offsetCss?: Offset | undefined) {\n    if (offsetCss === undefined) return state.down;\n\n    state.down = offsetCss;\n    return undefined;\n  }\n\n  function up(): ImageState[\"up\"];\n  function up(offsetCss: Offset): void;\n  function up(offsetCss?: Offset | undefined) {\n    if (offsetCss === undefined) return state.up;\n\n    state.up = offsetCss;\n    return undefined;\n  }\n\n  function isBrushing() {\n    return state.brushing;\n  }\n\n  function startBrushing() {\n    state.brushing = true;\n    addDiv();\n    state.panel = coordmap.getPanelCss(state.down, expandPixels);\n\n    boundsCss(findBox(state.down, state.down));\n    updateDiv();\n  }\n\n  function brushTo(offsetCss: Offset) {\n    boundsCss(findBox(state.down, offsetCss));\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    $div!.show();\n    updateDiv();\n  }\n\n  function stopBrushing() {\n    state.brushing = false;\n    // Save the final bounding box of the brush\n    boundsCss(findBox(state.down, state.up));\n  }\n\n  function isDragging() {\n    return state.dragging;\n  }\n\n  function startDragging() {\n    state.dragging = true;\n    state.changeStartBounds = { ...state.boundsCss };\n  }\n\n  function dragTo(offsetCss: Offset) {\n    // How far the brush was dragged\n    const dx = offsetCss.x - state.down.x;\n    const dy = offsetCss.y - state.down.y;\n\n    // Calculate what new positions would be, before clipping.\n    const start = state.changeStartBounds;\n    let newBoundsCss = {\n      xmin: start.xmin + dx,\n      xmax: start.xmax + dx,\n      ymin: start.ymin + dy,\n      ymax: start.ymax + dy,\n    };\n\n    // Clip to the plotting area\n    if (opts.brushClip) {\n      const panel = state.panel as Panel;\n      const panelBoundsImg = panel.range;\n      const newBoundsImg = cssToImg(newBoundsCss);\n\n      // Convert to format for shiftToRange\n      let xvalsImg = [newBoundsImg.xmin, newBoundsImg.xmax];\n      let yvalsImg = [newBoundsImg.ymin, newBoundsImg.ymax];\n\n      xvalsImg = shiftToRange(\n        xvalsImg,\n        panelBoundsImg.left,\n        panelBoundsImg.right\n      );\n      yvalsImg = shiftToRange(\n        yvalsImg,\n        panelBoundsImg.top,\n        panelBoundsImg.bottom\n      );\n\n      // Convert back to bounds format\n      newBoundsCss = imgToCss({\n        xmin: xvalsImg[0],\n        xmax: xvalsImg[1],\n        ymin: yvalsImg[0],\n        ymax: yvalsImg[1],\n      });\n    }\n\n    boundsCss(newBoundsCss);\n    updateDiv();\n  }\n\n  function stopDragging() {\n    state.dragging = false;\n  }\n\n  function isResizing() {\n    return state.resizing;\n  }\n\n  function startResizing() {\n    state.resizing = true;\n    state.changeStartBounds = { ...state.boundsCss };\n    state.resizeSides = whichResizeSides(state.down);\n  }\n\n  function resizeTo(offsetCss: Offset) {\n    // How far the brush was dragged\n    const dCss = {\n      x: offsetCss.x - state.down.x,\n      y: offsetCss.y - state.down.y,\n    };\n\n    const dImg = cssToImg(dCss);\n\n    // Calculate what new positions would be, before clipping.\n    const bImg = cssToImg(state.changeStartBounds);\n    const panel = state.panel as Panel;\n    const panelBoundsImg = panel.range;\n\n    if (state.resizeSides.left) {\n      const xminImg = shiftToRange(\n        bImg.xmin + dImg.x,\n        panelBoundsImg.left,\n        bImg.xmax\n      )[0];\n\n      bImg.xmin = xminImg;\n    } else if (state.resizeSides.right) {\n      const xmaxImg = shiftToRange(\n        bImg.xmax + dImg.x,\n        bImg.xmin,\n        panelBoundsImg.right\n      )[0];\n\n      bImg.xmax = xmaxImg;\n    }\n\n    if (state.resizeSides.top) {\n      const yminImg = shiftToRange(\n        bImg.ymin + dImg.y,\n        panelBoundsImg.top,\n        bImg.ymax\n      )[0];\n\n      bImg.ymin = yminImg;\n    } else if (state.resizeSides.bottom) {\n      const ymaxImg = shiftToRange(\n        bImg.ymax + dImg.y,\n        bImg.ymin,\n        panelBoundsImg.bottom\n      )[0];\n\n      bImg.ymax = ymaxImg;\n    }\n\n    boundsCss(imgToCss(bImg));\n    updateDiv();\n  }\n\n  function stopResizing() {\n    state.resizing = false;\n  }\n\n  return {\n    reset: reset,\n\n    hasOldBrush,\n    importOldBrush: importOldBrush,\n    isInsideBrush: isInsideBrush,\n    isInResizeArea: isInResizeArea,\n    whichResizeSides: whichResizeSides,\n\n    onResize: onResize, // A callback when the wrapper div or img is resized.\n\n    boundsCss: boundsCss,\n    boundsData: boundsData,\n    getPanel: getPanel,\n\n    down: down,\n    up: up,\n\n    isBrushing: isBrushing,\n    startBrushing: startBrushing,\n    brushTo: brushTo,\n    stopBrushing: stopBrushing,\n\n    isDragging: isDragging,\n    startDragging: startDragging,\n    dragTo: dragTo,\n    stopDragging: stopDragging,\n\n    isResizing: isResizing,\n    startResizing: startResizing,\n    resizeTo: resizeTo,\n    stopResizing: stopResizing,\n  };\n}\n\nexport { createBrush };\nexport type { Bounds, BrushOpts, BoundsCss };\n", "import $ from \"jquery\";\nimport { shinySetInputValue } from \"../shiny/initedMethods\";\nimport { mapValues } from \"../utils\";\nimport type { Bounds } from \"./createBrush\";\nimport type { Offset } from \"./findbox\";\nimport type { Panel, PanelInit } from \"./initPanelScales\";\nimport { initPanelScales } from \"./initPanelScales\";\n\n// -----------------------------------------------------------------------\n// Utility functions for finding dimensions and locations of DOM elements\n// -----------------------------------------------------------------------\n\n// Returns the ratio that an element has been scaled (for example, by CSS\n// transforms) in the x and y directions.\nfunction findScalingRatio($el: JQuery<HTMLElement>) {\n  const boundingRect = $el[0].getBoundingClientRect();\n\n  return {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    x: boundingRect.width / $el.outerWidth()!,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    y: boundingRect.height / $el.outerHeight()!,\n  };\n}\n\nfunction findOrigin($el: JQuery<HTMLElement>): Offset {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const offset = $el.offset()!;\n  const scalingRatio = findScalingRatio($el);\n\n  // Find the size of the padding and border, for the top and left. This is\n  // before any transforms.\n  const paddingBorder = {\n    left:\n      parseInt($el.css(\"border-left-width\")) +\n      parseInt($el.css(\"padding-left\")),\n    top:\n      parseInt($el.css(\"border-top-width\")) + parseInt($el.css(\"padding-top\")),\n  };\n\n  // offset() returns the upper left corner of the element relative to the\n  // page, but it includes padding and border. Here we find the upper left\n  // of the element, not including padding and border.\n  return {\n    x: offset.left + scalingRatio.x * paddingBorder.left,\n    y: offset.top + scalingRatio.y * paddingBorder.top,\n  };\n}\n\n// Find the dimensions of a tag, after transforms, and without padding and\n// border.\nfunction findDims($el: JQuery<HTMLElement>) {\n  // If there's any padding/border, we need to find the ratio of the actual\n  // element content compared to the element plus padding and border.\n  const contentRatio = {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    x: $el.width()! / $el.outerWidth()!,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    y: $el.height()! / $el.outerHeight()!,\n  };\n\n  // Get the dimensions of the element _after_ any CSS transforms. This\n  // includes the padding and border.\n  const boundingRect = $el[0].getBoundingClientRect();\n\n  // Dimensions of the element after any CSS transforms, and without\n  // padding/border.\n  return {\n    x: contentRatio.x * boundingRect.width,\n    y: contentRatio.y * boundingRect.height,\n  };\n}\n\ntype OffsetCss = { [key: string]: number };\ntype OffsetImg = { [key: string]: number };\n\ntype Coords = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  coords_css: Offset;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  coords_img: Offset;\n  x?: number;\n  y?: number;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  img_css_ratio?: Offset;\n  mapping?: Panel[\"mapping\"];\n  domain?: Panel[\"domain\"];\n  range?: Panel[\"range\"];\n  log?: Panel[\"log\"];\n};\n\ntype CoordmapInit = {\n  panels: PanelInit[];\n  dims:\n    | {\n        height: number;\n        width: number;\n      }\n    | { height: null; width: null };\n};\ntype Coordmap = {\n  panels: Panel[];\n  dims: {\n    height: number;\n    width: number;\n  };\n  mouseOffsetCss: (evt: JQuery.MouseEventBase) => Offset;\n  scaleCssToImg: {\n    (offsetCss: Bounds): Bounds;\n    (offsetCss: Offset): Offset;\n    (offsetCss: OffsetCss): OffsetImg;\n  };\n  scaleImgToCss: {\n    (offsetImg: Bounds): Bounds;\n    (offsetImg: Offset): Offset;\n    (offsetImg: OffsetImg): OffsetCss;\n    (offsetImg: { [key: string]: number }): { [key: string]: number | null };\n  };\n  imgToCssScalingRatio: () => Offset;\n  cssToImgScalingRatio: () => Offset;\n\n  getPanelCss: (offsetCss: OffsetCss, expand?: number) => Panel | null;\n  isInPanelCss: (offsetCss: OffsetCss, expand?: number) => boolean;\n\n  mouseCoordinateSender: (\n    inputId: string,\n    clip?: boolean,\n    nullOutside?: boolean\n  ) => (e: JQuery.MouseDownEvent | JQuery.MouseMoveEvent | null) => void;\n};\n\n// This adds functions to the coordmap object to handle various\n// coordinate-mapping tasks, and send information to the server. The input\n// coordmap is an array of objects, each of which represents a panel. coordmap\n// must be an array, even if empty, so that it can be modified in place; when\n// empty, we add a dummy panel to the array. It also calls initPanelScales,\n// which modifies each panel object to have scaleImgToData, scaleDataToImg,\n// and clip functions.\n//\n// There are three coordinate spaces which we need to translate between:\n//\n// 1. css: The pixel coordinates in the web browser, also known as CSS pixels.\n//    The origin is the upper-left corner of the <img> (not including padding\n//    and border).\n// 2. img: The pixel coordinates of the image data. A common case is on a\n//    HiDPI device, where the source PNG image could be 1000 pixels wide but\n//    be displayed in 500 CSS pixels. Another case is when the image has\n//    additional scaling due to CSS transforms or width.\n// 3. data: The coordinates in the data space. This is a bit more complicated\n//    than the other two, because there can be multiple panels (as in facets).\nfunction initCoordmap(\n  $el: JQuery<HTMLElement>,\n  coordmap_: CoordmapInit\n): Coordmap {\n  const $img = $el.find(\"img\");\n  const img = $img[0];\n\n  // If we didn't get any panels, create a dummy one where the domain and range\n  // are simply the pixel dimensions.\n  // that we modify.\n  if (coordmap_.panels.length === 0) {\n    const bounds = {\n      top: 0,\n      left: 0,\n      right: img.naturalWidth - 1,\n      bottom: img.naturalHeight - 1,\n    };\n\n    coordmap_.panels[0] = {\n      domain: bounds,\n      range: bounds,\n      mapping: {},\n    };\n  }\n\n  const coordmap = coordmap_ as Coordmap;\n  // If no dim height and width values are found, set them to the raw image height and width\n  // These values should be the same...\n  // This is only done to initialize an image output, whose height and width are unknown until the image is retrieved\n\n  coordmap.dims.height = coordmap.dims.height || img.naturalHeight;\n  coordmap.dims.width = coordmap.dims.width || img.naturalWidth;\n\n  // Add scaling functions to each panel\n  coordmap.panels = initPanelScales(coordmap_.panels);\n\n  // This returns the offset of the mouse in CSS pixels relative to the img,\n  // but not including the  padding or border, if present.\n  coordmap.mouseOffsetCss = function (mouseEvent) {\n    const imgOrigin = findOrigin($img);\n\n    // The offset of the mouse from the upper-left corner of the img, in\n    // pixels.\n    return {\n      x: mouseEvent.pageX - imgOrigin.x,\n      y: mouseEvent.pageY - imgOrigin.y,\n    };\n  };\n\n  // Given an offset in an img in CSS pixels, return the corresponding offset\n  // in source image pixels. The offsetCss can have properties like \"x\",\n  // \"xmin\", \"y\", and \"ymax\" -- anything that starts with \"x\" and \"y\". If the\n  // img content is 1000 pixels wide, but is scaled to 400 pixels on screen,\n  // and the input is x:400, then this will return x:1000.\n  function scaleCssToImg(offsetCss: Bounds): Bounds;\n  function scaleCssToImg(offsetCss: Offset): Offset;\n  function scaleCssToImg(offsetCss: OffsetCss): OffsetImg;\n  function scaleCssToImg(offsetCss: OffsetCss) {\n    const pixelScaling = coordmap.imgToCssScalingRatio();\n\n    const result = mapValues(offsetCss, (value, key) => {\n      const prefix = key.substring(0, 1);\n\n      if (prefix === \"x\") {\n        return offsetCss[key] / pixelScaling.x;\n      } else if (prefix === \"y\") {\n        return offsetCss[key] / pixelScaling.y;\n      }\n      return null;\n    });\n\n    return result;\n  }\n  coordmap.scaleCssToImg = scaleCssToImg;\n\n  // Given an offset in an img, in source image pixels, return the\n  // corresponding offset in CSS pixels. If the img content is 1000 pixels\n  // wide, but is scaled to 400 pixels on screen, and the input is x:1000,\n  // then this will return x:400.\n  function scaleImgToCss(offsetImg: Bounds): Bounds;\n  function scaleImgToCss(offsetImg: Offset): Offset;\n  function scaleImgToCss(offsetImg: OffsetImg): OffsetCss;\n  function scaleImgToCss(offsetImg: { [key: string]: number }): {\n    [key: string]: number | null;\n  } {\n    const pixelScaling = coordmap.imgToCssScalingRatio();\n\n    const result = mapValues(offsetImg, (value, key) => {\n      const prefix = key.substring(0, 1);\n\n      if (prefix === \"x\") {\n        return offsetImg[key] * pixelScaling.x;\n      } else if (prefix === \"y\") {\n        return offsetImg[key] * pixelScaling.y;\n      }\n      return null;\n    });\n\n    return result;\n  }\n  coordmap.scaleImgToCss = scaleImgToCss;\n\n  // Returns the x and y ratio the image content is scaled to on screen. If\n  // the image data is 1000 pixels wide and is scaled to 300 pixels on screen,\n  // then this returns 0.3. (Note the 300 pixels refers to CSS pixels.)\n  coordmap.imgToCssScalingRatio = function () {\n    const imgDims = findDims($img);\n\n    return {\n      x: imgDims.x / coordmap.dims.width,\n      y: imgDims.y / coordmap.dims.height,\n    };\n  };\n\n  coordmap.cssToImgScalingRatio = function () {\n    const res = coordmap.imgToCssScalingRatio();\n\n    return {\n      x: 1 / res.x,\n      y: 1 / res.y,\n    };\n  };\n\n  // Given an offset in css pixels, return an object representing which panel\n  // it's in. The `expand` argument tells it to expand the panel area by that\n  // many pixels. It's possible for an offset to be within more than one\n  // panel, because of the `expand` value. If that's the case, find the\n  // nearest panel.\n  coordmap.getPanelCss = function (offsetCss, expand = 0) {\n    const offsetImg = coordmap.scaleCssToImg(offsetCss);\n    const x = offsetImg.x;\n    const y = offsetImg.y;\n\n    // Convert expand from css pixels to img pixels\n    const cssToImgRatio = coordmap.cssToImgScalingRatio();\n    const expandImg = {\n      x: expand * cssToImgRatio.x,\n      y: expand * cssToImgRatio.y,\n    };\n\n    const matches = []; // Panels that match\n    const dists = []; // Distance of offset to each matching panel\n    let i;\n\n    for (i = 0; i < coordmap.panels.length; i++) {\n      const b = coordmap.panels[i].range;\n\n      if (\n        x <= b.right + expandImg.x &&\n        x >= b.left - expandImg.x &&\n        y <= b.bottom + expandImg.y &&\n        y >= b.top - expandImg.y\n      ) {\n        matches.push(coordmap.panels[i]);\n\n        // Find distance from edges for x and y\n        let xdist = 0;\n        let ydist = 0;\n\n        if (x > b.right && x <= b.right + expandImg.x) {\n          xdist = x - b.right;\n        } else if (x < b.left && x >= b.left - expandImg.x) {\n          xdist = x - b.left;\n        }\n        if (y > b.bottom && y <= b.bottom + expandImg.y) {\n          ydist = y - b.bottom;\n        } else if (y < b.top && y >= b.top - expandImg.y) {\n          ydist = y - b.top;\n        }\n\n        // Cartesian distance\n        dists.push(Math.sqrt(Math.pow(xdist, 2) + Math.pow(ydist, 2)));\n      }\n    }\n\n    if (matches.length) {\n      // Find shortest distance\n      const minDist = Math.min.apply(null, dists);\n\n      for (i = 0; i < matches.length; i++) {\n        if (dists[i] === minDist) {\n          return matches[i];\n        }\n      }\n    }\n\n    return null;\n  };\n\n  // Is an offset (in css pixels) in a panel? If supplied, `expand` tells us\n  // to expand the panels by that many pixels in all directions.\n  coordmap.isInPanelCss = function (offsetCss, expand = 0) {\n    if (coordmap.getPanelCss(offsetCss, expand)) return true;\n\n    return false;\n  };\n\n  // Returns a function that sends mouse coordinates, scaled to data space.\n  // If that function is passed a null event, it will send null.\n  coordmap.mouseCoordinateSender = function (\n    inputId,\n    clip = true,\n    nullOutside = false\n  ) {\n    return function (e) {\n      if (e === null) {\n        shinySetInputValue(inputId, null);\n        return;\n      }\n      const coordsCss = coordmap.mouseOffsetCss(e);\n      // If outside of plotting region\n\n      if (!coordmap.isInPanelCss(coordsCss)) {\n        if (nullOutside) {\n          shinySetInputValue(inputId, null);\n          return;\n        }\n        if (clip) return;\n\n        const coords: Coords = {\n          // eslint-disable-next-line @typescript-eslint/naming-convention\n          coords_css: coordsCss,\n          // eslint-disable-next-line @typescript-eslint/naming-convention\n          coords_img: coordmap.scaleCssToImg(coordsCss),\n        };\n\n        shinySetInputValue(inputId, coords, { priority: \"event\" });\n        return;\n      }\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const panel = coordmap.getPanelCss(coordsCss)!;\n\n      const coordsImg = coordmap.scaleCssToImg(coordsCss);\n      const coordsData = panel.scaleImgToData(coordsImg);\n\n      const coords: Coords = {\n        x: coordsData?.x,\n        y: coordsData?.y,\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        coords_css: coordsCss,\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        coords_img: coordsImg,\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        img_css_ratio: coordmap.cssToImgScalingRatio(),\n      };\n\n      // Add the panel (facet) variables, if present\n      $.extend(coords, panel.panel_vars);\n\n      // Add variable name mappings\n      coords.mapping = panel.mapping;\n\n      // Add scaling information\n      coords.domain = panel.domain;\n      coords.range = panel.range;\n      coords.log = panel.log;\n\n      shinySetInputValue(inputId, coords, { priority: \"event\" });\n    };\n  };\n\n  return coordmap;\n}\n\nexport { findOrigin, initCoordmap };\nexport type { Coordmap, CoordmapInit };\n", "// Map a value x from a domain to a range. If clip is true, clip it to the\n\nimport { mapValues } from \"../utils\";\nimport type { Bounds } from \"./createBrush\";\nimport type { Offset } from \"./findbox\";\n\n// range.\nfunction mapLinear(\n  x: number,\n  domainMin: number,\n  domainMax: number,\n  rangeMin: number,\n  rangeMax: number,\n  clip = true\n) {\n  // By default, clip to range\n  clip = clip || true;\n\n  const factor = (rangeMax - rangeMin) / (domainMax - domainMin);\n  const val = x - domainMin;\n  let newval = val * factor + rangeMin;\n\n  if (clip) {\n    const max = Math.max(rangeMax, rangeMin);\n    const min = Math.min(rangeMax, rangeMin);\n\n    if (newval > max) newval = max;\n    else if (newval < min) newval = min;\n  }\n  return newval;\n}\n\n// Create scale and inverse-scale functions for a single direction (x or y).\nfunction scaler1D(\n  domainMin: number,\n  domainMax: number,\n  rangeMin: number,\n  rangeMax: number,\n  logbase: number | null\n) {\n  return {\n    scale: function (val: number, clip?: boolean) {\n      if (logbase) val = Math.log(val) / Math.log(logbase);\n      return mapLinear(val, domainMin, domainMax, rangeMin, rangeMax, clip);\n    },\n\n    scaleInv: function (val: number, clip?: boolean) {\n      let res = mapLinear(val, rangeMin, rangeMax, domainMin, domainMax, clip);\n\n      if (logbase) res = Math.pow(logbase, res);\n      return res;\n    },\n  };\n}\n\ntype PanelInit = {\n  domain: {\n    top: number;\n    bottom: number;\n    left: number;\n    right: number;\n  };\n  range: {\n    top: number;\n    bottom: number;\n    left: number;\n    right: number;\n  };\n  log?: {\n    x?: number;\n    y?: number;\n  };\n  mapping: { [key: string]: string };\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  panel_vars?: { [key: string]: number | string };\n};\ntype Panel = PanelInit & {\n  scaleDataToImg: {\n    (val: Bounds, clip?: boolean): Bounds;\n  };\n  scaleImgToData: {\n    (val: Offset, clip?: boolean): Offset;\n  };\n\n  clipImg: (offsetImg: { x: number; y: number }) => { x: number; y: number };\n};\n\n// Modify panel, adding scale and inverse-scale functions that take objects\n// like {x:1, y:3}, and also add clip function.\nfunction addScaleFuns(panel_: PanelInit): Panel {\n  const panel = panel_ as Panel;\n  const d = panel.domain;\n  const r = panel.range;\n  const xlog = panel.log && panel.log.x ? panel.log.x : null;\n  const ylog = panel.log && panel.log.y ? panel.log.y : null;\n  const xscaler = scaler1D(d.left, d.right, r.left, r.right, xlog);\n  const yscaler = scaler1D(d.bottom, d.top, r.bottom, r.top, ylog);\n\n  // Given an object of form {x:1, y:2}, or {x:1, xmin:2:, ymax: 3}, convert\n  // from data coordinates to img. Whether a value is converted as x or y\n  // depends on the first character of the key.\n  // (val: Offset, clip?: boolean): Offset;\n  // (val: Bounds, clip?: boolean): Bounds;\n  // (val: { [key: `${\"x\" | \"y\"}${string}`]: number }, clip?: boolean): { [key: `${\"x\" | \"y\"}${string}`]: number }\n  // (val: { [key: string]: number | null }, clip?: boolean): {\n  //   [key: string]: number | null;\n  // };\n  function scaleDataToImg(\n    val: Bounds,\n    clip?: Parameters<typeof xscaler.scale>[1]\n  ): Bounds {\n    return mapValues(val, (value, key) => {\n      const prefix = key.substring(0, 1);\n\n      if (prefix === \"x\") {\n        return xscaler.scale(value, clip);\n      } else if (prefix === \"y\") {\n        return yscaler.scale(value, clip);\n      }\n      // TODO-future; If we know the input is a valid input (starts with x/y), why do we still have this value?\n      return null;\n    }) as Bounds;\n  }\n  panel.scaleDataToImg = scaleDataToImg;\n\n  function scaleImgToData(val: Offset, clip?: boolean): Offset {\n    return mapValues(val, (value, key) => {\n      const prefix = key.substring(0, 1);\n\n      if (prefix === \"x\") {\n        return xscaler.scaleInv(value, clip);\n      } else if (prefix === \"y\") {\n        return yscaler.scaleInv(value, clip);\n      }\n      // TODO-future; If we know the input is a valid input (starts with x/y), why do we still have this value?\n      return null;\n    }) as Offset;\n  }\n  panel.scaleImgToData = scaleImgToData;\n\n  // Given a scaled offset (in img pixels), clip it to the nearest panel region.\n  panel.clipImg = function (offsetImg) {\n    const newOffset = {\n      x: offsetImg.x,\n      y: offsetImg.y,\n    };\n\n    const bounds = panel.range;\n\n    if (offsetImg.x > bounds.right) newOffset.x = bounds.right;\n    else if (offsetImg.x < bounds.left) newOffset.x = bounds.left;\n\n    if (offsetImg.y > bounds.bottom) newOffset.y = bounds.bottom;\n    else if (offsetImg.y < bounds.top) newOffset.y = bounds.top;\n\n    return newOffset;\n  };\n\n  return panel;\n}\n\n// Modifies the panel objects in a coordmap, adding scaleImgToData(),\n// scaleDataToImg(), and clipImg() functions to each one. The panel objects\n// use img and data coordinates only; they do not use css coordinates. The\n// domain is in data coordinates; the range is in img coordinates.\nfunction initPanelScales(panels: PanelInit[]): Panel[] {\n  // Add the functions to each panel object.\n  return panels.map((panel) => addScaleFuns(panel));\n}\n\nexport type { Panel, PanelInit };\nexport { initPanelScales };\n", "// Given two sets of x/y coordinates, return an object representing the min\n// and max x and y values. (This could be generalized to any number of\n\nimport type { Bounds } from \"./createBrush\";\n\ntype Offset = {\n  x: number;\n  y: number;\n};\n\n// points).\nfunction findBox(offset1: Offset, offset2: Offset): Bounds {\n  return {\n    xmin: Math.min(offset1.x, offset2.x),\n    xmax: Math.max(offset1.x, offset2.x),\n    ymin: Math.min(offset1.y, offset2.y),\n    ymax: Math.max(offset1.y, offset2.y),\n  };\n}\n\nexport type { Offset };\nexport { findBox };\n", "// Shift an array of values so that they are within a min and max. The vals\n// will be shifted so that they maintain the same spacing internally. If the\n// range in vals is larger than the range of min and max, the result might not\n// make sense.\nfunction shiftToRange(\n  vals: number[] | number,\n  min: number,\n  max: number\n): number[] {\n  if (!(vals instanceof Array)) vals = [vals];\n\n  const maxval = Math.max.apply(null, vals);\n  const minval = Math.min.apply(null, vals);\n  let shiftAmount = 0;\n\n  if (maxval > max) {\n    shiftAmount = max - maxval;\n  } else if (minval < min) {\n    shiftAmount = min - minval;\n  }\n\n  const newvals = [];\n\n  for (let i = 0; i < vals.length; i++) {\n    newvals[i] = vals[i] + shiftAmount;\n  }\n  return newvals;\n}\n\nexport { shiftToRange };\n", "import $ from \"jquery\";\n\n// This object provides two public event listeners: mousedown, and\n// dblclickIE8.\n// We need to make sure that, when the image is listening for double-\n// clicks, that a double-click doesn't trigger two click events. We'll\n// trigger custom mousedown2 and dblclick2 events with this mousedown\n// listener.\nfunction createClickInfo(\n  $el: JQuery<HTMLElement>,\n  dblclickId: string,\n  dblclickDelay: number\n): {\n  mousedown: (e: JQuery.MouseDownEvent) => void;\n  dblclickIE8: (e: JQuery.DoubleClickEvent) => void;\n} {\n  let clickTimer: number | undefined = undefined;\n  let pendingE: JQuery.MouseDownEvent | null = null; // A pending mousedown2 event\n\n  // Create a new event of type eventType (like 'mousedown2'), and trigger\n  // it with the information stored in this.e.\n  function triggerEvent(\n    newEventType: string,\n    e: JQuery.DoubleClickEvent | JQuery.MouseDownEvent\n  ) {\n    // Extract important info from e and construct a new event with type\n    // eventType.\n    const e2 = $.Event(newEventType, {\n      which: e.which,\n      pageX: e.pageX,\n      pageY: e.pageY,\n    });\n\n    $el.trigger(e2);\n  }\n\n  function triggerPendingMousedown2() {\n    // It's possible that between the scheduling of a mousedown2 and the\n    // time this callback is executed, someone else triggers a\n    // mousedown2, so check for that.\n    if (pendingE) {\n      triggerEvent(\"mousedown2\", pendingE);\n      pendingE = null;\n    }\n  }\n\n  // Set a timer to trigger a mousedown2 event, using information from the\n  // last recorded mousdown event.\n  function scheduleMousedown2(e: JQuery.MouseDownEvent) {\n    pendingE = e;\n\n    clickTimer = window.setTimeout(function () {\n      triggerPendingMousedown2();\n    }, dblclickDelay);\n  }\n\n  function mousedown(e: JQuery.MouseDownEvent) {\n    // Listen for left mouse button only\n    if (e.which !== 1) return;\n\n    // If no dblclick listener, immediately trigger a mousedown2 event.\n    if (!dblclickId) {\n      triggerEvent(\"mousedown2\", e);\n      return;\n    }\n\n    // If there's a dblclick listener, make sure not to count this as a\n    // click on the first mousedown; we need to wait for the dblclick\n    // delay before we can be sure this click was a single-click.\n    if (pendingE === null) {\n      scheduleMousedown2(e);\n    } else {\n      clearTimeout(clickTimer);\n\n      // If second click is too far away, it doesn't count as a double\n      // click. Instead, immediately trigger a mousedown2 for the previous\n      // click, and set this click as a new first click.\n      if (\n        (pendingE && Math.abs(pendingE.pageX - e.pageX) > 2) ||\n        Math.abs(pendingE.pageY - e.pageY) > 2\n      ) {\n        triggerPendingMousedown2();\n        scheduleMousedown2(e);\n      } else {\n        // The second click was close to the first one. If it happened\n        // within specified delay, trigger our custom 'dblclick2' event.\n        pendingE = null;\n        triggerEvent(\"dblclick2\", e);\n      }\n    }\n  }\n\n  // IE8 needs a special hack because when you do a double-click it doesn't\n  // trigger the click event twice - it directly triggers dblclick.\n  function dblclickIE8(e: JQuery.DoubleClickEvent) {\n    e.which = 1; // In IE8, e.which is 0 instead of 1. ???\n    triggerEvent(\"dblclick2\", e);\n  }\n\n  return {\n    mousedown: mousedown,\n    dblclickIE8: dblclickIE8,\n  };\n}\n\nexport { createClickInfo };\n", "import $ from \"jquery\";\nimport { imageOutputBinding } from \"../bindings/output/image\";\nimport type { InputRatePolicy } from \"../inputPolicies\";\nimport { shinySetInputValue } from \"../shiny/initedMethods\";\nimport { Debouncer, Throttler } from \"../time\";\nimport type { Bounds, BoundsCss, BrushOpts } from \"./createBrush\";\nimport { createBrush } from \"./createBrush\";\nimport type { Offset } from \"./findbox\";\nimport type { Coordmap } from \"./initCoordmap\";\nimport type { Panel } from \"./initPanelScales\";\n\n// ----------------------------------------------------------\n// Handler creators for click, hover, brush.\n// Each of these returns an object with a few public members. These public\n// members are callbacks that are meant to be bound to events on $el with\n// the same name (like 'mousedown').\n// ----------------------------------------------------------\n\ntype CreateHandler = {\n  mousemove?: (e: JQuery.MouseMoveEvent) => void;\n  mouseout?: (e: JQuery.MouseOutEvent) => void;\n  mousedown?: (e: JQuery.MouseDownEvent) => void;\n  onResetImg: () => void;\n  onResize: ((e: JQuery.ResizeEvent) => void) | null;\n};\n\ntype BrushInfo = {\n  xmin: number;\n  xmax: number;\n  ymin: number;\n  ymax: number;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  coords_css?: BoundsCss;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  coords_img?: Bounds;\n  x?: number;\n  y?: number;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  img_css_ratio?: Offset;\n  mapping?: Panel[\"mapping\"];\n  domain?: Panel[\"domain\"];\n  range?: Panel[\"range\"];\n  log?: Panel[\"log\"];\n  direction?: BrushOpts[\"brushDirection\"];\n  brushId?: string;\n  outputId?: string;\n};\n\ntype InputId = Parameters<Coordmap[\"mouseCoordinateSender\"]>[0];\ntype Clip = Parameters<Coordmap[\"mouseCoordinateSender\"]>[1];\ntype NullOutside = Parameters<Coordmap[\"mouseCoordinateSender\"]>[2];\n\nfunction createClickHandler(\n  inputId: InputId,\n  clip: Clip,\n  coordmap: Coordmap\n): CreateHandler {\n  const clickInfoSender = coordmap.mouseCoordinateSender(inputId, clip);\n\n  // Send initial (null) value on creation.\n  clickInfoSender(null);\n\n  return {\n    mousedown: function (e) {\n      // Listen for left mouse button only\n      if (e.which !== 1) return;\n      clickInfoSender(e);\n    },\n    onResetImg: function () {\n      clickInfoSender(null);\n    },\n    onResize: null,\n  };\n}\n\nfunction createHoverHandler(\n  inputId: InputId,\n  delay: number,\n  delayType: string | \"throttle\",\n  clip: Clip,\n  nullOutside: NullOutside,\n  coordmap: Coordmap\n): CreateHandler {\n  const sendHoverInfo = coordmap.mouseCoordinateSender(\n    inputId,\n    clip,\n    nullOutside\n  );\n\n  let hoverInfoSender: InputRatePolicy<typeof sendHoverInfo>;\n\n  if (delayType === \"throttle\")\n    hoverInfoSender = new Throttler(null, sendHoverInfo, delay);\n  else hoverInfoSender = new Debouncer(null, sendHoverInfo, delay);\n\n  // Send initial (null) value on creation.\n  hoverInfoSender.immediateCall(null);\n\n  // What to do when mouse exits the image\n  let mouseout: () => void;\n\n  if (nullOutside)\n    mouseout = function () {\n      hoverInfoSender.normalCall(null);\n    };\n  else\n    mouseout = function () {\n      // do nothing\n    };\n\n  return {\n    mousemove: function (e) {\n      hoverInfoSender.normalCall(e);\n    },\n    mouseout: mouseout,\n    onResetImg: function () {\n      hoverInfoSender.immediateCall(null);\n    },\n    onResize: null,\n  };\n}\n\n// Returns a brush handler object. This has three public functions:\n// mousedown, mousemove, and onResetImg.\nfunction createBrushHandler(\n  inputId: InputId,\n  $el: JQuery<HTMLElement>,\n  opts: BrushOpts,\n  coordmap: Coordmap,\n  outputId: BrushInfo[\"outputId\"]\n): CreateHandler {\n  // Parameter: expand the area in which a brush can be started, by this\n  // many pixels in all directions. (This should probably be a brush option)\n  const expandPixels = 20;\n\n  // Represents the state of the brush\n  const brush = createBrush($el, opts, coordmap, expandPixels);\n\n  // Brush IDs can span multiple image/plot outputs. When an output is brushed,\n  // if a brush with the same ID is active on a different image/plot, it must\n  // be dismissed (but without sending any data to the server). We implement\n  // this by sending the shiny-internal:brushed event to all plots, and letting\n  // each plot decide for itself what to do.\n  //\n  // The decision to have the event sent to each plot (as opposed to a single\n  // event triggered on, say, the document) was made to make cleanup easier;\n  // listening on an event on the document would prevent garbage collection\n  // of plot outputs that are removed from the document.\n  $el.on(\"shiny-internal:brushed.image_output\", function (e, coords) {\n    // If the new brush shares our ID but not our output element ID, we\n    // need to clear our brush (if any).\n    if (coords.brushId === inputId && coords.outputId !== outputId) {\n      $el.data(\"mostRecentBrush\", false);\n      brush.reset();\n    }\n  });\n\n  // Set cursor to one of 7 styles. We need to set the cursor on the whole\n  // el instead of the brush div, because the brush div has\n  // 'pointer-events:none' so that it won't intercept pointer events.\n  // If `style` is null, don't add a cursor style.\n  function setCursorStyle(\n    style:\n      | \"crosshair\"\n      | \"ew-resize\"\n      | \"grabbable\"\n      | \"grabbing\"\n      | \"nesw-resize\"\n      | \"ns-resize\"\n      | \"nwse-resize\"\n      | null\n  ) {\n    $el.removeClass(\n      \"crosshair grabbable grabbing ns-resize ew-resize nesw-resize nwse-resize\"\n    );\n\n    if (style) $el.addClass(style);\n  }\n\n  function sendBrushInfo() {\n    const coords: BrushInfo = brush.boundsData();\n\n    // We're in a new or reset state\n    if (isNaN(coords.xmin)) {\n      shinySetInputValue(inputId, null);\n      // Must tell other brushes to clear.\n      imageOutputBinding\n        .find(document.documentElement)\n        .trigger(\"shiny-internal:brushed\", {\n          brushId: inputId,\n          outputId: null,\n        });\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const panel = brush.getPanel()!;\n\n    // Add the panel (facet) variables, if present\n    $.extend(coords, panel.panel_vars);\n\n    // eslint-disable-next-line camelcase\n    coords.coords_css = brush.boundsCss();\n    // eslint-disable-next-line camelcase\n    coords.coords_img = coordmap.scaleCssToImg(coords.coords_css);\n\n    // eslint-disable-next-line camelcase\n    coords.img_css_ratio = coordmap.cssToImgScalingRatio();\n\n    // Add variable name mappings\n    coords.mapping = panel.mapping;\n\n    // Add scaling information\n    coords.domain = panel.domain;\n    coords.range = panel.range;\n    coords.log = panel.log;\n\n    coords.direction = opts.brushDirection;\n\n    coords.brushId = inputId;\n    coords.outputId = outputId;\n\n    // Send data to server\n    shinySetInputValue(inputId, coords);\n\n    $el.data(\"mostRecentBrush\", true);\n    imageOutputBinding\n      .find(document.documentElement)\n      .trigger(\"shiny-internal:brushed\", coords);\n  }\n\n  let brushInfoSender:\n    | Debouncer<typeof sendBrushInfo>\n    | Throttler<typeof sendBrushInfo>;\n\n  if (opts.brushDelayType === \"throttle\") {\n    brushInfoSender = new Throttler(null, sendBrushInfo, opts.brushDelay);\n  } else {\n    brushInfoSender = new Debouncer(null, sendBrushInfo, opts.brushDelay);\n  }\n\n  // Send initial (null) value on creation.\n  if (!brush.hasOldBrush()) {\n    brushInfoSender.immediateCall();\n  }\n\n  function mousedown(e: JQuery.MouseDownEvent) {\n    // This can happen when mousedown inside the graphic, then mouseup\n    // outside, then mousedown inside. Just ignore the second\n    // mousedown.\n    if (brush.isBrushing() || brush.isDragging() || brush.isResizing()) return;\n\n    // Listen for left mouse button only\n    if (e.which !== 1) return;\n\n    // In general, brush uses css pixels, and coordmap uses img pixels.\n    const offsetCss = coordmap.mouseOffsetCss(e);\n\n    // Ignore mousedown events outside of plotting region, expanded by\n    // a number of pixels specified in expandPixels.\n    if (opts.brushClip && !coordmap.isInPanelCss(offsetCss, expandPixels))\n      return;\n\n    brush.up({ x: NaN, y: NaN });\n    brush.down(offsetCss);\n\n    if (brush.isInResizeArea(offsetCss)) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error; TODO-barret; Remove the variable? it is not used\n      brush.startResizing(offsetCss);\n\n      // Attach the move and up handlers to the window so that they respond\n      // even when the mouse is moved outside of the image.\n      $(document)\n        .on(\"mousemove.image_brush\", mousemoveResizing)\n        .on(\"mouseup.image_brush\", mouseupResizing);\n    } else if (brush.isInsideBrush(offsetCss)) {\n      // @ts-expect-error; TODO-barret this variable is not respected\n      brush.startDragging(offsetCss);\n      setCursorStyle(\"grabbing\");\n\n      // Attach the move and up handlers to the window so that they respond\n      // even when the mouse is moved outside of the image.\n      $(document)\n        .on(\"mousemove.image_brush\", mousemoveDragging)\n        .on(\"mouseup.image_brush\", mouseupDragging);\n    } else {\n      const panel = coordmap.getPanelCss(offsetCss, expandPixels);\n\n      // @ts-expect-error; TODO-barret start brushing does not take any args; Either change the function to ignore, or do not send to function;\n      brush.startBrushing(panel.clipImg(coordmap.scaleCssToImg(offsetCss)));\n\n      // Attach the move and up handlers to the window so that they respond\n      // even when the mouse is moved outside of the image.\n      $(document)\n        .on(\"mousemove.image_brush\", mousemoveBrushing)\n        .on(\"mouseup.image_brush\", mouseupBrushing);\n    }\n  }\n\n  // This sets the cursor style when it's in the el\n  function mousemove(e: JQuery.MouseMoveEvent) {\n    // In general, brush uses css pixels, and coordmap uses img pixels.\n    const offsetCss = coordmap.mouseOffsetCss(e);\n\n    if (!(brush.isBrushing() || brush.isDragging() || brush.isResizing())) {\n      // Set the cursor depending on where it is\n      if (brush.isInResizeArea(offsetCss)) {\n        const r = brush.whichResizeSides(offsetCss);\n\n        if ((r.left && r.top) || (r.right && r.bottom)) {\n          setCursorStyle(\"nwse-resize\");\n        } else if ((r.left && r.bottom) || (r.right && r.top)) {\n          setCursorStyle(\"nesw-resize\");\n        } else if (r.left || r.right) {\n          setCursorStyle(\"ew-resize\");\n        } else if (r.top || r.bottom) {\n          setCursorStyle(\"ns-resize\");\n        }\n      } else if (brush.isInsideBrush(offsetCss)) {\n        setCursorStyle(\"grabbable\");\n      } else if (coordmap.isInPanelCss(offsetCss, expandPixels)) {\n        setCursorStyle(\"crosshair\");\n      } else {\n        setCursorStyle(null);\n      }\n    }\n  }\n\n  // mousemove handlers while brushing or dragging\n  function mousemoveBrushing(e: JQuery.MouseMoveEvent) {\n    brush.brushTo(coordmap.mouseOffsetCss(e));\n    brushInfoSender.normalCall();\n  }\n\n  function mousemoveDragging(e: JQuery.MouseMoveEvent) {\n    brush.dragTo(coordmap.mouseOffsetCss(e));\n    brushInfoSender.normalCall();\n  }\n\n  function mousemoveResizing(e: JQuery.MouseMoveEvent) {\n    brush.resizeTo(coordmap.mouseOffsetCss(e));\n    brushInfoSender.normalCall();\n  }\n\n  // mouseup handlers while brushing or dragging\n  function mouseupBrushing(e: JQuery.MouseUpEvent) {\n    // Listen for left mouse button only\n    if (e.which !== 1) return;\n\n    $(document).off(\"mousemove.image_brush\").off(\"mouseup.image_brush\");\n\n    brush.up(coordmap.mouseOffsetCss(e));\n\n    brush.stopBrushing();\n    setCursorStyle(\"crosshair\");\n\n    // If the brush didn't go anywhere, hide the brush, clear value,\n    // and return.\n    if (brush.down().x === brush.up().x && brush.down().y === brush.up().y) {\n      brush.reset();\n      brushInfoSender.immediateCall();\n      return;\n    }\n\n    // Send info immediately on mouseup, but only if needed. If we don't\n    // do the pending check, we might send the same data twice (with\n    // with difference nonce).\n    if (brushInfoSender.isPending()) brushInfoSender.immediateCall();\n  }\n\n  function mouseupDragging(e: JQuery.MouseUpEvent) {\n    // Listen for left mouse button only\n    if (e.which !== 1) return;\n\n    $(document).off(\"mousemove.image_brush\").off(\"mouseup.image_brush\");\n\n    brush.up(coordmap.mouseOffsetCss(e));\n\n    brush.stopDragging();\n    setCursorStyle(\"grabbable\");\n\n    if (brushInfoSender.isPending()) brushInfoSender.immediateCall();\n  }\n\n  function mouseupResizing(e: JQuery.MouseUpEvent) {\n    // Listen for left mouse button only\n    if (e.which !== 1) return;\n\n    $(document).off(\"mousemove.image_brush\").off(\"mouseup.image_brush\");\n\n    brush.up(coordmap.mouseOffsetCss(e));\n    brush.stopResizing();\n\n    if (brushInfoSender.isPending()) brushInfoSender.immediateCall();\n  }\n\n  // Brush maintenance: When an image is re-rendered, the brush must either\n  // be removed (if brushResetOnNew) or imported (if !brushResetOnNew). The\n  // \"mostRecentBrush\" bit is to ensure that when multiple outputs share the\n  // same brush ID, inactive brushes don't send null values up to the server.\n\n  // This should be called when the img (not the el) is reset\n  function onResetImg() {\n    if (opts.brushResetOnNew) {\n      if ($el.data(\"mostRecentBrush\")) {\n        brush.reset();\n        brushInfoSender.immediateCall();\n      }\n    }\n  }\n\n  if (!opts.brushResetOnNew) {\n    if ($el.data(\"mostRecentBrush\")) {\n      // Importing an old brush must happen after the image data has loaded\n      // and the <img> DOM element has the updated size. If importOldBrush()\n      // is called before this happens, then the css-img coordinate mappings\n      // will give the wrong result, and the brush will have the wrong\n      // position.\n      //\n      // jcheng 09/26/2018: This used to happen in img.onLoad, but recently\n      // we moved to all brush initialization moving to img.onLoad so this\n      // logic can be executed inline.\n      brush.importOldBrush();\n      brushInfoSender.immediateCall();\n    }\n  }\n\n  function onResize() {\n    brush.onResize();\n    brushInfoSender.immediateCall();\n  }\n\n  return {\n    mousedown: mousedown,\n    mousemove: mousemove,\n    onResetImg: onResetImg,\n    onResize: onResize,\n  };\n}\n\nexport { createClickHandler, createHoverHandler, createBrushHandler };\nexport type { BrushInfo };\n", "function disableDrag(\n  $el: JQuery<HTMLElement>,\n  $img: JQuery<HTMLElement>\n): void {\n  // Make image non-draggable (Chrome, Safari)\n  $img.css(\"-webkit-user-drag\", \"none\");\n\n  // Firefox, IE<=10\n  // First remove existing handler so we don't keep adding handlers.\n  $img.off(\"dragstart.image_output\");\n  $img.on(\"dragstart.image_output\", function () {\n    return false;\n  });\n\n  // Disable selection of image and text when dragging in IE<=10\n  $el.off(\"selectstart.image_output\");\n  $el.on(\"selectstart.image_output\", function () {\n    return false;\n  });\n}\n\nexport { disableDrag };\n", "import $ from \"jquery\";\nimport { OutputBinding } from \"./outputBinding\";\n\nclass TextOutputBinding extends OutputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\".shiny-text-output\");\n  }\n  renderValue(el: HTMLElement, data: boolean | number | string): void {\n    $(el).text(data);\n  }\n}\n\nexport { TextOutputBinding };\n", "import { BindingRegistry } from \"../registry\";\nimport { DatatableOutputBinding } from \"./datatable\";\nimport { DownloadLinkOutputBinding } from \"./downloadlink\";\nimport { HtmlOutputBinding } from \"./html\";\nimport { imageOutputBinding } from \"./image\";\nimport { TextOutputBinding } from \"./text\";\n\nimport { OutputBinding } from \"./outputBinding\";\n\ntype InitOutputBindings = {\n  outputBindings: BindingRegistry<OutputBinding>;\n};\nfunction initOutputBindings(): InitOutputBindings {\n  const outputBindings = new BindingRegistry<OutputBinding>();\n\n  outputBindings.register(new TextOutputBinding(), \"shiny.textOutput\");\n  outputBindings.register(\n    new DownloadLinkOutputBinding(),\n    \"shiny.downloadLink\"\n  );\n  outputBindings.register(\n    new DatatableOutputBinding(),\n    \"shiny.datatableOutput\"\n  );\n  outputBindings.register(new HtmlOutputBinding(), \"shiny.htmlOutput\");\n  outputBindings.register(imageOutputBinding, \"shiny.imageOutput\");\n\n  return { outputBindings };\n}\n\nexport { OutputBinding, initOutputBindings };\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nconst NODE_MODE = false;\n\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets: boolean =\n  global.ShadowRoot &&\n  (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\n/**\n * A CSSResult or native CSSStyleSheet.\n *\n * In browsers that support constructible CSS style sheets, CSSStyleSheet\n * object can be used for styling along side CSSResult from the `css`\n * template tag.\n */\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\n/**\n * A single CSSResult, CSSStyleSheet, or an array or nested arrays of those.\n */\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nconst cssTagCache = new WeakMap<TemplateStringsArray, CSSStyleSheet>();\n\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n  // This property needs to remain unminified.\n  ['_$cssResult$'] = true;\n  readonly cssText: string;\n  private _styleSheet?: CSSStyleSheet;\n  private _strings: TemplateStringsArray | undefined;\n\n  private constructor(\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n    // constructable.\n    let styleSheet = this._styleSheet;\n    const strings = this._strings;\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      const cacheable = strings !== undefined && strings.length === 1;\n      if (cacheable) {\n        styleSheet = cssTagCache.get(strings);\n      }\n      if (styleSheet === undefined) {\n        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(\n          this.cssText\n        );\n        if (cacheable) {\n          cssTagCache.set(strings, styleSheet);\n        }\n      }\n    }\n    return styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\ntype ConstructableCSSResult = CSSResult & {\n  new (\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ): CSSResult;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  // This property needs to remain unminified.\n  if ((value as CSSResult)['_$cssResult$'] === true) {\n    return (value as CSSResult).cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) =>\n  new (CSSResult as ConstructableCSSResult)(\n    typeof value === 'string' ? value : String(value),\n    undefined,\n    constructionToken\n  );\n\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResult => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return new (CSSResult as ConstructableCSSResult)(\n    cssText,\n    strings,\n    constructionToken\n  );\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: Array<CSSResultOrNative>\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    for (const s of styles) {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = (global as any)['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    }\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle =\n  supportsAdoptingStyleSheets ||\n  (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s: CSSResultOrNative) => s\n    : (s: CSSResultOrNative) =>\n        s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * {@link ReactiveElement}.\n * @packageDocumentation\n */\n\nimport {\n  getCompatibleStyle,\n  adoptStyles,\n  CSSResultGroup,\n  CSSResultOrNative,\n} from './css-tag.js';\nimport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\n// In the Node build, this import will be injected by Rollup:\n// import {HTMLElement, customElements} from '@lit-labs/ssr-dom-shim';\n\nexport * from './css-tag.js';\nexport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\n/**\n * Removes the `readonly` modifier from properties in the union K.\n *\n * This is a safer way to cast a value to a type with a mutable version of a\n * readonly field, than casting to an interface with the field re-declared\n * because it preserves the type of all the fields and warns on typos.\n */\ntype Mutable<T, K extends keyof T> = Omit<T, K> & {\n  -readonly [P in keyof Pick<T, K>]: P extends K ? T[P] : never;\n};\n\n// TODO (justinfagnani): Add `hasOwn` here when we ship ES2022\nconst {\n  is,\n  defineProperty,\n  getOwnPropertyDescriptor,\n  getOwnPropertyNames,\n  getOwnPropertySymbols,\n  getPrototypeOf,\n} = Object;\n\nconst NODE_MODE = false;\n\n// Lets a minifier replace globalThis references with a minified name\nconst global = globalThis;\n\nif (NODE_MODE) {\n  global.customElements ??= customElements;\n}\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nconst trustedTypes = (global as unknown as {trustedTypes?: {emptyScript: ''}})\n  .trustedTypes;\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nconst polyfillSupport = DEV_MODE\n  ? global.reactiveElementPolyfillSupportDevMode\n  : global.reactiveElementPolyfillSupport;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> = (global.litIssuedWarnings ??=\n    new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n\n  // Issue polyfill support warning.\n  if (global.ShadyDOM?.inUse && polyfillSupport === undefined) {\n    issueWarning(\n      'polyfill-support-missing',\n      `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n        `the \\`polyfill-support\\` module has not been loaded.`\n    );\n  }\n}\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace ReactiveUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry = Update;\n    export interface Update {\n      kind: 'update';\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: ReactiveUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<ReactiveUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string | null, type?: TypeHint): Type;\n\n  /**\n   * Called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n  | ComplexAttributeConverter<Type>\n  | ((value: string | null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * When set to `true`, indicates the property is internal private state. The\n   * property should not be set by users. When using TypeScript, this property\n   * should be marked as `private` or `protected`, and it is also a common\n   * practice to use a leading `_` in the name. The property is not added to\n   * `observedAttributes`.\n   */\n  readonly state?: boolean;\n\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean | string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n\n  /**\n   * Whether this property is wrapping accessors. This is set by `@property`\n   * to control the initial value change and reflection logic.\n   *\n   * @internal\n   */\n  wrapped?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * A Map of property keys to values.\n *\n * Takes an optional type parameter T, which when specified as a non-any,\n * non-unknown type, will make the Map more strongly-typed, associating the map\n * keys with their corresponding value type on T.\n *\n * Use `PropertyValues<this>` when overriding ReactiveElement.update() and\n * other lifecycle methods in order to get stronger type-checking on keys\n * and values.\n */\n// This type is conditional so that if the parameter T is not specified, or\n// is `any`, the type will include `Map<PropertyKey, unknown>`. Since T is not\n// given in the uses of PropertyValues in this file, all uses here fallback to\n// meaning `Map<PropertyKey, unknown>`, but if a developer uses\n// `PropertyValues<this>` (or any other value for T) they will get a\n// strongly-typed Map type.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PropertyValues<T = any> = T extends object\n  ? PropertyValueMap<T>\n  : Map<PropertyKey, unknown>;\n\n/**\n * Do not use, instead prefer {@linkcode PropertyValues}.\n */\n// This type must be exported such that JavaScript generated by the Google\n// Closure Compiler can import a type reference.\nexport interface PropertyValueMap<T> extends Map<PropertyKey, unknown> {\n  get<K extends keyof T>(k: K): T[K] | undefined;\n  set<K extends keyof T>(key: K, value: T[K]): this;\n  has<K extends keyof T>(k: K): boolean;\n  delete<K extends keyof T>(k: K): boolean;\n}\n\nexport const defaultConverter: ComplexAttributeConverter = {\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        value = value ? emptyStringForBooleanAttribute : null;\n        break;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        value = value == null ? value : JSON.stringify(value);\n        break;\n    }\n    return value;\n  },\n\n  fromAttribute(value: string | null, type?: unknown) {\n    let fromValue: unknown = value;\n    switch (type) {\n      case Boolean:\n        fromValue = value !== null;\n        break;\n      case Number:\n        fromValue = value === null ? null : Number(value);\n        break;\n      case Object:\n      case Array:\n        // Do *not* generate exception when invalid JSON is set as elements\n        // don't normally complain on being mis-configured.\n        // TODO(sorvell): Do generate exception in *dev mode*.\n        try {\n          // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n          fromValue = JSON.parse(value!) as unknown;\n        } catch (e) {\n          fromValue = null;\n        }\n        break;\n    }\n    return fromValue;\n  },\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean =>\n  !is(value, old);\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n/**\n * A string representing one of the supported dev mode warning categories.\n */\nexport type WarningKind =\n  | 'change-in-update'\n  | 'migration'\n  | 'async-perform-update';\n\nexport type Initializer = (element: ReactiveElement) => void;\n\n// Temporary, until google3 is on TypeScript 5.2\ndeclare global {\n  interface SymbolConstructor {\n    readonly metadata: unique symbol;\n  }\n}\n\n// Ensure metadata is enabled. TypeScript does not polyfill\n// Symbol.metadata, so we must ensure that it exists.\n(Symbol as {metadata: symbol}).metadata ??= Symbol('metadata');\n\ndeclare global {\n  // This is public global API, do not change!\n  // eslint-disable-next-line no-var\n  var litPropertyMetadata: WeakMap<\n    object,\n    Map<PropertyKey, PropertyDeclaration>\n  >;\n}\n\n// Map from a class's metadata object to property options\n// Note that we must use nullish-coalescing assignment so that we only use one\n// map even if we load multiple version of this module.\nglobal.litPropertyMetadata ??= new WeakMap<\n  object,\n  Map<PropertyKey, PropertyDeclaration>\n>();\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclasses to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class ReactiveElement\n  // In the Node build, this `extends` clause will be substituted with\n  // `(globalThis.HTMLElement ?? HTMLElement)`.\n  //\n  // This way, we will first prefer any global `HTMLElement` polyfill that the\n  // user has assigned, and then fall back to the `HTMLElement` shim which has\n  // been imported (see note at the top of this file about how this import is\n  // generated by Rollup). Note that the `HTMLElement` variable has been\n  // shadowed by this import, so it no longer refers to the global.\n  extends HTMLElement\n  implements ReactiveControllerHost\n{\n  // Note: these are patched in only in DEV_MODE.\n  /**\n   * Read or set all the enabled warning categories for this class.\n   *\n   * This property is only used in development builds.\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enabledWarnings?: WarningKind[];\n\n  /**\n   * Enable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Enable for all ReactiveElement subclasses\n   * ReactiveElement.enableWarning?.('migration');\n   *\n   * // Enable for only MyElement and subclasses\n   * MyElement.enableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Disable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Disable for all ReactiveElement subclasses\n   * ReactiveElement.disableWarning?.('migration');\n   *\n   * // Disable for only MyElement and subclasses\n   * MyElement.disableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static disableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Adds an initializer function to the class that is called during instance\n   * construction.\n   *\n   * This is useful for code that runs against a `ReactiveElement`\n   * subclass, such as a decorator, that needs to do work for each\n   * instance, such as setting up a `ReactiveController`.\n   *\n   * ```ts\n   * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n   *   target.addInitializer((instance: ReactiveElement) => {\n   *     // This is run during construction of the element\n   *     new MyController(instance);\n   *   });\n   * }\n   * ```\n   *\n   * Decorating a field will then cause each instance to run an initializer\n   * that adds a controller:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   @myDecorator foo;\n   * }\n   * ```\n   *\n   * Initializers are stored per-constructor. Adding an initializer to a\n   * subclass does not add it to a superclass. Since initializers are run in\n   * constructors, initializers will run in order of the class hierarchy,\n   * starting with superclasses and progressing to the instance's class.\n   *\n   * @nocollapse\n   */\n  static addInitializer(initializer: Initializer) {\n    this.__prepare();\n    (this._initializers ??= []).push(initializer);\n  }\n\n  static _initializers?: Initializer[];\n\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   * @nocollapse\n   */\n  private static __attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having been finalized, which includes creating properties\n   * from `static properties`, but does *not* include all properties created\n   * from decorators.\n   * @nocollapse\n   */\n  protected static finalized: true | undefined;\n\n  /**\n   * Memoized list of all element properties, including any superclass\n   * properties. Created lazily on user subclasses when finalizing the class.\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static elementProperties: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring reactive properties. When\n   * a reactive property is set the element will update and render.\n   *\n   * By default properties are public fields, and as such, they should be\n   * considered as primarily settable by element users, either via attribute or\n   * the property itself.\n   *\n   * Generally, properties that are changed by the element should be private or\n   * protected fields and should use the `state: true` option. Properties\n   * marked as `state` do not reflect from the corresponding attribute\n   *\n   * However, sometimes element code does need to set a public property. This\n   * should typically only be done in response to user interaction, and an event\n   * should be fired informing the user; for example, a checkbox sets its\n   * `checked` property when clicked and fires a `changed` event. Mutating\n   * public properties should typically not be done for non-primitive (object or\n   * array) properties. In other cases when an element needs to manage state, a\n   * private property set with the `state: true` option should be used. When\n   * needed, state properties can be initialized via public properties to\n   * facilitate complex interactions.\n   * @nocollapse\n   * @category properties\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Memoized list of all element styles.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category styles\n   */\n  static elementStyles: Array<CSSResultOrNative> = [];\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the {@linkcode css} tag function, via constructible stylesheets, or\n   * imported from native CSS module scripts.\n   *\n   * Note on Content Security Policy:\n   *\n   * Element styles are implemented with `<style>` tags when the browser doesn't\n   * support adopted StyleSheets. To use such `<style>` tags with the style-src\n   * CSP directive, the style-src value must either include 'unsafe-inline' or\n   * `nonce-<base64-value>` with `<base64-value>` replaced be a server-generated\n   * nonce.\n   *\n   * To provide a nonce to use on generated `<style>` elements, set\n   * `window.litNonce` to a server-generated nonce in your page's HTML, before\n   * loading application code:\n   *\n   * ```html\n   * <script>\n   *   // Generated and unique per request:\n   *   window.litNonce = 'a1b2c3d4';\n   * </script>\n   * ```\n   * @nocollapse\n   * @category styles\n   */\n  static styles?: CSSResultGroup;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   * @category attributes\n   */\n  static get observedAttributes() {\n    // Ensure we've created all properties\n    this.finalize();\n    // this.__attributeToPropertyMap is only undefined after finalize() in\n    // ReactiveElement itself. ReactiveElement.observedAttributes is only\n    // accessed with ReactiveElement as the receiver when a subclass or mixin\n    // calls super.observedAttributes\n    return (\n      this.__attributeToPropertyMap && [...this.__attributeToPropertyMap.keys()]\n    );\n  }\n\n  private __instanceProperties?: PropertyValues = undefined;\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a {@linkcode PropertyDeclaration} for the property with the\n   * given options. The property setter calls the property's `hasChanged`\n   * property option or uses a strict identity check to determine whether or not\n   * to request an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * ```ts\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static createProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    // If this is a state property, force the attribute to false.\n    if (options.state) {\n      (options as Mutable<PropertyDeclaration, 'attribute'>).attribute = false;\n    }\n    this.__prepare();\n    this.elementProperties.set(name, options);\n    if (!options.noAccessor) {\n      const key = DEV_MODE\n        ? // Use Symbol.for in dev mode to make it easier to maintain state\n          // when doing HMR.\n          Symbol.for(`${String(name)} (@property() cache)`)\n        : Symbol();\n      const descriptor = this.getPropertyDescriptor(name, key, options);\n      if (descriptor !== undefined) {\n        defineProperty(this.prototype, name, descriptor);\n      }\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   static getPropertyDescriptor(name, key, options) {\n   *     const defaultDescriptor =\n   *         super.getPropertyDescriptor(name, key, options);\n   *     const setter = defaultDescriptor.set;\n   *     return {\n   *       get: defaultDescriptor.get,\n   *       set(value) {\n   *         setter.call(this, value);\n   *         // custom action.\n   *       },\n   *       configurable: true,\n   *       enumerable: true\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  protected static getPropertyDescriptor(\n    name: PropertyKey,\n    key: string | symbol,\n    options: PropertyDeclaration\n  ): PropertyDescriptor | undefined {\n    const {get, set} = getOwnPropertyDescriptor(this.prototype, name) ?? {\n      get(this: ReactiveElement) {\n        return this[key as keyof typeof this];\n      },\n      set(this: ReactiveElement, v: unknown) {\n        (this as unknown as Record<string | symbol, unknown>)[key] = v;\n      },\n    };\n    if (DEV_MODE && get == null) {\n      if ('value' in (getOwnPropertyDescriptor(this.prototype, name) ?? {})) {\n        throw new Error(\n          `Field ${JSON.stringify(String(name))} on ` +\n            `${this.name} was declared as a reactive property ` +\n            `but it's actually declared as a value on the prototype. ` +\n            `Usually this is due to using @property or @state on a method.`\n        );\n      }\n      issueWarning(\n        'reactive-property-without-getter',\n        `Field ${JSON.stringify(String(name))} on ` +\n          `${this.name} was declared as a reactive property ` +\n          `but it does not have a getter. This will be an error in a ` +\n          `future version of Lit.`\n      );\n    }\n    return {\n      get(this: ReactiveElement) {\n        return get?.call(this);\n      },\n      set(this: ReactiveElement, value: unknown) {\n        const oldValue = get?.call(this);\n        set!.call(this, value);\n        this.requestUpdate(name, oldValue, options);\n      },\n      configurable: true,\n      enumerable: true,\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a `PropertyDeclaration` via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override\n   * {@linkcode createProperty}.\n   *\n   * @nocollapse\n   * @final\n   * @category properties\n   */\n  static getPropertyOptions(name: PropertyKey) {\n    return this.elementProperties.get(name) ?? defaultPropertyDeclaration;\n  }\n\n  // Temporary, until google3 is on TypeScript 5.2\n  declare static [Symbol.metadata]: object & Record<PropertyKey, unknown>;\n\n  /**\n   * Initializes static own properties of the class used in bookkeeping\n   * for element properties, initializers, etc.\n   *\n   * Can be called multiple times by code that needs to ensure these\n   * properties exist before using them.\n   *\n   * This method ensures the superclass is finalized so that inherited\n   * property metadata can be copied down.\n   * @nocollapse\n   */\n  private static __prepare() {\n    if (\n      this.hasOwnProperty(JSCompiler_renameProperty('elementProperties', this))\n    ) {\n      // Already prepared\n      return;\n    }\n    // Finalize any superclasses\n    const superCtor = getPrototypeOf(this) as typeof ReactiveElement;\n    superCtor.finalize();\n\n    // Create own set of initializers for this class if any exist on the\n    // superclass and copy them down. Note, for a small perf boost, avoid\n    // creating initializers unless needed.\n    if (superCtor._initializers !== undefined) {\n      this._initializers = [...superCtor._initializers];\n    }\n    // Initialize elementProperties from the superclass\n    this.elementProperties = new Map(superCtor.elementProperties);\n  }\n\n  /**\n   * Finishes setting up the class so that it's ready to be registered\n   * as a custom element and instantiated.\n   *\n   * This method is called by the ReactiveElement.observedAttributes getter.\n   * If you override the observedAttributes getter, you must either call\n   * super.observedAttributes to trigger finalization, or call finalize()\n   * yourself.\n   *\n   * @nocollapse\n   */\n  protected static finalize() {\n    if (this.hasOwnProperty(JSCompiler_renameProperty('finalized', this))) {\n      return;\n    }\n    this.finalized = true;\n    this.__prepare();\n\n    // Create properties from the static properties block:\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      const propKeys = [\n        ...getOwnPropertyNames(props),\n        ...getOwnPropertySymbols(props),\n      ] as Array<keyof typeof props>;\n      for (const p of propKeys) {\n        this.createProperty(p, props[p]);\n      }\n    }\n\n    // Create properties from standard decorator metadata:\n    const metadata = this[Symbol.metadata];\n    if (metadata !== null) {\n      const properties = litPropertyMetadata.get(metadata);\n      if (properties !== undefined) {\n        for (const [p, options] of properties) {\n          this.elementProperties.set(p, options);\n        }\n      }\n    }\n\n    // Create the attribute-to-property map\n    this.__attributeToPropertyMap = new Map();\n    for (const [p, options] of this.elementProperties) {\n      const attr = this.__attributeNameForProperty(p, options);\n      if (attr !== undefined) {\n        this.__attributeToPropertyMap.set(attr, p);\n      }\n    }\n\n    this.elementStyles = this.finalizeStyles(this.styles);\n\n    if (DEV_MODE) {\n      if (this.hasOwnProperty('createProperty')) {\n        issueWarning(\n          'no-override-create-property',\n          'Overriding ReactiveElement.createProperty() is deprecated. ' +\n            'The override will not be called with standard decorators'\n        );\n      }\n      if (this.hasOwnProperty('getPropertyDescriptor')) {\n        issueWarning(\n          'no-override-get-property-descriptor',\n          'Overriding ReactiveElement.getPropertyDescriptor() is deprecated. ' +\n            'The override will not be called with standard decorators'\n        );\n      }\n    }\n  }\n\n  /**\n   * Options used when calling `attachShadow`. Set this property to customize\n   * the options for the shadowRoot; for example, to create a closed\n   * shadowRoot: `{mode: 'closed'}`.\n   *\n   * Note, these options are used in `createRenderRoot`. If this method\n   * is customized, options should be respected if possible.\n   * @nocollapse\n   * @category rendering\n   */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  /**\n   * Takes the styles the user supplied via the `static styles` property and\n   * returns the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * Styles are deduplicated preserving the _last_ instance in the list. This\n   * is a performance optimization to avoid duplicated styles that can occur\n   * especially when composing via subclassing. The last item is kept to try\n   * to preserve the cascade order with the assumption that it's most important\n   * that last added styles override previous styles.\n   *\n   * @nocollapse\n   * @category styles\n   */\n  protected static finalizeStyles(\n    styles?: CSSResultGroup\n  ): Array<CSSResultOrNative> {\n    const elementStyles = [];\n    if (Array.isArray(styles)) {\n      // Dedupe the flattened array in reverse order to preserve the last items.\n      // Casting to Array<unknown> works around TS error that\n      // appears to come from trying to flatten a type CSSResultArray.\n      const set = new Set((styles as Array<unknown>).flat(Infinity).reverse());\n      // Then preserve original order by adding the set items in reverse order.\n      for (const s of set) {\n        elementStyles.unshift(getCompatibleStyle(s as CSSResultOrNative));\n      }\n    } else if (styles !== undefined) {\n      elementStyles.push(getCompatibleStyle(styles));\n    }\n    return elementStyles;\n  }\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   * @category rendering\n   */\n  readonly renderRoot!: HTMLElement | DocumentFragment;\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static __attributeNameForProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration\n  ) {\n    const attribute = options.attribute;\n    return attribute === false\n      ? undefined\n      : typeof attribute === 'string'\n      ? attribute\n      : typeof name === 'string'\n      ? name.toLowerCase()\n      : undefined;\n  }\n\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private __updatePromise!: Promise<boolean>;\n\n  /**\n   * True if there is a pending update as a result of calling `requestUpdate()`.\n   * Should only be read.\n   * @category updates\n   */\n  isUpdatePending = false;\n\n  /**\n   * Is set to `true` after the first update. The element code cannot assume\n   * that `renderRoot` exists before the element `hasUpdated`.\n   * @category updates\n   */\n  hasUpdated = false;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   *\n   * @internal\n   */\n  _$changedProperties!: PropertyValues;\n\n  /**\n   * Properties that should be reflected when updated.\n   */\n  private __reflectingProperties?: Set<PropertyKey>;\n\n  /**\n   * Name of currently reflecting property\n   */\n  private __reflectingProperty: PropertyKey | null = null;\n\n  /**\n   * Set of controllers.\n   */\n  private __controllers?: ReactiveController[];\n\n  constructor() {\n    super();\n    this.__initialize();\n  }\n\n  /**\n   * Internal only override point for customizing work done when elements\n   * are constructed.\n   */\n  private __initialize() {\n    this.__updatePromise = new Promise<boolean>(\n      (res) => (this.enableUpdating = res)\n    );\n    this._$changedProperties = new Map();\n    // This enqueues a microtask that ust run before the first update, so it\n    // must be called before requestUpdate()\n    this.__saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdate();\n    (this.constructor as typeof ReactiveElement)._initializers?.forEach((i) =>\n      i(this)\n    );\n  }\n\n  /**\n   * Registers a `ReactiveController` to participate in the element's reactive\n   * update cycle. The element automatically calls into any registered\n   * controllers during its lifecycle callbacks.\n   *\n   * If the element is connected when `addController()` is called, the\n   * controller's `hostConnected()` callback will be immediately called.\n   * @category controllers\n   */\n  addController(controller: ReactiveController) {\n    (this.__controllers ??= []).push(controller);\n    // If a controller is added after the element has been connected,\n    // call hostConnected. Note, re-using existence of `renderRoot` here\n    // (which is set in connectedCallback) to avoid the need to track a\n    // first connected state.\n    if (this.renderRoot !== undefined && this.isConnected) {\n      controller.hostConnected?.();\n    }\n  }\n\n  /**\n   * Removes a `ReactiveController` from the element.\n   * @category controllers\n   */\n  removeController(controller: ReactiveController) {\n    // Note, if the indexOf is -1, the >>> will flip the sign which makes the\n    // splice do nothing.\n    this.__controllers?.splice(this.__controllers.indexOf(controller) >>> 0, 1);\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private __saveInstanceProperties() {\n    const instanceProperties = new Map<PropertyKey, unknown>();\n    const elementProperties = (this.constructor as typeof ReactiveElement)\n      .elementProperties;\n    for (const p of elementProperties.keys() as IterableIterator<keyof this>) {\n      if (this.hasOwnProperty(p)) {\n        instanceProperties.set(p, this[p]);\n        delete this[p];\n      }\n    }\n    if (instanceProperties.size > 0) {\n      this.__instanceProperties = instanceProperties;\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   *\n   * @return Returns a node into which to render.\n   * @category rendering\n   */\n  protected createRenderRoot(): HTMLElement | DocumentFragment {\n    const renderRoot =\n      this.shadowRoot ??\n      this.attachShadow(\n        (this.constructor as typeof ReactiveElement).shadowRootOptions\n      );\n    adoptStyles(\n      renderRoot,\n      (this.constructor as typeof ReactiveElement).elementStyles\n    );\n    return renderRoot;\n  }\n\n  /**\n   * On first connection, creates the element's renderRoot, sets up\n   * element styling, and enables updating.\n   * @category lifecycle\n   */\n  connectedCallback() {\n    // Create renderRoot before first update.\n    (this as Mutable<typeof this, 'renderRoot'>).renderRoot ??=\n      this.createRenderRoot();\n    this.enableUpdating(true);\n    this.__controllers?.forEach((c) => c.hostConnected?.());\n  }\n\n  /**\n   * Note, this method should be considered final and not overridden. It is\n   * overridden on the element instance with a function that triggers the first\n   * update.\n   * @category updates\n   */\n  protected enableUpdating(_requestedUpdate: boolean) {}\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    this.__controllers?.forEach((c) => c.hostDisconnected?.());\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * Specifically, when an attribute is set, the corresponding property is set.\n   * You should rarely need to implement this callback. If this method is\n   * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n   * called.\n   *\n   * See [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\n   * on MDN for more information about the `attributeChangedCallback`.\n   * @category attributes\n   */\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null\n  ) {\n    this._$attributeToProperty(name, value);\n  }\n\n  private __propertyToAttribute(name: PropertyKey, value: unknown) {\n    const elemProperties: PropertyDeclarationMap = (\n      this.constructor as typeof ReactiveElement\n    ).elementProperties;\n    const options = elemProperties.get(name)!;\n    const attr = (\n      this.constructor as typeof ReactiveElement\n    ).__attributeNameForProperty(name, options);\n    if (attr !== undefined && options.reflect === true) {\n      const converter =\n        (options.converter as ComplexAttributeConverter)?.toAttribute !==\n        undefined\n          ? (options.converter as ComplexAttributeConverter)\n          : defaultConverter;\n      const attrValue = converter.toAttribute!(value, options.type);\n      if (\n        DEV_MODE &&\n        (this.constructor as typeof ReactiveElement).enabledWarnings!.includes(\n          'migration'\n        ) &&\n        attrValue === undefined\n      ) {\n        issueWarning(\n          'undefined-attribute-value',\n          `The attribute value for the ${name as string} property is ` +\n            `undefined on element ${this.localName}. The attribute will be ` +\n            `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n            `the attribute would not have changed.`\n        );\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this.__reflectingProperty = name;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /** @internal */\n  _$attributeToProperty(name: string, value: string | null) {\n    const ctor = this.constructor as typeof ReactiveElement;\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    const propName = (ctor.__attributeToPropertyMap as AttributeMap).get(name);\n    // Use tracking info to avoid reflecting a property value to an attribute\n    // if it was just set because the attribute changed.\n    if (propName !== undefined && this.__reflectingProperty !== propName) {\n      const options = ctor.getPropertyOptions(propName);\n      const converter =\n        typeof options.converter === 'function'\n          ? {fromAttribute: options.converter}\n          : options.converter?.fromAttribute !== undefined\n          ? options.converter\n          : defaultConverter;\n      // mark state reflecting\n      this.__reflectingProperty = propName;\n      this[propName as keyof this] = converter.fromAttribute!(\n        value,\n        options.type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) as any;\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should be called\n   * when an element should update based on some state not triggered by setting\n   * a reactive property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored.\n   *\n   * @param name name of requesting property\n   * @param oldValue old value of requesting property\n   * @param options property options to use instead of the previously\n   *     configured options\n   * @param initial whether this call is for the initial value of the property.\n   *     Initial values do not reflect to an attribute.\n   * @category updates\n   */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration\n  ): void;\n  /* @internal */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration,\n    initial = false,\n    initialValue?: unknown\n  ): void {\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      options ??= (\n        this.constructor as typeof ReactiveElement\n      ).getPropertyOptions(name);\n      const hasChanged = options.hasChanged ?? notEqual;\n      const newValue = initial ? initialValue : this[name as keyof this];\n      if (hasChanged(newValue, oldValue)) {\n        this._$changeProperty(name, oldValue, options);\n      } else {\n        // Abort the request if the property should not be considered changed.\n        return;\n      }\n    }\n    if (this.isUpdatePending === false) {\n      this.__updatePromise = this.__enqueueUpdate();\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _$changeProperty(\n    name: PropertyKey,\n    oldValue: unknown,\n    options: PropertyDeclaration\n  ) {\n    // TODO (justinfagnani): Create a benchmark of Map.has() + Map.set(\n    // vs just Map.set()\n    if (!this._$changedProperties.has(name)) {\n      this._$changedProperties.set(name, oldValue);\n    }\n    // Add to reflecting properties set.\n    // Note, it's important that every change has a chance to add the\n    // property to `__reflectingProperties`. This ensures setting\n    // attribute + property reflects correctly.\n    if (options.reflect === true && this.__reflectingProperty !== name) {\n      (this.__reflectingProperties ??= new Set<PropertyKey>()).add(name);\n    }\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async __enqueueUpdate() {\n    this.isUpdatePending = true;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this.__updatePromise;\n    } catch (e) {\n      // Refire any previous errors async so they do not disrupt the update\n      // cycle. Errors are refired so developers have a chance to observe\n      // them, and this can be done by implementing\n      // `window.onunhandledrejection`.\n      Promise.reject(e);\n    }\n    const result = this.scheduleUpdate();\n    // If `scheduleUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this.isUpdatePending;\n  }\n\n  /**\n   * Schedules an element update. You can override this method to change the\n   * timing of updates by returning a Promise. The update will await the\n   * returned Promise, and you should resolve the Promise to allow the update\n   * to proceed. If this method is overridden, `super.scheduleUpdate()`\n   * must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```ts\n   * override protected async scheduleUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.scheduleUpdate();\n   * }\n   * ```\n   * @category updates\n   */\n  protected scheduleUpdate(): void | Promise<unknown> {\n    const result = this.performUpdate();\n    if (\n      DEV_MODE &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.includes(\n        'async-perform-update'\n      ) &&\n      typeof (result as unknown as Promise<unknown> | undefined)?.then ===\n        'function'\n    ) {\n      issueWarning(\n        'async-perform-update',\n        `Element ${this.localName} returned a Promise from performUpdate(). ` +\n          `This behavior is deprecated and will be removed in a future ` +\n          `version of ReactiveElement.`\n      );\n    }\n    return result;\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * Call `performUpdate()` to immediately process a pending update. This should\n   * generally not be needed, but it can be done in rare cases when you need to\n   * update synchronously.\n   *\n   * @category updates\n   */\n  protected performUpdate(): void {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this.isUpdatePending) {\n      return;\n    }\n    debugLogEvent?.({kind: 'update'});\n    if (!this.hasUpdated) {\n      if (DEV_MODE) {\n        // Produce warning if any reactive properties on the prototype are\n        // shadowed by class fields. Instance fields set before upgrade are\n        // deleted by this point, so any own property is caused by class field\n        // initialization in the constructor.\n        const ctor = this.constructor as typeof ReactiveElement;\n        const shadowedProperties = [...ctor.elementProperties.keys()].filter(\n          (p) => this.hasOwnProperty(p) && p in getPrototypeOf(this)\n        );\n        if (shadowedProperties.length) {\n          throw new Error(\n            `The following properties on element ${this.localName} will not ` +\n              `trigger updates as expected because they are set using class ` +\n              `fields: ${shadowedProperties.join(', ')}. ` +\n              `Native class fields and some compiled output will overwrite ` +\n              `accessors used for detecting changes. See ` +\n              `https://lit.dev/msg/class-field-shadowing ` +\n              `for more information.`\n          );\n        }\n      }\n      // Mixin instance properties once, if they exist.\n      if (this.__instanceProperties) {\n        // TODO (justinfagnani): should we use the stored value? Could a new value\n        // have been set since we stored the own property value?\n        for (const [p, value] of this.__instanceProperties) {\n          this[p as keyof this] = value as this[keyof this];\n        }\n        this.__instanceProperties = undefined;\n      }\n      // Trigger initial value reflection and populate the initial\n      // changedProperties map, but only for the case of experimental\n      // decorators on accessors, which will not have already populated the\n      // changedProperties map. We can't know if these accessors had\n      // initializers, so we just set them anyway - a difference from\n      // experimental decorators on fields and standard decorators on\n      // auto-accessors.\n      const elementProperties = (this.constructor as typeof ReactiveElement)\n        .elementProperties;\n      if (elementProperties.size > 0) {\n        for (const [p, options] of elementProperties) {\n          if (\n            options.wrapped === true &&\n            !this._$changedProperties.has(p) &&\n            this[p as keyof this] !== undefined\n          ) {\n            this._$changeProperty(p, this[p as keyof this], options);\n          }\n        }\n      }\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._$changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.willUpdate(changedProperties);\n        this.__controllers?.forEach((c) => c.hostUpdate?.());\n        this.update(changedProperties);\n      } else {\n        this.__markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this.__markUpdated();\n      throw e;\n    }\n    // The update is no longer considered pending and further updates are now allowed.\n    if (shouldUpdate) {\n      this._$didUpdate(changedProperties);\n    }\n  }\n\n  /**\n   * Invoked before `update()` to compute values needed during the update.\n   *\n   * Implement `willUpdate` to compute property values that depend on other\n   * properties and are used in the rest of the update process.\n   *\n   * ```ts\n   * willUpdate(changedProperties) {\n   *   // only need to check changed properties for an expensive computation.\n   *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n   *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n   *   }\n   * }\n   *\n   * render() {\n   *   return html`SHA: ${this.sha}`;\n   * }\n   * ```\n   *\n   * @category updates\n   */\n  protected willUpdate(_changedProperties: PropertyValues): void {}\n\n  // Note, this is an override point for polyfill-support.\n  // @internal\n  _$didUpdate(changedProperties: PropertyValues) {\n    this.__controllers?.forEach((c) => c.hostUpdated?.());\n    if (!this.hasUpdated) {\n      this.hasUpdated = true;\n      this.firstUpdated(changedProperties);\n    }\n    this.updated(changedProperties);\n    if (\n      DEV_MODE &&\n      this.isUpdatePending &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.includes(\n        'change-in-update'\n      )\n    ) {\n      issueWarning(\n        'change-in-update',\n        `Element ${this.localName} scheduled an update ` +\n          `(generally because a property was set) ` +\n          `after an update completed, causing a new update to be scheduled. ` +\n          `This is inefficient and should be avoided unless the next update ` +\n          `can only be scheduled as a side effect of the previous update.`\n      );\n    }\n  }\n\n  private __markUpdated() {\n    this._$changedProperties = new Map();\n    this.isUpdatePending = false;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super.getUpdateComplete()`, then any subsequent state.\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  get updateComplete(): Promise<boolean> {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   override async getUpdateComplete() {\n   *     const result = await super.getUpdateComplete();\n   *     await this._myChild.updateComplete;\n   *     return result;\n   *   }\n   * }\n   * ```\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  protected getUpdateComplete(): Promise<boolean> {\n    return this.__updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update()` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected update(_changedProperties: PropertyValues) {\n    // The forEach() expression will only run when when __reflectingProperties is\n    // defined, and it returns undefined, setting __reflectingProperties to\n    // undefined\n    this.__reflectingProperties &&= this.__reflectingProperties.forEach((p) =>\n      this.__propertyToAttribute(p, this[p as keyof this])\n    ) as undefined;\n    this.__markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected updated(_changedProperties: PropertyValues) {}\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * ```ts\n   * firstUpdated() {\n   *   this.renderRoot.getElementById('my-text-area').focus();\n   * }\n   * ```\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {}\n}\n// Assigned here to work around a jscompiler bug with static fields\n// when compiling to ES5.\n// https://github.com/google/closure-compiler/issues/3177\n(ReactiveElement as unknown as Record<string, unknown>)[\n  JSCompiler_renameProperty('elementProperties', ReactiveElement)\n] = new Map();\n(ReactiveElement as unknown as Record<string, unknown>)[\n  JSCompiler_renameProperty('finalized', ReactiveElement)\n] = new Map();\n\n// Apply polyfills if available\npolyfillSupport?.({ReactiveElement});\n\n// Dev mode warnings...\nif (DEV_MODE) {\n  // Default warning set.\n  ReactiveElement.enabledWarnings = [\n    'change-in-update',\n    'async-perform-update',\n  ];\n  const ensureOwnWarnings = function (ctor: typeof ReactiveElement) {\n    if (\n      !ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))\n    ) {\n      ctor.enabledWarnings = ctor.enabledWarnings!.slice();\n    }\n  };\n  ReactiveElement.enableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    if (!this.enabledWarnings!.includes(warning)) {\n      this.enabledWarnings!.push(warning);\n    }\n  };\n  ReactiveElement.disableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    const i = this.enabledWarnings!.indexOf(warning);\n    if (i >= 0) {\n      this.enabledWarnings!.splice(i, 1);\n    }\n  };\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(global.reactiveElementVersions ??= []).push('2.0.0');\nif (DEV_MODE && global.reactiveElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LitUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | TemplatePrep\n      | TemplateInstantiated\n      | TemplateInstantiatedAndUpdated\n      | TemplateUpdating\n      | BeginRender\n      | EndRender\n      | CommitPartEntry\n      | SetPartValue;\n    export interface TemplatePrep {\n      kind: 'template prep';\n      template: Template;\n      strings: TemplateStringsArray;\n      clonableTemplate: HTMLTemplateElement;\n      parts: TemplatePart[];\n    }\n    export interface BeginRender {\n      kind: 'begin render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart | undefined;\n    }\n    export interface EndRender {\n      kind: 'end render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart;\n    }\n    export interface TemplateInstantiated {\n      kind: 'template instantiated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateInstantiatedAndUpdated {\n      kind: 'template instantiated and updated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateUpdating {\n      kind: 'template updating';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface SetPartValue {\n      kind: 'set part';\n      part: Part;\n      value: unknown;\n      valueIndex: number;\n      values: unknown[];\n      templateInstance: TemplateInstance;\n    }\n\n    export type CommitPartEntry =\n      | CommitNothingToChildEntry\n      | CommitText\n      | CommitNode\n      | CommitAttribute\n      | CommitProperty\n      | CommitBooleanAttribute\n      | CommitEventListener\n      | CommitToElementBinding;\n\n    export interface CommitNothingToChildEntry {\n      kind: 'commit nothing to child';\n      start: ChildNode;\n      end: ChildNode | null;\n      parent: Disconnectable | undefined;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitText {\n      kind: 'commit text';\n      node: Text;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitNode {\n      kind: 'commit node';\n      start: Node;\n      parent: Disconnectable | undefined;\n      value: Node;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitAttribute {\n      kind: 'commit attribute';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitProperty {\n      kind: 'commit property';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitBooleanAttribute {\n      kind: 'commit boolean attribute';\n      element: Element;\n      name: string;\n      value: boolean;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitEventListener {\n      kind: 'commit event listener';\n      element: Element;\n      name: string;\n      value: unknown;\n      oldListener: unknown;\n      options: RenderOptions | undefined;\n      // True if we're removing the old event listener (e.g. because settings changed, or value is nothing)\n      removeListener: boolean;\n      // True if we're adding a new event listener (e.g. because first render, or settings changed)\n      addListener: boolean;\n    }\n\n    export interface CommitToElementBinding {\n      kind: 'commit to element binding';\n      element: Element;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: LitUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<LitUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  global.litIssuedWarnings ??= new Set();\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!global.litIssuedWarnings!.has(warning)) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  global.ShadyDOM?.inUse &&\n  global.ShadyDOM?.noPatch === true\n    ? (global.ShadyDOM!.wrap as <T extends Node>(node: T) => T)\n    : <T extends Node>(node: T) => node;\n\nconst trustedTypes = (global as unknown as Window).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${String(Math.random()).slice(9)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d =\n  NODE_MODE && global.document === undefined\n    ? ({\n        createTreeWalker() {\n          return {};\n        },\n      } as unknown as Document)\n    : document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = () => d.createComment('');\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg}.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n */\nexport type TemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  // The type is a TemplateStringsArray to guarantee that the value came from\n  // source code, preventing a JSON injection attack.\n  h: TemplateStringsArray;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG fragment that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus cannot be used within an `<svg>` HTML element.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\nfunction trustFromTemplateString(\n  tsa: TemplateStringsArray,\n  stringFromTSA: string\n): TrustedHTML {\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!Array.isArray(tsa) || !tsa.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    if (DEV_MODE) {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n          If you're using the html or svg tagged template functions normally\n          and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n        .trim()\n        .replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  return policy !== undefined\n    ? policy.createHTML(stringFromTSA)\n    : (stringFromTSA as unknown as TrustedHTML);\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string> = [];\n  let html = type === SVG_RESULT ? '<svg>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n              ? doubleQuoteAttrEndRegex\n              : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n        ? (attrNames.push(attrName!),\n          s.slice(0, attrNameEndIndex) +\n            boundAttributeSuffix +\n            s.slice(attrNameEndIndex)) +\n          marker +\n          end\n        : s + marker + (attrNameEndIndex === -2 ? i : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n\n  // Returned as an array for terseness\n  return [trustFromTemplateString(strings, htmlResult), attrNames];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: TemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Re-parent SVG nodes into template root\n    if (type === SVG_RESULT) {\n      const svgElement = this.el.content.firstChild!;\n      svgElement.replaceWith(...svgElement.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          for (const name of (node as Element).getAttributeNames()) {\n            if (name.endsWith(boundAttributeSuffix)) {\n              const realName = attrNames[attrNameIndex++];\n              const value = (node as Element).getAttribute(name)!;\n              const statics = value.split(marker);\n              const m = /([.?@])?(.*)/.exec(realName)!;\n              parts.push({\n                type: ATTRIBUTE_PART,\n                index: nodeIndex,\n                name: m[2],\n                strings: statics,\n                ctor:\n                  m[1] === '.'\n                    ? PropertyPart\n                    : m[1] === '?'\n                    ? BooleanAttributePart\n                    : m[1] === '@'\n                    ? EventPart\n                    : AttributePart,\n              });\n              (node as Element).removeAttribute(name);\n            } else if (name.startsWith(marker)) {\n              parts.push({\n                type: ELEMENT_PART,\n                index: nodeIndex,\n              });\n              (node as Element).removeAttribute(name);\n            }\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            // We can't use empty text nodes as markers because they're\n            // normalized when cloning in IE (could simplify when\n            // IE is no longer supported)\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n    // We could set walker.currentNode to another node here to prevent a memory\n    // leak, but every time we prepare a template, we immediately render it\n    // and re-use the walker in new TemplateInstance._clone().\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'template prep',\n        template: this,\n        clonableTemplate: this.el,\n        parts: this.parts,\n        strings,\n      });\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\nexport type {TemplateInstance};\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  _$template: Template;\n  _$parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._$parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    // We need to set the currentNode away from the cloned tree so that we\n    // don't hold onto the tree even if the tree is detached and should be\n    // freed.\n    walker.currentNode = d;\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._$parts) {\n      if (part !== undefined) {\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'set part',\n            part,\n            value: values[i],\n            valueIndex: i,\n            values,\n            templateInstance: this,\n          });\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  readonly ctor: typeof AttributePart;\n  readonly strings: ReadonlyArray<string>;\n};\ntype ChildTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | ChildTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unsed otherwise. The\n   * intention would clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode?.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent &&\n            debugLogEvent({\n              kind: 'commit nothing to child',\n              start: this._$startNode,\n              end: this._$endNode,\n              parent: this._$parent,\n              options: this.options,\n            });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      if (DEV_MODE && this.options?.host === value) {\n        this._commitText(\n          `[probable mistake: rendered a template's host in itself ` +\n            `(commonly caused by writing \\${this} in a template]`\n        );\n        console.warn(\n          `Attempted to render the template host`,\n          value,\n          `inside itself. This is almost always a mistake, and in dev mode `,\n          `we render some warning text. In production however, we'll `,\n          `render it, which will usually result in an error, and sometimes `,\n          `in the element disappearing from the DOM.`\n        );\n        return;\n      }\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(\n      node,\n      this._$endNode\n    );\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and make do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit node',\n          start: this._$startNode,\n          parent: this._$parent,\n          value: value,\n          options: this.options,\n        });\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit text',\n          node,\n          value,\n          options: this.options,\n        });\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = d.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'commit text',\n            node: textNode,\n            value,\n            options: this.options,\n          });\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'commit text',\n            node: wrap(this._$startNode).nextSibling as Text,\n            value,\n            options: this.options,\n          });\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as TemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(\n              trustFromTemplateString(type.h, type.h[0]),\n              this.options\n            )),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template updating',\n          template,\n          instance: this._$committedValue as TemplateInstance,\n          parts: (this._$committedValue as TemplateInstance)._$parts,\n          options: this.options,\n          values,\n        });\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template instantiated',\n          template,\n          instance,\n          parts: instance._$parts,\n          options: this.options,\n          fragment,\n          values,\n        });\n      instance._update(values);\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template instantiated and updated',\n          template,\n          instance,\n          parts: instance._$parts,\n          options: this.options,\n          fragment,\n          values,\n        });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: TemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this metod\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was previously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type = ATTRIBUTE_PART as\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit attribute',\n          element: this.element,\n          name: this.name,\n          value,\n          options: this.options,\n        });\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit property',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options,\n      });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit boolean attribute',\n        element: this.element,\n        name: this.name,\n        value: !!(value && value !== nothing),\n        options: this.options,\n      });\n    (wrap(this.element) as Element).toggleAttribute(\n      this.name,\n      !!value && value !== nothing\n    );\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit event listener',\n        element: this.element,\n        name: this.name,\n        value: newListener,\n        options: this.options,\n        removeListener: shouldRemoveListener,\n        addListener: shouldAddListener,\n        oldListener,\n      });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      // Beware: IE11 and Chrome 41 don't like using the listener as the\n      // options object. Figure out how to deal w/ this in IE11 - maybe\n      // patch addEventListener?\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit to element binding',\n        element: this.element,\n        value,\n        options: this.options,\n      });\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in tests and private-ssr-support\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? global.litHtmlPolyfillSupportDevMode\n  : global.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('3.0.0');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. ` +\n      `Loading multiple versions is not recommended.`\n  );\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  if (DEV_MODE && container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  debugLogEvent &&\n    debugLogEvent({\n      kind: 'begin render',\n      id: renderId,\n      value,\n      container,\n      options,\n      part,\n    });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  debugLogEvent &&\n    debugLogEvent({\n      kind: 'end render',\n      id: renderId,\n      value,\n      container,\n      options,\n      part,\n    });\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\nimport {render, RenderOptions, noChange, RootPart} from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n\nimport {LitUnstable} from 'lit-html';\nimport {ReactiveUnstable} from '@lit/reactive-element';\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Unstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | LitUnstable.DebugLog.Entry\n      | ReactiveUnstable.DebugLog.Entry;\n  }\n}\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nexport class LitElement extends ReactiveElement {\n  // This property needs to remain unminified.\n  static ['_$litElement$'] = true;\n\n  /**\n   * @category rendering\n   */\n  readonly renderOptions: RenderOptions = {host: this};\n\n  private __childPart: RootPart | undefined = undefined;\n\n  /**\n   * @category rendering\n   */\n  protected override createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot!.firstChild as ChildNode;\n    return renderRoot;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected override update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    if (!this.hasUpdated) {\n      this.renderOptions.isConnected = this.isConnected;\n    }\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n\n  /**\n   * Invoked when the component is added to the document's DOM.\n   *\n   * In `connectedCallback()` you should setup tasks that should only occur when\n   * the element is connected to the document. The most common of these is\n   * adding event listeners to nodes external to the element, like a keydown\n   * event handler added to the window.\n   *\n   * ```ts\n   * connectedCallback() {\n   *   super.connectedCallback();\n   *   addEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * Typically, anything done in `connectedCallback()` should be undone when the\n   * element is disconnected, in `disconnectedCallback()`.\n   *\n   * @category lifecycle\n   */\n  override connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n\n  /**\n   * Invoked when the component is removed from the document's DOM.\n   *\n   * This callback is the main signal to the element that it may no longer be\n   * used. `disconnectedCallback()` should ensure that nothing is holding a\n   * reference to the element (such as event listeners added to nodes external\n   * to the element), so that it is free to be garbage collected.\n   *\n   * ```ts\n   * disconnectedCallback() {\n   *   super.disconnectedCallback();\n   *   window.removeEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * An element may be re-connected after being disconnected.\n   *\n   * @category lifecycle\n   */\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  protected render(): unknown {\n    return noChange;\n  }\n}\n\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See @lit/reactive-element for more information.\n */\n(LitElement as unknown as Record<string, unknown>)[\n  JSCompiler_renameProperty('finalized', LitElement)\n] = true;\n\n// Install hydration if available\nglobalThis.litElementHydrateSupport?.({LitElement});\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? globalThis.litElementPolyfillSupportDevMode\n  : globalThis.litElementPolyfillSupport;\npolyfillSupport?.({LitElement});\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n  _$attributeToProperty: (\n    el: LitElement,\n    name: string,\n    value: string | null\n  ) => {\n    // eslint-disable-next-line\n    (el as any)._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: (el: LitElement) => (el as any)._$changedProperties,\n};\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(globalThis.litElementVersions ??= []).push('4.0.0');\nif (DEV_MODE && globalThis.litElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n", "/**\n * Custom error to throw when a we detect a known error type on the client\n * @param headline - Error headline to show to user. Will be shown in normal\n * font and should be used to give plain language description of problem\n * @param message - Error message to show to user. Will be shown in monospaced\n * font\n */\nexport class ShinyClientError extends Error {\n  headline: string;\n\n  constructor({ headline, message }: { headline: string; message: string }) {\n    super(message);\n    this.name = \"ShinyClientError\";\n    this.headline = headline;\n  }\n}\n", "/* eslint-disable @typescript-eslint/naming-convention */\n\nimport { css, html, LitElement } from \"lit\";\nimport { Shiny } from \"..\";\nimport { ShinyClientError } from \"../shiny/error\";\n\nconst buttonStyles = css`\n  button {\n    background-color: transparent;\n    outline: none;\n    border-style: none;\n    padding: var(--space-3);\n    border-radius: var(--space-1);\n    font-size: var(--font-lg);\n    background-color: inherit;\n    display: block;\n  }\n\n  button > svg {\n    display: block;\n  }\n`;\nclass ShinyErrorConsole extends LitElement {\n  static styles = [\n    css`\n      :host {\n        /* We declare hard pixel values here to avoid body font size changes\n        messing up the size of the console. This was an issue with bslib setting\n        the body font-size at 16px relative to base shiny's 14px. */\n        --font-md: 14px;\n        --font-lg: 16px;\n        --font-xl: 18px;\n\n        /* These are all taken from open-props */\n        --space-1: 6px;\n        --space-2: calc(var(--space-1) * 2);\n        --space-3: calc(var(--space-1) * 3);\n        --space-4: calc(var(--space-1) * 4);\n        --space-8: calc(var(--space-1) * 8);\n\n        --red-2: #ffc9c9;\n        --red-6: #fa5252;\n        --red-7: #f03e3e;\n        --red-8: #e03131;\n        --red-10: #b02525;\n        --red-11: #962020;\n        --red-12: #7d1a1a;\n\n        --gray-1: #f8f9fa;\n        --gray-2: #e9ecef;\n        --gray-3: #dee2e6;\n        --gray-4: #ced4da;\n        --gray-6: #868e96;\n        --gray-8: #6c757d;\n\n        --green-8: #51cf66;\n\n        --shadow-color: 220 3% 15%;\n        --shadow-strength: 1%;\n        --shadow-3: 0 -1px 3px 0 hsl(var(--shadow-color) /\n                calc(var(--shadow-strength) + 2%)),\n          0 1px 2px -5px hsl(var(--shadow-color) /\n                calc(var(--shadow-strength) + 2%)),\n          0 2px 5px -5px hsl(var(--shadow-color) /\n                calc(var(--shadow-strength) + 4%)),\n          0 4px 12px -5px hsl(var(--shadow-color) /\n                calc(var(--shadow-strength) + 5%)),\n          0 12px 15px -5px hsl(var(--shadow-color) /\n                calc(var(--shadow-strength) + 7%));\n\n        --ring-shadow: 0 0 0 1px var(--gray-2);\n\n        /* How fast should the message pop in and out of the screen? */\n        --animation-speed: 500ms;\n\n        /* Taken from open-props */\n        --ease-3: cubic-bezier(0.25, 0, 0.3, 1);\n        --animation-slide-in-left: slide-in-left var(--animation-speed)\n          var(--ease-3);\n\n        --animation-slide-out-left: slide-out-left var(--animation-speed)\n          var(--ease-3);\n        --modal-bg-color: white;\n\n        position: fixed;\n        top: var(--space-1);\n        right: var(--space-1);\n        z-index: 1000;\n\n        display: flex;\n        flex-direction: column;\n\n        background-color: var(--modal-bg-color);\n        border-radius: var(--space-1);\n\n        animation: var(--animation-slide-in-left);\n        box-shadow: var(--shadow-3), var(--ring-shadow);\n\n        /* Dont let the error console burst out of the viewport */\n        max-height: calc(100vh - 2 * var(--space-1));\n      }\n\n      @keyframes slide-in-left {\n        from {\n          transform: translateX(100%);\n        }\n      }\n      @keyframes slide-out-left {\n        to {\n          transform: translateX(100%);\n        }\n      }\n\n      :host(.leaving) {\n        animation: var(--animation-slide-out-left);\n      }\n\n      .header {\n        display: flex;\n        justify-content: flex-end;\n        align-items: flex-start;\n        gap: var(--space-2);\n      }\n\n      .title {\n        font-size: var(--font-xl);\n        margin-right: auto;\n        padding: var(--space-3);\n        line-height: 1;\n        font-weight: 600;\n        color: var(--red-12);\n      }\n\n      ${buttonStyles}\n\n      button:hover {\n        background-color: var(--gray-2);\n      }\n\n      .toggle-button {\n        width: fit-content;\n        border: none;\n        aspect-ratio: 1;\n        border-color: var(--gray-4);\n      }\n\n      .close-button {\n        display: flex;\n        align-items: center;\n        color: var(--red-11);\n      }\n\n      .close-button > svg {\n        margin-right: 3px;\n      }\n\n      .toggle-button:focus {\n        outline: 1px solid black;\n      }\n\n      .toggle-icon {\n        transition: transform var(--animation-speed) ease-in-out;\n      }\n\n      :host(.collapsed) .toggle-icon {\n        transform: scaleX(-1) scaleY(-1);\n      }\n\n      :host(.collapsed) .close-button {\n        display: none;\n      }\n\n      .content {\n        display: block;\n        padding-inline: var(--space-4);\n        padding-block-start: 0;\n        padding-block-end: var(--space-4);\n        max-height: 100%;\n        overflow: auto;\n      }\n\n      :host(.collapsed) .content {\n        display: none;\n      }\n    `,\n  ];\n\n  toggleCollapsed(): void {\n    this.classList.toggle(\"collapsed\");\n    // Remove focus from the toggle button\n    (this.querySelector(\".toggle-button\") as HTMLButtonElement)?.blur();\n  }\n\n  handleDismissAll(): void {\n    // Animate out by adding the class \"leaving\" and then\n    // wait for the animation to finish before removing the element\n    this.classList.add(\"leaving\");\n    this.addEventListener(\"animationend\", () => {\n      this.remove();\n    });\n  }\n\n  static createClientMessageElement({ headline, message }: ShinyClientMessage) {\n    const msg = document.createElement(\"shiny-error-message\");\n    msg.setAttribute(\"headline\", headline || \"\");\n    msg.setAttribute(\"message\", message);\n    return msg;\n  }\n\n  appendConsoleMessage({ headline, message }: ShinyClientMessage) {\n    const content =\n      this.shadowRoot?.querySelector<HTMLSlotElement>(\"slot.content\");\n\n    if (content) {\n      const nodeKey = (node: Element) => {\n        const headline = node.getAttribute(\"headline\") || \"\";\n        const message = node.getAttribute(\"message\") || \"\";\n        return `${headline}::${message}`;\n      };\n      const newKey = `${headline}::${message}`;\n\n      for (const node of content.assignedElements()) {\n        if (node.tagName.toLowerCase() === \"shiny-error-message\") {\n          if (nodeKey(node) === newKey) {\n            // Do nothing, this message is already in the console\n            // TODO: Increase count of message here\n            return;\n          }\n        }\n      }\n    }\n\n    this.appendChild(\n      ShinyErrorConsole.createClientMessageElement({ headline, message })\n    );\n    return;\n  }\n\n  render() {\n    return html` <div class=\"header\">\n        <span class=\"title\"> Shiny Client Errors </span>\n        <button\n          class=\"close-button\"\n          @click=${this.handleDismissAll}\n          title=\"Dismiss all console messages and close console\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"1.5\"\n            height=\"1em\"\n            width=\"1em\"\n            stroke=\"currentColor\"\n            class=\"close-icon\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              d=\"M6 18L18 6M6 6l12 12\"\n            />\n          </svg>\n          Dismiss all\n        </button>\n        <button class=\"toggle-button\" @click=${this.toggleCollapsed}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"1.5\"\n            height=\"1em\"\n            width=\"1em\"\n            stroke=\"currentColor\"\n            class=\"toggle-icon\"\n          >\n            <path\n              class=\"collapse\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              d=\"M4.5 19.5l15-15m0 0H8.25m11.25 0v11.25\"\n            />\n          </svg>\n        </button>\n      </div>\n      <slot class=\"content\"></slot>`;\n  }\n}\n\ncustomElements.define(\"shiny-error-console\", ShinyErrorConsole);\n\nexport class ShinyErrorMessage extends LitElement {\n  static properties = {\n    headline: {},\n    message: {},\n  };\n\n  headline = \"\";\n  message = \"\";\n\n  static styles = [\n    css`\n      :host {\n        color: var(--red-11);\n        display: block;\n        font-size: var(--font-md);\n\n        position: relative;\n        --icon-size: var(--font-lg)\n\n        /* Reset box sizing */\n        box-sizing: border-box;\n      }\n\n      .container {\n        display: flex;\n        gap: var(--space-2);\n      }\n\n      .contents {\n        width: 40ch;\n        display: flex;\n        flex-direction: column;\n        gap: var(--space-1);\n        padding-block-start: 0;\n        padding-block-end: var(--space-3);\n        overflow: auto;\n      }\n\n      :host(:last-of-type) .contents {\n\n        padding-block-end: var(--space-1);\n      }\n\n      .contents > h3 {\n        font-size: 1em;\n        font-weight: 500;\n        color: var(--red-12);\n      }\n\n      .contents > * {\n        margin-block: 0;\n      }\n\n      .error-message {\n        font-family: \"Courier New\", Courier, monospace;\n        white-space: pre-wrap;\n      }\n\n      .decoration-container {\n        flex-shrink: 0;\n        position: relative;\n\n        --line-w: 2px;\n        --dot-size: 11px;\n      }\n\n      :host(:hover) .decoration-container {\n        --scale: 1.25;\n      }\n\n      .vertical-line {\n        margin-inline: auto;\n        width: var(--line-w);\n        height: 100%;\n\n        background-color: var(--red-10);\n      }\n\n      :host(:first-of-type) .vertical-line {\n        height: calc(100% - var(--dot-size));\n        margin-top: var(--dot-size);\n      }\n\n      .dot {\n        position: absolute;\n        width: var(--dot-size);\n        height: var(--dot-size);\n        top: calc(-1px +  var(--dot-size) / 2);\n        left: calc(50% - var(--dot-size) / 2);\n        border-radius: 100%;\n        transform: scale(var(--scale, 1));\n\n        color: var(--red-6);\n        background-color: var(--red-10);\n      }\n\n      .actions {\n        transform: scaleX(0);\n        transition: transform calc(var(--animation-speed) / 2) ease-in-out;\n        display: flex;\n        justify-content: center;\n        flex-direction: column;\n      }\n\n      /* Delay transition on mouseout so the buttons don't jump away if the user\n      overshoots them with their mouse */\n      :host(:not(:hover)) .actions {\n        transition-delay: 0.15s;\n      }\n\n      :host(:hover) .actions {\n        transform: scaleX(1);\n      }\n\n      ${buttonStyles}\n\n      .copy-button {\n        padding: 0;\n        width: var(--space-8);\n        height: var(--space-8);\n        position: relative;\n        --pad: var(--space-2);\n      }\n\n      .copy-button-inner {\n        position: relative;\n        width: 100%;\n        height: 100%;\n        border-radius: inherit;\n        transition: transform 0.5s;\n        transform-style: preserve-3d;\n      }\n\n      /* Animate flipping to the other side when the .copy-success class is\n      added to the host */\n      :host(.copy-success) .copy-button-inner {\n        transform: rotateY(180deg);\n      }\n\n      /* Position the front and back side */\n      .copy-button .front,\n      .copy-button .back {\n        --side: calc(100% - 2 * var(--pad));\n        position: absolute;\n        inset: var(--pad);\n        height: var(--side);\n        width: var(--side);\n        -webkit-backface-visibility: hidden; /* Safari */\n        backface-visibility: hidden;\n      }\n\n      .copy-button:hover .copy-button-inner {\n        background-color: var(--gray-2);\n      }\n\n      /* Style the back side */\n      .copy-button .back {\n        --pad: var(--space-1);\n        color: var(--green-8);\n        transform: rotateY(180deg);\n      }\n    `,\n  ];\n\n  async copyErrorToClipboard(): Promise<void> {\n    await navigator.clipboard.writeText(this.message);\n\n    this.classList.add(\"copy-success\");\n\n    // After a second, remove the copy success class\n    setTimeout(() => {\n      this.classList.remove(\"copy-success\");\n    }, 1000);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  render() {\n    return html`\n      <div class=\"container\">\n        <div class=\"decoration-container\">\n          <div class=\"vertical-line\"></div>\n          <div class=\"dot\"></div>\n        </div>\n        <div class=\"contents\">\n          <h3>${this.headline}</h3>\n          <pre class=\"error-message\">${this.message}</pre>\n        </div>\n\n        <div class=\"actions\">\n          <button\n            class=\"copy-button\"\n            @click=${this.copyErrorToClipboard}\n            title=\"Copy error to clipboard\"\n          >\n            <div class=\"copy-button-inner\">\n              <svg\n                class=\"front\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke-width=\"1.5\"\n                stroke=\"currentColor\"\n                height=\"1em\"\n                width=\"1em\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  d=\"M15.666 3.888A2.25 2.25 0 0013.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 01-.75.75H9a.75.75 0 01-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 01-2.25 2.25H6.75A2.25 2.25 0 014.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 011.927-.184\"\n                />\n              </svg>\n\n              <svg\n                class=\"back\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke-width=\"1.5\"\n                stroke=\"currentColor\"\n                height=\"1em\"\n                width=\"1em\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  d=\"M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              </svg>\n            </div>\n          </button>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"shiny-error-message\", ShinyErrorMessage);\n\nexport type ShinyClientMessage = {\n  message: string;\n  headline?: string;\n  status?: \"error\" | \"info\" | \"warning\";\n};\n\nfunction showShinyClientMessage({\n  headline = \"\",\n  message,\n  status = \"warning\",\n}: ShinyClientMessage): void {\n  const consoleMessage = `[shiny] ${headline}${\n    headline ? \" - \" : \"\"\n  }${message}`;\n\n  switch (status) {\n    case \"error\":\n      console.error(consoleMessage);\n      break;\n    case \"warning\":\n      console.warn(consoleMessage);\n      break;\n    default:\n      console.log(consoleMessage);\n      break;\n  }\n\n  if (!Shiny.inDevMode()) {\n    return;\n  }\n\n  // Check to see if an Error Console Container element already exists. If it\n  // doesn't we need to add it before putting an error on the screen\n  let sec = document.querySelector<ShinyErrorConsole>(\"shiny-error-console\");\n  if (!sec) {\n    sec = document.createElement(\"shiny-error-console\") as ShinyErrorConsole;\n    document.body.appendChild(sec);\n  }\n\n  sec.appendConsoleMessage({ headline, message });\n}\n\n/**\n * Function to show an error message to user in shiny-error-message web\n * component. Only shows the error if we're in development mode.\n * @param e - Error object to show to user. This is whatever is caught in\n * a try-catch statement so it may be a string or it may be a proper Error\n * object.\n */\nexport function showErrorInClientConsole(e: unknown): void {\n  let errorMsg: string | null = null;\n  let headline = \"Error on client while running Shiny app\";\n\n  if (typeof e === \"string\") {\n    errorMsg = e;\n  } else if (e instanceof ShinyClientError) {\n    errorMsg = e.message;\n    headline = e.headline;\n  } else if (e instanceof Error) {\n    errorMsg = e.message;\n  } else {\n    errorMsg = \"Unknown error\";\n  }\n\n  showShinyClientMessage({ headline, message: errorMsg, status: \"error\" });\n}\n\nexport class ShinyClientMessageEvent extends CustomEvent<ShinyClientMessage> {\n  constructor(detail: ShinyClientMessage) {\n    super(\"shiny:client-message\", { detail, bubbles: true, cancelable: true });\n  }\n}\n\nwindow.addEventListener(\"shiny:client-message\", (ev: Event) => {\n  if (!(ev instanceof CustomEvent)) {\n    throw new Error(\"[shiny] shiny:client-message expected a CustomEvent\");\n  }\n  const { headline, message, status } = ev.detail;\n  if (!message) {\n    throw new Error(\n      \"[shiny] shiny:client-message expected a `message` property in `event.detail`.\"\n    );\n  }\n  showShinyClientMessage({ headline, message, status });\n});\n", "import { imageOutputBinding } from \"../bindings/output/image\";\nimport { shinySetInputValue } from \"../shiny/initedMethods\";\n\nfunction resetBrush(brushId: string): void {\n  shinySetInputValue(brushId, null);\n  imageOutputBinding\n    .find(document.documentElement)\n    .trigger(\"shiny-internal:brushed\", {\n      brushId: brushId,\n      outputId: null,\n    });\n}\n\nexport { resetBrush };\n", "import type { ShinyApp } from \"../shiny/shinyapp\";\nimport type { InputPolicy, InputPolicyOpts } from \"./inputPolicy\";\n\n// Schedules data to be sent to shinyapp at the next setTimeout(0).\n// Batches multiple input calls into one websocket message.\nclass InputBatchSender implements InputPolicy {\n  target!: InputPolicy; // We need this field to satisfy the InputPolicy interface\n  shinyapp: ShinyApp;\n  pendingData: { [key: string]: unknown } = {};\n  reentrant = false;\n  sendIsEnqueued = false;\n  lastChanceCallback: Array<() => void> = [];\n\n  constructor(shinyapp: ShinyApp) {\n    this.shinyapp = shinyapp;\n  }\n\n  setInput(nameType: string, value: unknown, opts: InputPolicyOpts): void {\n    this.pendingData[nameType] = value;\n\n    if (!this.reentrant) {\n      if (opts.priority === \"event\") {\n        this._sendNow();\n      } else if (!this.sendIsEnqueued) {\n        this.shinyapp.taskQueue.enqueue(() => {\n          this.sendIsEnqueued = false;\n          this._sendNow();\n        });\n      }\n    }\n  }\n\n  private _sendNow(): void {\n    if (this.reentrant) {\n      console.trace(\"Unexpected reentrancy in InputBatchSender!\");\n    }\n\n    this.reentrant = true;\n    try {\n      this.lastChanceCallback.forEach((callback) => callback());\n      const currentData = this.pendingData;\n\n      this.pendingData = {};\n      this.shinyapp.sendInput(currentData);\n    } finally {\n      this.reentrant = false;\n    }\n  }\n}\n\nexport { InputBatchSender };\n", "import { hasDefinedProperty } from \"../utils\";\nimport type {\n  EventPriority,\n  InputPolicy,\n  InputPolicyOpts,\n} from \"./inputPolicy\";\n\nclass InputDeferDecorator implements InputPolicy {\n  pendingInput: {\n    [key: string]: { value: unknown; opts: { priority: EventPriority } };\n  } = {};\n  target: InputPolicy;\n\n  constructor(target: InputPolicy) {\n    this.target = target;\n  }\n\n  setInput(nameType: string, value: unknown, opts: InputPolicyOpts): void {\n    if (/^\\./.test(nameType)) this.target.setInput(nameType, value, opts);\n    else this.pendingInput[nameType] = { value, opts };\n  }\n  submit(): void {\n    for (const nameType in this.pendingInput) {\n      if (hasDefinedProperty(this.pendingInput, nameType)) {\n        const { value, opts } = this.pendingInput[nameType];\n\n        this.target.setInput(nameType, value, opts);\n      }\n    }\n  }\n}\n\nexport { InputDeferDecorator };\n", "import $ from \"jquery\";\nimport type { ShinyEventInputChanged } from \"../events/shinyEvents\";\nimport type { InputPolicy, InputPolicyOpts } from \"./inputPolicy\";\nimport { splitInputNameType } from \"./splitInputNameType\";\n\nclass InputEventDecorator implements InputPolicy {\n  target: InputPolicy;\n\n  constructor(target: InputPolicy) {\n    this.target = target;\n  }\n\n  setInput(nameType: string, value: unknown, opts: InputPolicyOpts): void {\n    const evt = $.Event(\"shiny:inputchanged\") as ShinyEventInputChanged;\n\n    const input = splitInputNameType(nameType);\n\n    evt.name = input.name;\n    evt.inputType = input.inputType;\n    evt.value = value;\n    evt.binding = opts.binding || null;\n    evt.el = opts.el || null;\n    evt.priority = opts.priority;\n\n    // The `shiny:inputchanged` JavaScript event now triggers on the related\n    // input element instead of `document`. Existing event listeners bound to\n    // `document` will still detect the event due to event bubbling. #2446\n    // If no `el` exists, use `document` instead. #3584\n    $(opts.el || window.document).trigger(evt);\n\n    if (!evt.isDefaultPrevented()) {\n      let name = evt.name;\n\n      if (evt.inputType !== \"\") name += \":\" + evt.inputType;\n\n      // Most opts aren't passed along to lower levels in the input decorator\n      // stack.\n      this.target.setInput(name, evt.value, { priority: opts.priority });\n    }\n  }\n}\n\nexport { InputEventDecorator };\n", "function splitInputNameType(nameType: string): {\n  name: string;\n  inputType: string | \"\";\n} {\n  const name2 = nameType.split(\":\");\n\n  return {\n    name: name2[0],\n    inputType: name2.length > 1 ? name2[1] : \"\",\n  };\n}\n\nexport { splitInputNameType };\n", "import { hasDefinedProperty } from \"../utils\";\nimport type { InputPolicy, InputPolicyOpts } from \"./inputPolicy\";\nimport { splitInputNameType } from \"./splitInputNameType\";\n\ntype LastSentValues = { [key: string]: { [key: string]: string } };\n\nclass InputNoResendDecorator implements InputPolicy {\n  target: InputPolicy;\n  lastSentValues: LastSentValues = {};\n\n  constructor(target: InputPolicy, initialValues: LastSentValues = {}) {\n    this.target = target;\n    this.reset(initialValues);\n  }\n\n  setInput(nameType: string, value: unknown, opts: InputPolicyOpts): void {\n    const { name: inputName, inputType: inputType } =\n      splitInputNameType(nameType);\n    const jsonValue = JSON.stringify(value);\n\n    if (\n      opts.priority !== \"event\" &&\n      this.lastSentValues[inputName] &&\n      this.lastSentValues[inputName].jsonValue === jsonValue &&\n      this.lastSentValues[inputName].inputType === inputType\n    ) {\n      return;\n    }\n    this.lastSentValues[inputName] = { jsonValue, inputType };\n    this.target.setInput(nameType, value, opts);\n  }\n  reset(values: LastSentValues = {}): void {\n    // Given an object with flat name-value format:\n    //   { x: \"abc\", \"y.shiny.number\": 123 }\n    // Create an object in cache format and save it:\n    //   { x: { jsonValue: '\"abc\"', inputType: \"\" },\n    //     y: { jsonValue: \"123\", inputType: \"shiny.number\" } }\n    const cacheValues: {\n      [key: string]: { jsonValue: string; inputType: string };\n    } = {};\n\n    for (const inputName in values) {\n      if (hasDefinedProperty(values, inputName)) {\n        const { name, inputType } = splitInputNameType(inputName);\n\n        cacheValues[name] = {\n          jsonValue: JSON.stringify(values[inputName]),\n          inputType: inputType,\n        };\n      }\n    }\n\n    this.lastSentValues = cacheValues;\n  }\n  forget(name: string): void {\n    delete this.lastSentValues[name];\n  }\n}\n\nexport { InputNoResendDecorator };\n", "import { Debouncer, Invoker, Throttler } from \"../time\";\nimport type { InputPolicy, InputPolicyOpts } from \"./inputPolicy\";\nimport type { InputRatePolicy } from \"./inputRatePolicy\";\nimport { splitInputNameType } from \"./splitInputNameType\";\n\ntype RatePolicyModes = \"debounce\" | \"direct\" | \"throttle\";\n\nclass InputRateDecorator implements InputPolicy {\n  target: InputPolicy;\n  inputRatePolicies: {\n    [key: string]: InputRatePolicy<InputRateDecorator[\"_doSetInput\"]>;\n  } = {};\n\n  constructor(target: InputPolicy) {\n    this.target = target;\n  }\n\n  // Note that the first argument of setInput() and setRatePolicy()\n  // are passed both the input name (i.e., inputId) and type.\n  // https://github.com/rstudio/shiny/blob/67d3a/srcjs/init_shiny.js#L111-L126\n  // However, $ensureInit() and $doSetInput() are meant to be passed just\n  // the input name (i.e., inputId), which is why we distinguish between\n  // nameType and name.\n  setInput(nameType: string, value: unknown, opts: InputPolicyOpts): void {\n    const { name: inputName } = splitInputNameType(nameType);\n\n    this._ensureInit(inputName);\n\n    if (opts.priority !== \"deferred\")\n      this.inputRatePolicies[inputName].immediateCall(nameType, value, opts);\n    else this.inputRatePolicies[inputName].normalCall(nameType, value, opts);\n  }\n  setRatePolicy(\n    nameType: string,\n    mode: RatePolicyModes,\n    millis?: number\n  ): void {\n    const { name: inputName } = splitInputNameType(nameType);\n\n    if (mode === \"direct\") {\n      this.inputRatePolicies[inputName] = new Invoker(this, this._doSetInput);\n    } else if (mode === \"debounce\") {\n      this.inputRatePolicies[inputName] = new Debouncer(\n        this,\n        this._doSetInput,\n        millis\n      );\n    } else if (mode === \"throttle\") {\n      this.inputRatePolicies[inputName] = new Throttler(\n        this,\n        this._doSetInput,\n        millis\n      );\n    }\n  }\n  private _ensureInit(name: string): void {\n    if (!(name in this.inputRatePolicies)) this.setRatePolicy(name, \"direct\");\n  }\n  private _doSetInput(\n    nameType: string,\n    value: unknown,\n    opts: InputPolicyOpts\n  ): void {\n    this.target.setInput(nameType, value, opts);\n  }\n}\n\nexport { InputRateDecorator };\nexport type { RatePolicyModes };\n", "import type { InputPolicy, InputPolicyOpts } from \"./inputPolicy\";\n\n// Merge opts with defaults, and return a new object.\nfunction addDefaultInputOpts(opts: Partial<InputPolicyOpts>): InputPolicyOpts {\n  const newOpts: InputPolicyOpts = {\n    priority: \"immediate\",\n    ...opts,\n  };\n\n  switch (newOpts.priority) {\n    case \"deferred\":\n    case \"immediate\":\n    case \"event\":\n      break;\n    default:\n      throw new Error(\n        \"Unexpected input value mode: '\" + newOpts.priority + \"'\"\n      );\n  }\n\n  return newOpts;\n}\n\nclass InputValidateDecorator implements InputPolicy {\n  target: InputPolicy;\n  constructor(target: InputPolicy) {\n    this.target = target;\n  }\n\n  setInput(\n    nameType: string,\n    value: unknown,\n    opts: Partial<InputPolicyOpts> = {}\n  ): void {\n    if (!nameType) throw \"Can't set input with empty name.\";\n\n    const newOpts = addDefaultInputOpts(opts);\n\n    this.target.setInput(nameType, value, newOpts);\n  }\n}\n\nexport { InputValidateDecorator, addDefaultInputOpts };\n", "// A shim for Promise.withResolvers. Once browser support is widespread, we can\n// remove this.\nexport function promiseWithResolvers<T>(): {\n  promise: Promise<T>;\n  resolve: (value: PromiseLike<T> | T) => void;\n  reject: (reason?: any) => void;\n} {\n  let resolve: (value: PromiseLike<T> | T) => void;\n  let reject: (reason?: any) => void;\n  const promise = new Promise(\n    (res: (value: PromiseLike<T> | T) => void, rej: (reason?: any) => void) => {\n      resolve = res;\n      reject = rej;\n    }\n  );\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return { promise, resolve: resolve!, reject: reject! };\n}\n\nexport interface InitStatusPromise<T> extends Promise<T> {\n  promise: Promise<T>;\n  resolve(x: T): void;\n  resolved(): boolean;\n}\n\nexport function createInitStatus<T>(): InitStatusPromise<T> {\n  const { promise, resolve } = promiseWithResolvers<T>();\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  let _resolved = false;\n\n  return {\n    promise,\n    resolve(x: T) {\n      _resolved = true;\n      resolve(x);\n    },\n    then: promise.then.bind(promise),\n    catch: promise.catch.bind(promise),\n    finally: promise.finally.bind(promise),\n    [Symbol.toStringTag]: \"InitStatus\",\n    resolved() {\n      return _resolved;\n    },\n  };\n}\n", "import $ from \"jquery\";\nimport { Shiny } from \"..\";\nimport type { InputBinding, OutputBinding } from \"../bindings\";\nimport { OutputBindingAdapter } from \"../bindings/outputAdapter\";\nimport type { BindingRegistry } from \"../bindings/registry\";\nimport { ShinyClientMessageEvent } from \"../components/errorConsole\";\nimport type {\n  InputRateDecorator,\n  InputValidateDecorator,\n} from \"../inputPolicies\";\nimport { shinyAppBindOutput, shinyAppUnbindOutput } from \"./initedMethods\";\nimport { sendImageSizeFns } from \"./sendImageSize\";\n\ntype BindScope = HTMLElement | JQuery<HTMLElement>;\n\n/**\n * Type guard to check if a value is a jQuery object containing HTMLElements\n * @param value The value to check\n * @returns A type predicate indicating if the value is a jQuery<HTMLElement>\n */\nfunction isJQuery<T = HTMLElement>(value: unknown): value is JQuery<T> {\n  return typeof (value as any).jquery === \"string\";\n}\n\n// todo make sure allowDeferred can NOT be supplied and still work\nfunction valueChangeCallback(\n  inputs: InputValidateDecorator,\n  binding: InputBinding,\n  el: HTMLElement,\n  allowDeferred: boolean\n) {\n  let id = binding.getId(el);\n\n  if (id) {\n    const value = binding.getValue(el);\n    const type = binding.getType(el);\n\n    if (type) id = id + \":\" + type;\n\n    const opts: {\n      priority: \"deferred\" | \"immediate\";\n      binding: typeof binding;\n      el: typeof el;\n    } = {\n      priority: allowDeferred ? \"deferred\" : \"immediate\",\n      binding: binding,\n      el: el,\n    };\n\n    inputs.setInput(id, value, opts);\n  }\n}\n\n/**\n * Registry for input and output binding IDs. Used to check for duplicate IDs\n * and to keep track of which IDs have already been added to the app. Use an\n * immediately invoked function to keep the sets private and not clutter the\n * scope.\n */\nconst bindingsRegistry = (() => {\n  type BindingTypes = \"input\" | \"output\";\n\n  /**\n   * Keyed by binding IDs to the array of each type of binding that ID is associated for in current app state.\n   *\n   * Ideally the\n   * value would be a length 1 array but in some (invalid) cases there could be\n   * multiple types for a single ID.\n   */\n  type IdToBindingTypes = Map<string, BindingTypes[]>;\n\n  // Main store of bindings.\n  const bindings: IdToBindingTypes = new Map();\n\n  /**\n   * Checks if the bindings registry is valid. Currently this just checks if IDs\n   * are duplicated within a binding typ but in the future could be expanded to\n   * check more conditions.\n   *\n   * @description IDs are allowed to be duplicated across binding types, but\n   * when duplicated within a binding type we report all uses of the ID.\n   * Currently the IDs are typically stored in the bound element's `id`\n   * attribute, in which case they really *should* be globally unique for\n   * accessibility and other reasons. However, in practice our bindings still\n   * work as long as inputs the IDs within a binding type don't overlap.\n   *\n   * @returns ShinyClientMessageEvent if current ID bindings are invalid,\n   * otherwise returns an ok status.\n   */\n  function checkValidity(scope: BindScope): void {\n    if (!isJQuery(scope) && !(scope instanceof HTMLElement)) {\n      return;\n    }\n\n    type BindingCounts = { [T in BindingTypes]: number };\n    const duplicateIds = new Map<string, BindingCounts>();\n    const problems: Set<string> = new Set();\n\n    // count duplicate IDs of each binding type\n    bindings.forEach((idTypes, id) => {\n      const counts: { [T in BindingTypes]: number } = { input: 0, output: 0 };\n\n      idTypes.forEach((type) => (counts[type] += 1));\n\n      if (counts.input + counts.output < 2) {\n        return;\n      }\n      // We have duplicated IDs, add them to the set of duplicated IDs to be\n      // reported to the user.\n      duplicateIds.set(id, counts);\n\n      if (counts.input > 1) {\n        problems.add(\"input\");\n      }\n      if (counts.output > 1) {\n        problems.add(\"output\");\n      }\n      if (counts.input >= 1 && counts.output >= 1) {\n        problems.add(\"shared\");\n      }\n    });\n\n    if (duplicateIds.size === 0) return;\n    // Duplicated IDs are now always a warning. Before the ShinyClient console\n    // was added duplicate output IDs were errors in \"production\" mode. After\n    // the Shiny Client console was introduced, duplicate IDs were no longer\n    // production errors but *would* break apps in dev mode. Now, in v1.10+,\n    // duplicate IDs are always warnings in all modes for consistency.\n\n    const duplicateIdMsg = Array.from(duplicateIds.entries())\n      .map(([id, counts]) => {\n        const messages = [\n          pluralize(counts.input, \"input\"),\n          pluralize(counts.output, \"output\"),\n        ]\n          .filter((msg) => msg !== \"\")\n          .join(\" and \");\n\n        return `- \"${id}\": ${messages}`;\n      })\n      .join(\"\\n\");\n\n    let txtVerb = \"Duplicate\";\n    let txtNoun = \"input/output\";\n    if (problems.has(\"input\") && problems.has(\"output\")) {\n      // base case\n    } else if (problems.has(\"input\")) {\n      txtNoun = \"input\";\n    } else if (problems.has(\"output\")) {\n      txtNoun = \"output\";\n    } else if (problems.has(\"shared\")) {\n      txtVerb = \"Shared\";\n    }\n\n    const txtIdsWere = duplicateIds.size == 1 ? \"ID was\" : \"IDs were\";\n    const headline = `${txtVerb} ${txtNoun} ${txtIdsWere} found`;\n    const message = `The following ${txtIdsWere} used for more than one ${\n      problems.has(\"shared\") ? \"input/output\" : txtNoun\n    }:\\n${duplicateIdMsg}`;\n\n    const event = new ShinyClientMessageEvent({ headline, message });\n    const scopeElement = isJQuery(scope) ? scope.get(0) : scope;\n    (scopeElement || window).dispatchEvent(event);\n  }\n\n  /**\n   * Add a binding id to the binding ids registry\n   * @param id Id to add\n   * @param bindingType Binding type, either \"input\" or \"output\"\n   */\n  function addBinding(id: string, bindingType: BindingTypes): void {\n    const existingBinding = bindings.get(id);\n\n    if (existingBinding) {\n      existingBinding.push(bindingType);\n    } else {\n      bindings.set(id, [bindingType]);\n    }\n  }\n\n  /**\n   * Remove a binding id from the binding ids registry\n   * @param id Id to remove\n   * @param bindingType Binding type, either \"input\" or \"output\"\n   */\n  function removeBinding(id: string, bindingType: BindingTypes): void {\n    const existingBinding = bindings.get(id);\n\n    if (existingBinding) {\n      const index = existingBinding.indexOf(bindingType);\n      if (index > -1) {\n        existingBinding.splice(index, 1);\n      }\n    }\n\n    if (existingBinding?.length === 0) {\n      bindings.delete(id);\n    }\n  }\n\n  return {\n    addBinding,\n    removeBinding,\n    checkValidity,\n  };\n})();\n\nfunction pluralize(num: number, word: string): string {\n  if (num === 0) return \"\";\n  if (num === 1) return `${num} ${word}`;\n  return `${num} ${word}s`;\n}\n\ntype BindInputsCtx = {\n  inputs: InputValidateDecorator;\n  inputsRate: InputRateDecorator;\n  inputBindings: BindingRegistry<InputBinding>;\n  outputBindings: BindingRegistry<OutputBinding>;\n  sendOutputHiddenState: () => void;\n  maybeAddThemeObserver: (el: HTMLElement) => void;\n  initDeferredIframes: () => void;\n};\nfunction bindInputs(\n  shinyCtx: BindInputsCtx,\n  scope: BindScope = document.documentElement\n): {\n  [key: string]: {\n    value: ReturnType<InputBinding[\"getValue\"]>;\n    opts: { immediate: boolean; binding: InputBinding; el: HTMLElement };\n  };\n} {\n  const { inputs, inputsRate, inputBindings } = shinyCtx;\n  const bindings = inputBindings.getBindings();\n\n  const inputItems: {\n    [key: string]: {\n      value: any;\n      opts: {\n        immediate: true;\n        binding: InputBinding;\n        el: HTMLElement;\n      };\n    };\n  } = {};\n\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i].binding;\n    const matches = binding.find(scope) || [];\n\n    for (let j = 0; j < matches.length; j++) {\n      const el = matches[j];\n      if (el.hasAttribute(\"data-shiny-no-bind-input\")) continue;\n      const id = binding.getId(el);\n\n      // Don't bind if ID is falsy or is currently bound\n      if (!id || $(el).hasClass(\"shiny-bound-input\")) continue;\n\n      const type = binding.getType(el);\n      const effectiveId = type ? id + \":\" + type : id;\n\n      inputItems[effectiveId] = {\n        value: binding.getValue(el),\n        opts: {\n          immediate: true,\n          binding: binding,\n          el: el,\n        },\n      };\n\n      /*jshint loopfunc:true*/\n      const thisCallback = (function () {\n        const thisBinding = binding;\n        const thisEl = el;\n\n        return function (allowDeferred: boolean) {\n          valueChangeCallback(inputs, thisBinding, thisEl, allowDeferred);\n        };\n      })();\n\n      binding.subscribe(el, thisCallback);\n      $(el).data(\"shiny-input-binding\", binding);\n      $(el).addClass(\"shiny-bound-input\");\n      const ratePolicy = binding.getRatePolicy(el);\n\n      if (ratePolicy !== null) {\n        inputsRate.setRatePolicy(\n          effectiveId,\n          ratePolicy.policy,\n          ratePolicy.delay\n        );\n      }\n\n      bindingsRegistry.addBinding(id, \"input\");\n      $(el).trigger({\n        type: \"shiny:bound\",\n        // @ts-expect-error; Can not remove info on a established, malformed Event object\n        binding: binding,\n        bindingType: \"input\",\n      });\n    }\n  }\n\n  return inputItems;\n}\n\nasync function bindOutputs(\n  {\n    sendOutputHiddenState,\n    maybeAddThemeObserver,\n    outputBindings,\n  }: BindInputsCtx,\n  scope: BindScope = document.documentElement\n): Promise<void> {\n  const $scope = $(scope);\n\n  const bindings = outputBindings.getBindings();\n\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i].binding;\n    const matches = binding.find($scope) || [];\n\n    // First loop over the matches and assemble map of id->element\n    for (let j = 0; j < matches.length; j++) {\n      const el = matches[j];\n      const id = binding.getId(el);\n\n      // Check if ID is falsy\n      if (!id) continue;\n\n      // In some uncommon cases, elements that are later in the\n      // matches array can be removed from the document by earlier\n      // iterations. See https://github.com/rstudio/shiny/issues/1399\n      if (!$.contains(document.documentElement, el)) continue;\n\n      const $el = $(el);\n\n      if ($el.hasClass(\"shiny-bound-output\")) {\n        // Already bound; can happen with nested uiOutput (bindAll\n        // gets called on two ancestors)\n        continue;\n      }\n\n      // If this element reports its CSS styles to getCurrentOutputInfo()\n      // then it should have a MutationObserver() to resend CSS if its\n      // style/class attributes change. This observer should already exist\n      // for _static_ UI, but not yet for _dynamic_ UI\n      maybeAddThemeObserver(el);\n\n      const bindingAdapter = new OutputBindingAdapter(el, binding);\n\n      await shinyAppBindOutput(id, bindingAdapter);\n      $el.data(\"shiny-output-binding\", bindingAdapter);\n      $el.addClass(\"shiny-bound-output\");\n      if (!$el.attr(\"aria-live\")) $el.attr(\"aria-live\", \"polite\");\n\n      if (Shiny.shinyapp?.$outputProgress.isRecalculating(id)) {\n        bindingAdapter.showProgress(true);\n      }\n\n      bindingsRegistry.addBinding(id, \"output\");\n      $el.trigger({\n        type: \"shiny:bound\",\n        // @ts-expect-error; Can not remove info on a established, malformed Event object\n        binding: binding,\n        bindingType: \"output\",\n      });\n    }\n  }\n\n  // Send later in case DOM layout isn't final yet.\n  setTimeout(sendImageSizeFns.regular, 0);\n  setTimeout(sendOutputHiddenState, 0);\n}\n\nfunction unbindInputs(\n  scope: BindScope = document.documentElement,\n  includeSelf = false\n) {\n  const inputs: Array<HTMLElement | JQuery<HTMLElement>> = $(scope)\n    .find(\".shiny-bound-input\")\n    .toArray();\n\n  if (includeSelf && $(scope).hasClass(\"shiny-bound-input\")) {\n    inputs.push(scope);\n  }\n\n  for (let i = 0; i < inputs.length; i++) {\n    const el = inputs[i];\n    const binding = $(el).data(\"shiny-input-binding\");\n\n    if (!binding) continue;\n    const id = binding.getId(el);\n\n    $(el).removeClass(\"shiny-bound-input\");\n\n    bindingsRegistry.removeBinding(id, \"input\");\n    binding.unsubscribe(el);\n    $(el).trigger({\n      type: \"shiny:unbound\",\n      // @ts-expect-error; Can not remove info on a established, malformed Event object\n      binding: binding,\n      bindingType: \"input\",\n    });\n  }\n}\nfunction unbindOutputs(\n  { sendOutputHiddenState }: BindInputsCtx,\n  scope: BindScope = document.documentElement,\n  includeSelf = false\n) {\n  const outputs: Array<HTMLElement | JQuery<HTMLElement>> = $(scope)\n    .find(\".shiny-bound-output\")\n    .toArray();\n\n  if (includeSelf && $(scope).hasClass(\"shiny-bound-output\")) {\n    outputs.push(scope);\n  }\n\n  for (let i = 0; i < outputs.length; i++) {\n    const $el = $(outputs[i]);\n    const bindingAdapter = $el.data(\"shiny-output-binding\");\n\n    if (!bindingAdapter) continue;\n    const id = bindingAdapter.binding.getId(outputs[i]);\n\n    shinyAppUnbindOutput(id, bindingAdapter);\n\n    bindingsRegistry.removeBinding(id, \"output\");\n    $el.removeClass(\"shiny-bound-output\");\n    $el.removeData(\"shiny-output-binding\");\n    $el.trigger({\n      type: \"shiny:unbound\",\n      // @ts-expect-error; Can not remove info on a established, malformed Event object\n      binding: bindingAdapter.binding,\n      bindingType: \"output\",\n    });\n  }\n\n  // Send later in case DOM layout isn't final yet.\n  setTimeout(sendImageSizeFns.regular, 0);\n  setTimeout(sendOutputHiddenState, 0);\n}\n\n// (Named used before TS conversion)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nasync function _bindAll(\n  shinyCtx: BindInputsCtx,\n  scope: BindScope\n): Promise<ReturnType<typeof bindInputs>> {\n  await bindOutputs(shinyCtx, scope);\n  const currentInputs = bindInputs(shinyCtx, scope);\n\n  // Check to make sure the bindings setup is valid. By checking the validity\n  // _after_ we've attempted all the bindings we can give the user a more\n  // complete error message that contains everything they will need to fix. If\n  // we threw as we saw collisions then the user would fix the first collision,\n  // re-run, and then see the next collision, etc.\n  bindingsRegistry.checkValidity(scope);\n\n  return currentInputs;\n}\nfunction unbindAll(\n  shinyCtx: BindInputsCtx,\n  scope: BindScope,\n  includeSelf = false\n): void {\n  unbindInputs(scope, includeSelf);\n  unbindOutputs(shinyCtx, scope, includeSelf);\n}\nasync function bindAll(\n  shinyCtx: BindInputsCtx,\n  scope: BindScope\n): Promise<void> {\n  // _bindAll returns input values; it doesn't send them to the server.\n  // Shiny.bindAll needs to send the values to the server.\n  const currentInputItems = await _bindAll(shinyCtx, scope);\n\n  const inputs = shinyCtx.inputs;\n\n  $.each(currentInputItems, function (name: string, item) {\n    inputs.setInput(name, item.value, item.opts);\n  });\n\n  // Not sure if the iframe stuff is an intrinsic part of bindAll, but bindAll\n  // is a convenient place to hang it. bindAll will be called anytime new HTML\n  // appears that might contain inputs/outputs; it's reasonable to assume that\n  // any such HTML may contain iframes as well.\n  shinyCtx.initDeferredIframes();\n}\n\nexport { unbindAll, bindAll, _bindAll };\nexport type { BindScope, BindInputsCtx };\n", "import type { ErrorsMessageValue } from \"../shiny/shinyapp\";\nimport { makeResizeFilter } from \"../utils\";\nimport type { OutputBinding } from \"./output\";\n\ninterface OutpuBindingWithResize extends OutputBinding {\n  resize?: (\n    el: HTMLElement,\n    width: number | string,\n    height: number | string\n  ) => void;\n}\n\nclass OutputBindingAdapter {\n  el: HTMLElement;\n  binding: OutputBinding;\n\n  constructor(el: HTMLElement, binding: OutpuBindingWithResize) {\n    this.el = el;\n    this.binding = binding;\n\n    // If the binding actually has a resize method, override the prototype of\n    // onResize with a version that does a makeResizeFilter on the element.\n    if (binding.resize) {\n      this.onResize = makeResizeFilter(el, function (width, height) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        binding.resize!(el, width, height);\n      });\n    }\n  }\n\n  getId(): string {\n    return this.binding.getId(this.el);\n  }\n  async onValueChange(data: unknown): Promise<void> {\n    await this.binding.onValueChange(this.el, data);\n  }\n  onValueError(err: ErrorsMessageValue): void {\n    this.binding.onValueError(this.el, err);\n  }\n  showProgress(show: boolean): void {\n    this.binding.showProgress(this.el, show);\n  }\n  onResize(): void {\n    // Intentionally left blank; see constructor\n  }\n}\n\nexport { OutputBindingAdapter };\n", "import $ from \"jquery\";\nimport { shinyUnbindAll } from \"./initedMethods\";\nimport type { HtmlDep } from \"./render\";\nimport { renderContentAsync, renderDependenciesAsync } from \"./render\";\n\n// Show a modal dialog. This is meant to handle two types of cases: one is\n// that the content is a Bootstrap modal dialog, and the other is that the\n// content is non-Bootstrap. Bootstrap modals require some special handling,\n// which is coded in here.\nasync function show({\n  html = \"\",\n  deps = [],\n}: {\n  html?: string;\n  deps?: HtmlDep[];\n} = {}): Promise<void> {\n  // Normally we'd first create the modal's DOM elements, then call\n  // `renderContentAsync(x, {html: html, deps: deps})`, but that has a potential\n  // problem with async rendering. If we did that, then an empty modal (from\n  // this function) could show up and then sit there empty while the\n  // dependencies load (asynchronously), and only after all that get filled with\n  // content for the modal. So instead we'll render the deps here, then render\n  // the modal, then render the content in the modal.\n  await renderDependenciesAsync(deps);\n\n  // If there was an existing Bootstrap modal, then there will be a modal-\n  // backdrop div that was added outside of the modal wrapper, and it must be\n  // removed; otherwise there can be multiple of these divs.\n  $(\".modal-backdrop\").remove();\n\n  // Get existing wrapper DOM element, or create if needed.\n  let $modal = $(\"#shiny-modal-wrapper\");\n\n  if ($modal.length === 0) {\n    $modal = $('<div id=\"shiny-modal-wrapper\"></div>');\n    $(document.body).append($modal);\n\n    // If the wrapper's content is a Bootstrap modal, then when the inner\n    // modal is hidden, remove the entire thing, including wrapper.\n    $modal.on(\"hidden.bs.modal\", function (e) {\n      if (e.target === $(\"#shiny-modal\")[0]) {\n        shinyUnbindAll($modal);\n        $modal.remove();\n      }\n    });\n  }\n\n  $modal.on(\"keydown.shinymodal\", function (e) {\n    // If we're listening for Esc, don't let the event propagate. See\n    // https://github.com/rstudio/shiny/issues/1453. The value of\n    // data(\"keyboard\") needs to be checked inside the handler, because at\n    // the time that $modal.on() is called, the $(\"#shiny-modal\") div doesn't\n    // yet exist.\n    if ($(\"#shiny-modal\").data(\"keyboard\") === false) return;\n\n    if (e.keyCode === 27) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  });\n\n  // Set/replace contents of wrapper with html.\n  await renderContentAsync($modal, { html: html });\n}\n\nfunction remove(): void {\n  const $modal = $(\"#shiny-modal-wrapper\");\n\n  $modal.off(\"keydown.shinymodal\");\n\n  // Look for a Bootstrap modal and if present, trigger hide event. This will\n  // trigger the hidden.bs.modal callback that we set in show(), which unbinds\n  // and removes the element.\n  const $bsModal = $modal.find(\".modal\");\n  if ($bsModal.length > 0) {\n    // We both hide the modal when its shown and also immediately; the immediate\n    // version is a no-op in Bootstrap if called before the modal is fully shown\n    $bsModal.on(\"shown.bs.modal\", () => $bsModal.modal(\"hide\"));\n    $bsModal.modal(\"hide\");\n  } else {\n    // If not a Bootstrap modal dialog, simply unbind and remove it.\n    shinyUnbindAll($modal);\n    $modal.remove();\n  }\n}\n\nexport { show as showModal, remove as removeModal };\n", "import $ from \"jquery\";\n\nimport { $escape, randomId } from \"../utils\";\nimport { shinyUnbindAll } from \"./initedMethods\";\nimport type { HtmlDep } from \"./render\";\nimport { renderContentAsync, renderDependenciesAsync } from \"./render\";\n\n// Milliseconds to fade in or out\nconst fadeDuration = 250;\n\nasync function show({\n  html = \"\",\n  action = \"\",\n  deps = [],\n  duration = 5000,\n  id = null,\n  closeButton = true,\n  type = null,\n}: {\n  html?: string;\n  action?: string;\n  deps?: HtmlDep[];\n  duration?: number | null;\n  id?: string | null;\n  closeButton?: boolean;\n  type?: string | null;\n} = {}): Promise<ReturnType<typeof randomId>> {\n  if (!id) id = randomId();\n\n  // Normally we'd first create the notification's DOM elements, then call\n  // `renderContentAsync(x, {html: html, deps: deps})`, but that has a potential\n  // problem with async rendering. If we did that, then an empty notification\n  // (from this function) could show up and then sit there empty while the\n  // dependencies load (asynchronously), and only after all that get filled with\n  // content for the notification. So instead we'll render the deps here, then\n  // render the notification, then render the content in the notification.\n  await renderDependenciesAsync(deps);\n\n  // Create panel if necessary\n  createPanel();\n\n  // Get existing DOM element for this ID, or create if needed.\n  let $notificationInit = get(id);\n\n  if ($notificationInit?.length === 0) $notificationInit = create(id);\n  const $notification = $notificationInit as JQuery<HTMLElement>;\n\n  // Render html and dependencies\n  const newHtml =\n    `<div class=\"shiny-notification-content-text\">${html}</div>` +\n    `<div class=\"shiny-notification-content-action\">${action}</div>`;\n  const $content = $notification.find(\".shiny-notification-content\");\n\n  // Set/replace contents of wrapper with html.\n  await renderContentAsync($content, { html: newHtml });\n\n  // Remove any existing classes of the form 'shiny-notification-xxxx'.\n  // The xxxx would be strings like 'warning'.\n  const classes = $notification?.attr(\"class\");\n\n  if (classes) {\n    const classVal = classes\n      .split(/\\s+/)\n      .filter((cls: string) => cls.match(/^shiny-notification-/))\n      .join(\" \");\n\n    $notification.removeClass(classVal);\n  }\n\n  // Add class. 'default' means no additional CSS class.\n  if (type && type !== \"default\")\n    $notification.addClass(\"shiny-notification-\" + type);\n\n  // Make sure that the presence/absence of close button matches with value\n  // of `closeButton`.\n  const $close = $notification.find(\".shiny-notification-close\");\n\n  if (closeButton && $close.length === 0) {\n    $notification.append('<div class=\"shiny-notification-close\">&times;</div>');\n  } else if (!closeButton && $close.length !== 0) {\n    $close.remove();\n  }\n\n  // If duration was provided, schedule removal. If not, clear existing\n  // removal callback (this happens if a message was first added with\n  // a duration, and then updated with no duration).\n  if (duration) addRemovalCallback(id, duration);\n  else clearRemovalCallback(id);\n\n  return id;\n}\n\nfunction remove(id: string): void {\n  get(id)?.fadeOut(fadeDuration, function () {\n    shinyUnbindAll(this);\n    $(this).remove();\n\n    // If no more notifications, remove the panel from the DOM.\n    if (ids().length === 0) {\n      getPanel().remove();\n    }\n  });\n}\n\n// Returns an individual notification DOM object (wrapped in jQuery).\nfunction get(id: string | null | undefined) {\n  if (!id) return null;\n  return getPanel().find(\"#shiny-notification-\" + $escape(id));\n}\n\n// Return array of all notification IDs\nfunction ids() {\n  return getPanel()\n    .find(\".shiny-notification\")\n    .map(function () {\n      return this.id.replace(/shiny-notification-/, \"\");\n    })\n    .get();\n}\n\n// Returns the notification panel DOM object (wrapped in jQuery).\nfunction getPanel() {\n  return $(\"#shiny-notification-panel\");\n}\n\n// Create notifications panel and return the jQuery object. If the DOM\n// element already exists, just return it.\nfunction createPanel() {\n  const $panel = getPanel();\n\n  if ($panel.length > 0) return $panel;\n\n  $(document.body).append('<div id=\"shiny-notification-panel\">');\n\n  return $panel;\n}\n\n// Create a notification DOM element and return the jQuery object. If the\n// DOM element already exists for the ID, just return it without creating.\nfunction create(id: string): JQuery<HTMLElement> {\n  let $notification = get(id);\n\n  if ($notification?.length === 0) {\n    $notification = $(\n      `<div id=\"shiny-notification-${id}\" class=\"shiny-notification\">` +\n        '<div class=\"shiny-notification-close\">&times;</div>' +\n        '<div class=\"shiny-notification-content\"></div>' +\n        \"</div>\"\n    );\n\n    $notification.find(\".shiny-notification-close\").on(\"click\", (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      remove(id);\n    });\n\n    getPanel().append($notification);\n  }\n\n  return $notification as JQuery<HTMLElement>;\n}\n\n// Add a callback to remove a notification after a delay in ms.\nfunction addRemovalCallback(id: string, delay: number) {\n  // If there's an existing removalCallback, clear it before adding the new\n  // one.\n  clearRemovalCallback(id);\n\n  // Attach new removal callback\n  const removalCallback = setTimeout(function () {\n    remove(id);\n  }, delay);\n\n  get(id)?.data(\"removalCallback\", removalCallback);\n}\n\n// Clear a removal callback from a notification, if present.\nfunction clearRemovalCallback(id: string) {\n  const $notification = get(id);\n  const oldRemovalCallback: ReturnType<typeof setTimeout> =\n    $notification?.data(\"removalCallback\");\n\n  if (oldRemovalCallback) {\n    clearTimeout(oldRemovalCallback);\n  }\n}\n\nexport { show as showNotification, remove as removeNotification };\n", "import $ from \"jquery\";\n\nimport { removeNotification, showNotification } from \"./notifications\";\n\nfunction updateTime(reconnectTime: number): void {\n  const $time = $(\"#shiny-reconnect-time\");\n  // If the time has been removed, exit and don't reschedule this function.\n\n  if ($time.length === 0) return;\n\n  const seconds = Math.floor((reconnectTime - new Date().getTime()) / 1000);\n\n  if (seconds > 0) {\n    $time.text(\" in \" + seconds + \"s\");\n  } else {\n    $time.text(\"...\");\n  }\n\n  // Reschedule this function after 1 second\n  setTimeout(function () {\n    updateTime(reconnectTime);\n  }, 1000);\n}\n\nasync function showReconnectDialog(delay: number): Promise<void> {\n  const reconnectTime = new Date().getTime() + delay;\n\n  // If there's already a reconnect dialog, don't add another\n  if ($(\"#shiny-reconnect-text\").length > 0) return;\n\n  const html =\n    '<span id=\"shiny-reconnect-text\">Attempting to reconnect</span>' +\n    '<span id=\"shiny-reconnect-time\"></span>';\n  const action =\n    '<a id=\"shiny-reconnect-now\" href=\"#\" onclick=\"Shiny.shinyapp.reconnect();\">Try now</a>';\n\n  await showNotification({\n    id: \"reconnect\",\n    html: html,\n    action: action,\n    duration: null,\n    closeButton: false,\n    type: \"warning\",\n  });\n\n  updateTime(reconnectTime);\n}\n\nfunction hideReconnectDialog(): void {\n  removeNotification(\"reconnect\");\n}\n\nexport { showReconnectDialog, hideReconnectDialog };\n", "import $ from \"jquery\";\nimport type { InputBinding } from \"../bindings\";\nimport type { OutputBindingAdapter } from \"../bindings/outputAdapter\";\nimport { showErrorInClientConsole } from \"../components/errorConsole\";\nimport type {\n  ShinyEventError,\n  ShinyEventMessage,\n  ShinyEventUpdateInput,\n  ShinyEventValue,\n} from \"../events/shinyEvents\";\nimport type { UploadEndValue, UploadInitValue } from \"../file/fileProcessor\";\nimport { resetBrush } from \"../imageutils/resetBrush\";\nimport { $escape, hasOwnProperty, randomId, scopeExprToFunc } from \"../utils\";\nimport { AsyncQueue } from \"../utils/asyncQueue\";\nimport { isQt } from \"../utils/browser\";\nimport { indirectEval } from \"../utils/eval\";\nimport {\n  getShinyCreateWebsocket,\n  getShinyOnCustomMessage,\n  setShinyUser,\n  shinyBindAll,\n  shinyForgetLastInputValue,\n  shinyUnbindAll,\n} from \"./initedMethods\";\nimport { removeModal, showModal } from \"./modal\";\nimport { removeNotification, showNotification } from \"./notifications\";\nimport { hideReconnectDialog, showReconnectDialog } from \"./reconnectDialog\";\nimport type { HtmlDep } from \"./render\";\nimport { renderContentAsync, renderHtmlAsync } from \"./render\";\nimport type { WherePosition } from \"./singletons\";\n\nimport { OutputProgressReporter } from \"./outputProgress\";\n\ntype ResponseValue = UploadEndValue | UploadInitValue;\ntype Handler = (message: any) => Promise<void> | void;\n\ntype ShinyWebSocket = WebSocket & {\n  allowReconnect?: boolean;\n};\n\ntype ErrorsMessageValue = {\n  message: string;\n  call: string[];\n  type?: string[];\n};\n\ntype OnSuccessRequest = (value: ResponseValue) => void;\ntype OnErrorRequest = (err: string) => void;\ntype InputValues = { [key: string]: unknown };\n\ntype MessageValue = Parameters<WebSocket[\"send\"]>[0];\n\n//// 2021/03 - TypeScript conversion note:\n// These four variables were moved from being internally defined to being defined globally within the file.\n// Before the TypeScript conversion, the values where attached to `window.Shiny.addCustomMessageHandler()`.\n// This prevents multiple instances of `ShinyApp` from existing independently. :-/\n// This behavior is also exhibited on `Shiny.progressHandlers`, however there are no instances of use on GitHub. So moving the assignment to within `initShiny()`.\n\n// Records insertion order of handlers. Maps number to name. This is so\n// we can dispatch messages to handlers in the order that handlers were\n// added.\nconst messageHandlerOrder: string[] = [];\n// Keep track of handlers by name. Maps name to handler function.\nconst messageHandlers: { [key: string]: Handler } = {};\n\n// Two categories of message handlers: those that are from Shiny, and those\n// that are added by the user. The Shiny ones handle messages in\n// msgObj.values, msgObj.errors, and so on. The user ones handle messages\n// in msgObj.custom.foo and msgObj.custom.bar.\nconst customMessageHandlerOrder: string[] = [];\nconst customMessageHandlers: { [key: string]: Handler } = {};\n\n// Adds Shiny (internal) message handler\nfunction addMessageHandler(type: string, handler: Handler) {\n  if (messageHandlers[type]) {\n    throw 'handler for message of type \"' + type + '\" already added.';\n  }\n  if (typeof handler !== \"function\") {\n    throw \"handler must be a function.\";\n  }\n  if (handler.length !== 1) {\n    throw \"handler must be a function that takes one argument.\";\n  }\n  messageHandlerOrder.push(type);\n  messageHandlers[type] = handler;\n}\n\n// Adds custom message handler - this one is exposed to the user\nfunction addCustomMessageHandler(type: string, handler: Handler): void {\n  // Remove any previously defined handlers so that only the most recent one\n  // will be called\n  if (customMessageHandlers[type]) {\n    const typeIdx = customMessageHandlerOrder.indexOf(type);\n\n    if (typeIdx !== -1) {\n      customMessageHandlerOrder.splice(typeIdx, 1);\n      delete customMessageHandlers[type];\n    }\n  }\n  if (typeof handler !== \"function\") {\n    throw \"handler must be a function.\";\n  }\n  if (handler.length !== 1) {\n    throw \"handler must be a function that takes one argument.\";\n  }\n\n  customMessageHandlerOrder.push(type);\n  customMessageHandlers[type] = handler;\n}\n\n//// End message handler variables\n\n/**\n * The ShinyApp class handles the communication with the Shiny Server.\n */\nclass ShinyApp {\n  $socket: ShinyWebSocket | null = null;\n\n  // An asynchronous queue of functions. This is sort of like an event loop for\n  // Shiny, to allow scheduling async callbacks so that they can run in order\n  // without overlapping. This is used for handling incoming messages from the\n  // server and scheduling outgoing messages to the server, and can be used for\n  // other things tasks as well.\n  taskQueue = new AsyncQueue<() => Promise<void> | void>();\n\n  config: {\n    workerId: string;\n    sessionId: string;\n  } | null = null;\n\n  // Cached input values\n  $inputValues: InputValues = {};\n\n  // Input values at initialization (and reconnect)\n  $initialInput: InputValues | null = null;\n\n  // Output bindings\n  $bindings: { [key: string]: OutputBindingAdapter } = {};\n\n  // Output progress states\n  $outputProgress = new OutputProgressReporter();\n\n  // Cached values/errors\n  $values: { [key: string]: any } = {};\n  $errors: { [key: string]: ErrorsMessageValue } = {};\n\n  // Conditional bindings (show/hide element based on expression)\n  $conditionals = {};\n\n  $pendingMessages: MessageValue[] = [];\n  $activeRequests: {\n    [key: number]: { onSuccess: OnSuccessRequest; onError: OnErrorRequest };\n  } = {};\n  $nextRequestId = 0;\n\n  $allowReconnect: boolean | \"force\" = false;\n\n  constructor() {\n    this._init();\n  }\n\n  connect(initialInput: InputValues): void {\n    if (this.$socket)\n      throw \"Connect was already called on this application object\";\n\n    this.$socket = this.createSocket();\n    this.$initialInput = initialInput;\n    $.extend(this.$inputValues, initialInput);\n\n    this.$updateConditionals();\n  }\n\n  isConnected(): boolean {\n    return !!this.$socket;\n  }\n\n  private scheduledReconnect: number | undefined = undefined;\n\n  reconnect(): void {\n    // This function can be invoked directly even if there's a scheduled\n    // reconnect, so be sure to clear any such scheduled reconnects.\n    clearTimeout(this.scheduledReconnect);\n\n    if (this.isConnected())\n      throw \"Attempted to reconnect, but already connected.\";\n\n    this.$socket = this.createSocket();\n    this.$initialInput = $.extend({}, this.$inputValues);\n    this.$updateConditionals();\n  }\n\n  createSocket(): ShinyWebSocket {\n    const createSocketFunc: () => ShinyWebSocket =\n      getShinyCreateWebsocket() ||\n      (() => {\n        let protocol = \"ws:\";\n\n        if (window.location.protocol === \"https:\") protocol = \"wss:\";\n\n        let defaultPath = window.location.pathname;\n        // some older WebKit browsers return the pathname already decoded;\n        // if we find invalid URL characters in the path, encode them\n\n        if (!/^([$#!&-;=?-[\\]_a-z~]|%[0-9a-fA-F]{2})+$/.test(defaultPath)) {\n          defaultPath = encodeURI(defaultPath);\n          // Bizarrely, QtWebKit requires us to encode these characters *twice*\n          if (isQt()) {\n            defaultPath = encodeURI(defaultPath);\n          }\n        }\n        if (!/\\/$/.test(defaultPath)) defaultPath += \"/\";\n        defaultPath += \"websocket/\";\n\n        const ws: ShinyWebSocket = new WebSocket(\n          protocol + \"//\" + window.location.host + defaultPath\n        );\n\n        ws.binaryType = \"arraybuffer\";\n\n        return ws;\n      });\n\n    const socket = createSocketFunc();\n    let hasOpened = false;\n\n    socket.onopen = () => {\n      hasOpened = true;\n\n      $(document).trigger({\n        type: \"shiny:connected\",\n        // @ts-expect-error; Can not remove info on a established, malformed Event object\n        socket: socket,\n      });\n\n      this.onConnected();\n\n      socket.send(\n        JSON.stringify({\n          method: \"init\",\n          data: this.$initialInput,\n        })\n      );\n\n      while (this.$pendingMessages.length) {\n        const msg = this.$pendingMessages.shift();\n\n        socket.send(msg as string);\n      }\n\n      // This launches the action queue loop, which just runs in the background,\n      // so we don't need to await it.\n      /* eslint-disable-next-line @typescript-eslint/no-floating-promises */\n      this.startActionQueueLoop();\n    };\n    socket.onmessage = (e) => {\n      this.taskQueue.enqueue(async () => await this.dispatchMessage(e.data));\n    };\n    // Called when a successfully-opened websocket is closed, or when an\n    // attempt to open a connection fails.\n    socket.onclose = (e) => {\n      const restarting = e.code === 1012; // Uvicorn sets this code when autoreloading\n      // These things are needed only if we've successfully opened the\n      // websocket.\n      if (hasOpened) {\n        $(document).trigger({\n          type: \"shiny:disconnected\",\n          // @ts-expect-error; Can not remove info on a established, malformed Event object\n          socket: socket,\n        });\n\n        this.$notifyDisconnected();\n      }\n\n      this.onDisconnected(restarting); // Must be run before this.$removeSocket()\n      this.$removeSocket();\n    };\n    return socket;\n  }\n\n  async startActionQueueLoop(): Promise<void> {\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      try {\n        const action = await this.taskQueue.dequeue();\n\n        await action();\n      } catch (e) {\n        showErrorInClientConsole(e);\n        console.error(e);\n      }\n    }\n  }\n\n  sendInput(values: InputValues): void {\n    const msg = JSON.stringify({\n      method: \"update\",\n      data: values,\n    });\n\n    this.$sendMsg(msg);\n\n    $.extend(this.$inputValues, values);\n    this.$updateConditionals();\n  }\n\n  $notifyDisconnected(): void {\n    if (window.parent) {\n      window.parent.postMessage(\"disconnected\", \"*\");\n    }\n  }\n\n  $removeSocket(): void {\n    this.$socket = null;\n  }\n\n  $scheduleReconnect(delay: Parameters<typeof setTimeout>[1]): void {\n    this.scheduledReconnect = window.setTimeout(() => {\n      this.reconnect();\n    }, delay);\n  }\n\n  // How long should we wait before trying the next reconnection?\n  // The delay will increase with subsequent attempts.\n  // .next: Return the time to wait for next connection, and increment counter.\n  // .reset: Reset the attempt counter.\n  reconnectDelay = (function () {\n    let attempts = 0;\n    // Time to wait before each reconnection attempt. If we go through all of\n    // these values, repeated use the last one. Add 500ms to each one so that\n    // in the last 0.5s, it shows \"...\"\n    const delays = [1500, 1500, 2500, 2500, 5500, 5500, 10500];\n\n    return {\n      next: function () {\n        let i = attempts;\n        // Instead of going off the end, use the last one\n\n        if (i >= delays.length) {\n          i = delays.length - 1;\n        }\n\n        attempts++;\n        return delays[i];\n      },\n      reset: function () {\n        attempts = 0;\n      },\n    };\n  })();\n\n  onDisconnected(reloading = false): void {\n    // Add gray-out overlay, if not already present\n    if ($(\"#shiny-disconnected-overlay\").length === 0) {\n      $(document.body).append('<div id=\"shiny-disconnected-overlay\"></div>');\n    }\n    $(\"#shiny-disconnected-overlay\").toggleClass(\"reloading\", reloading);\n\n    // To try a reconnect, both the app (this.$allowReconnect) and the\n    // server (this.$socket.allowReconnect) must allow reconnections, or\n    // session$allowReconnect(\"force\") was called. The \"force\" option should\n    // only be used for testing.\n    if (\n      (this.$allowReconnect === true &&\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.$socket!.allowReconnect === true) ||\n      this.$allowReconnect === \"force\"\n    ) {\n      const delay = this.reconnectDelay.next();\n\n      /* eslint-disable-next-line @typescript-eslint/no-floating-promises */\n      showReconnectDialog(delay);\n      this.$scheduleReconnect(delay);\n    }\n  }\n\n  onConnected(): void {\n    $(\"#shiny-disconnected-overlay\").remove();\n    hideReconnectDialog();\n    this.reconnectDelay.reset();\n  }\n\n  // NB: Including blobs will cause IE to break!\n  // TODO: Make blobs work with Internet Explorer\n  //\n  // Websocket messages are normally one-way--i.e. the client passes a\n  // message to the server but there is no way for the server to provide\n  // a response to that specific message. makeRequest provides a way to\n  // do asynchronous RPC over websocket. Each request has a method name\n  // and arguments, plus optionally one or more binary blobs can be\n  // included as well. The request is tagged with a unique number that\n  // the server will use to label the corresponding response.\n  //\n  // @param method A string that tells the server what logic to run.\n  // @param args An array of objects that should also be passed to the\n  //   server in JSON-ified form.\n  // @param onSuccess A function that will be called back if the server\n  //   responds with success. If the server provides a value in the\n  //   response, the function will be called with it as the only argument.\n  // @param onError A function that will be called back if the server\n  //   responds with error, or if the request fails for any other reason.\n  //   The parameter to onError will be a string describing the error.\n  // @param blobs Optionally, an array of Blob, ArrayBuffer, or string\n  //   objects that will be made available to the server as part of the\n  //   request. Strings will be encoded using UTF-8.\n  makeRequest(\n    method: string,\n    args: unknown[],\n    onSuccess: OnSuccessRequest,\n    onError: OnErrorRequest,\n    blobs: Array<ArrayBuffer | Blob | string> | undefined\n  ): void {\n    let requestId = this.$nextRequestId;\n\n    while (this.$activeRequests[requestId]) {\n      requestId = (requestId + 1) % 1000000000;\n    }\n    this.$nextRequestId = requestId + 1;\n\n    this.$activeRequests[requestId] = {\n      onSuccess: onSuccess,\n      onError: onError,\n    };\n\n    let msg: Blob | string = JSON.stringify({\n      method: method,\n      args: args,\n      tag: requestId,\n    });\n\n    if (blobs) {\n      // We have binary data to transfer; form a different kind of packet.\n      // Start with a 4-byte signature, then for each blob, emit 4 bytes for\n      // the length followed by the blob. The json payload is UTF-8 encoded\n      // and used as the first blob.\n\n      const uint32ToBuf = function (val: number) {\n        const buffer = new ArrayBuffer(4);\n        const view = new DataView(buffer);\n\n        view.setUint32(0, val, true); // little-endian\n        return buffer;\n      };\n\n      const payload = [];\n\n      payload.push(uint32ToBuf(0x01020202)); // signature\n\n      const jsonBuf: Blob = new Blob([msg]);\n\n      payload.push(uint32ToBuf(jsonBuf.size));\n      payload.push(jsonBuf);\n\n      for (let i = 0; i < blobs.length; i++) {\n        const blob = blobs[i];\n\n        payload.push(\n          uint32ToBuf(\n            (blob as ArrayBuffer).byteLength || (blob as Blob).size || 0\n          )\n        );\n        payload.push(blob);\n      }\n\n      const blob: Blob = new Blob(payload);\n\n      msg = blob;\n    }\n\n    this.$sendMsg(msg);\n  }\n\n  $sendMsg(msg: MessageValue): void {\n    if (this.$socket && this.$socket.readyState) {\n      this.$socket.send(msg);\n    } else {\n      this.$pendingMessages.push(msg);\n    }\n  }\n\n  receiveError(name: string, error: ErrorsMessageValue): void {\n    if (this.$errors[name] === error) return;\n\n    this.$errors[name] = error;\n    delete this.$values[name];\n\n    const binding = this.$bindings[name];\n    const evt: ShinyEventError = $.Event(\"shiny:error\");\n\n    evt.name = name;\n    evt.error = error;\n    evt.binding = binding;\n    $(binding ? binding.el : document).trigger(evt);\n    if (!evt.isDefaultPrevented() && binding && binding.onValueError) {\n      binding.onValueError(evt.error);\n    }\n  }\n\n  async receiveOutput<T>(name: string, value: T): Promise<T | undefined> {\n    const binding = this.$bindings[name];\n    const evt: ShinyEventValue = $.Event(\"shiny:value\");\n\n    evt.name = name;\n    evt.value = value;\n    evt.binding = binding;\n\n    if (this.$values[name] === value) {\n      $(binding ? binding.el : document).trigger(evt);\n      return undefined;\n    }\n\n    this.$values[name] = value;\n    delete this.$errors[name];\n\n    $(binding ? binding.el : document).trigger(evt);\n\n    if (!evt.isDefaultPrevented() && binding) {\n      await binding.onValueChange(evt.value);\n    }\n\n    return value;\n  }\n\n  async bindOutput(\n    id: string,\n    binding: OutputBindingAdapter\n  ): Promise<OutputBindingAdapter> {\n    if (!id) throw new Error(\"Can't bind an element with no ID\");\n    this.$bindings[id] = binding;\n\n    if (this.$values[id] !== undefined)\n      await binding.onValueChange(this.$values[id]);\n    else if (this.$errors[id] !== undefined)\n      binding.onValueError(this.$errors[id]);\n\n    return binding;\n  }\n\n  unbindOutput(id: string, binding: OutputBindingAdapter): boolean {\n    if (this.$bindings[id] === binding) {\n      delete this.$bindings[id];\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // Narrows a scopeComponent -- an input or output object -- to one constrained\n  // by nsPrefix. Returns a new object with keys removed and renamed as\n  // necessary.\n  private _narrowScopeComponent<T>(\n    scopeComponent: { [key: string]: T },\n    nsPrefix: string\n  ) {\n    return Object.keys(scopeComponent)\n      .filter((k) => k.indexOf(nsPrefix) === 0)\n      .map((k) => ({ [k.substring(nsPrefix.length)]: scopeComponent[k] }))\n      .reduce((obj, pair) => $.extend(obj, pair), {});\n  }\n\n  // Narrows a scope -- an object with input and output \"subComponents\" -- to\n  // one constrained by the nsPrefix string.\n  //\n  // If nsPrefix is null or empty, returns scope without modification.\n  //\n  // Otherwise, returns a new object with keys in subComponents removed and\n  // renamed as necessary.\n  private _narrowScope(\n    scope: {\n      input: InputValues;\n      output: { [key: string]: any };\n    },\n    nsPrefix: string\n  ) {\n    if (nsPrefix) {\n      return {\n        input: this._narrowScopeComponent(scope.input, nsPrefix),\n        output: this._narrowScopeComponent(scope.output, nsPrefix),\n      };\n    }\n    return scope;\n  }\n\n  $updateConditionals(): void {\n    // @ts-expect-error; TODO-barret; Could this be transformed into `.trigger(TYPE)`?\n    $(document).trigger({\n      type: \"shiny:conditional\",\n    });\n\n    const inputs: InputValues = {};\n\n    // Input keys use \"name:type\" format; we don't want the user to\n    // have to know about the type suffix when referring to inputs.\n    for (const name in this.$inputValues) {\n      if (hasOwnProperty(this.$inputValues, name)) {\n        const shortName = name.replace(/:.*/, \"\");\n\n        inputs[shortName] = this.$inputValues[name];\n      }\n    }\n\n    const scope = { input: inputs, output: this.$values };\n\n    const conditionals = $(document).find(\"[data-display-if]\");\n\n    for (let i = 0; i < conditionals.length; i++) {\n      const el = $(conditionals[i]);\n      let condFunc = el.data(\"data-display-if-func\");\n\n      if (!condFunc) {\n        const condExpr = el.attr(\"data-display-if\") as string;\n\n        condFunc = scopeExprToFunc(condExpr);\n        el.data(\"data-display-if-func\", condFunc);\n      }\n\n      const nsPrefix = el.attr(\"data-ns-prefix\") as string;\n      const nsScope = this._narrowScope(scope, nsPrefix);\n      const show = Boolean(condFunc(nsScope));\n      const showing = el.css(\"display\") !== \"none\";\n\n      if (show !== showing) {\n        if (show) {\n          el.trigger(\"show\");\n          el.show();\n          el.trigger(\"shown\");\n        } else {\n          el.trigger(\"hide\");\n          el.hide();\n          el.trigger(\"hidden\");\n        }\n      }\n    }\n  }\n\n  // Message handler management functions =================================\n\n  // // Added in shiny init method\n  // Shiny.addCustomMessageHandler = addCustomMessageHandler;\n\n  async dispatchMessage(data: ArrayBufferLike | string): Promise<void> {\n    let msgObj: ShinyEventMessage[\"message\"] = {};\n\n    if (typeof data === \"string\") {\n      msgObj = JSON.parse(data);\n    } else {\n      // data is arraybuffer\n      const len = new DataView(data, 0, 1).getUint8(0);\n      const typedv = new DataView(data, 1, len);\n      const typebuf = [];\n\n      for (let i = 0; i < len; i++) {\n        typebuf.push(String.fromCharCode(typedv.getUint8(i)));\n      }\n      const type = typebuf.join(\"\");\n\n      data = data.slice(len + 1);\n      msgObj.custom = {};\n      // @ts-expect-error; `custom` value is of unknown type. So setting within it is not allowed\n      msgObj.custom[type] = data;\n    }\n\n    const evt: ShinyEventMessage = $.Event(\"shiny:message\");\n\n    evt.message = msgObj;\n    $(document).trigger(evt);\n    if (evt.isDefaultPrevented()) return;\n\n    // Before passing the message to handlers, use it to update output progress state\n    this.$outputProgress.updateStateFromMessage(evt.message);\n\n    // Send msgObj.foo and msgObj.bar to appropriate handlers\n    await this._sendMessagesToHandlers(\n      evt.message,\n      messageHandlers,\n      messageHandlerOrder\n    );\n\n    this.$updateConditionals();\n  }\n\n  // Message handlers =====================================================\n\n  // A function for sending messages to the appropriate handlers.\n  // - msgObj: the object containing messages, with format {msgObj.foo, msObj.bar\n  private async _sendMessagesToHandlers(\n    msgObj: { [key: string]: unknown },\n    handlers: { [key: string]: Handler },\n    handlerOrder: string[]\n  ): Promise<void> {\n    // Dispatch messages to handlers, if handler is present\n    for (let i = 0; i < handlerOrder.length; i++) {\n      const msgType = handlerOrder[i];\n\n      if (hasOwnProperty(msgObj, msgType)) {\n        // Execute each handler with 'this' referring to the present value of\n        // 'this'\n        await handlers[msgType].call(this, msgObj[msgType]);\n      }\n    }\n  }\n\n  // Call showProgress() on any output bindings that have changed their\n  // recalculating status since the last call to takeChanges().\n  // Note that we only need to call this function when a \"flush\" (i.e. \"values\")\n  // message or a \"progress\" message is received since these are the only\n  // two types of messages that can change the recalculating status. For more,\n  // see the state machine diagram in outputProgress.ts.\n  private _updateProgress() {\n    const changed = this.$outputProgress.takeChanges();\n    for (const [name, recalculating] of changed.entries()) {\n      if (hasOwnProperty(this.$bindings, name)) {\n        this.$bindings[name].showProgress(recalculating);\n      }\n    }\n  }\n\n  private _init() {\n    // Dev note:\n    // * Use arrow functions to allow the Types to propagate.\n    // * However, `_sendMessagesToHandlers()` will adjust the `this` context to the same _`this`_.\n\n    addMessageHandler(\"values\", async (message: { [key: string]: any }) => {\n      this._updateProgress();\n\n      for (const key in message) {\n        if (hasOwnProperty(message, key)) {\n          await this.receiveOutput(key, message[key]);\n        }\n      }\n    });\n\n    addMessageHandler(\n      \"errors\",\n      (message: { [key: string]: ErrorsMessageValue }) => {\n        for (const key in message) {\n          if (hasOwnProperty(message, key)) {\n            this.receiveError(key, message[key]);\n          }\n        }\n      }\n    );\n\n    addMessageHandler(\n      \"inputMessages\",\n      async (message: Array<{ id: string; message: unknown }>) => {\n        // inputMessages should be an array\n        for (let i = 0; i < message.length; i++) {\n          const $obj = $(\".shiny-bound-input#\" + $escape(message[i].id));\n          const inputBinding: InputBinding = $obj.data(\"shiny-input-binding\");\n\n          // Dispatch the message to the appropriate input object\n          if ($obj.length > 0) {\n            if (!$obj.attr(\"aria-live\")) $obj.attr(\"aria-live\", \"polite\");\n            const el = $obj[0];\n            const evt: ShinyEventUpdateInput = $.Event(\"shiny:updateinput\");\n\n            evt.message = message[i].message;\n            evt.binding = inputBinding;\n            $(el).trigger(evt);\n            if (!evt.isDefaultPrevented()) {\n              try {\n                await inputBinding.receiveMessage(el, evt.message);\n              } catch (error) {\n                console.error(\n                  \"[shiny] Error in inputBinding.receiveMessage()\",\n                  { error, binding: inputBinding, message: evt.message }\n                );\n              }\n            }\n          }\n        }\n      }\n    );\n\n    addMessageHandler(\"javascript\", (message: string) => {\n      /*jshint evil: true */\n      indirectEval(message);\n    });\n\n    addMessageHandler(\"console\", (message: unknown[]) => {\n      for (let i = 0; i < message.length; i++) {\n        if (console.log) console.log(message[i]);\n      }\n    });\n\n    addMessageHandler(\n      \"progress\",\n      async (message: { type: string; message: { id: string } }) => {\n        if (message.type && message.message) {\n          // @ts-expect-error; Unknown values handled with followup if statement\n          const handler = await this.progressHandlers[message.type];\n\n          if (handler) handler.call(this, message.message);\n        }\n      }\n    );\n\n    addMessageHandler(\n      \"notification\",\n      async (\n        message:\n          | { type: \"remove\"; message: string }\n          | { type: \"show\"; message: Parameters<typeof showNotification>[0] }\n          | { type: void }\n      ) => {\n        if (message.type === \"show\") await showNotification(message.message);\n        else if (message.type === \"remove\") removeNotification(message.message);\n        else throw \"Unkown notification type: \" + message.type;\n      }\n    );\n\n    addMessageHandler(\n      \"modal\",\n      async (\n        message:\n          | { type: \"remove\"; message: string }\n          | { type: \"show\"; message: Parameters<typeof showModal>[0] }\n          | { type: void }\n      ) => {\n        if (message.type === \"show\") await showModal(message.message);\n        // For 'remove', message content isn't used\n        else if (message.type === \"remove\") removeModal();\n        else throw \"Unkown modal type: \" + message.type;\n      }\n    );\n\n    addMessageHandler(\n      \"response\",\n      (message: { tag: number; value?: ResponseValue; error?: string }) => {\n        const requestId = message.tag;\n        const request = this.$activeRequests[requestId];\n\n        if (request) {\n          delete this.$activeRequests[requestId];\n          if (\"value\" in message)\n            request.onSuccess(message.value as UploadInitValue);\n          else request.onError(message.error as string);\n        }\n      }\n    );\n\n    addMessageHandler(\"allowReconnect\", (message: \"force\" | false | true) => {\n      switch (message) {\n        case true:\n        case false:\n        case \"force\":\n          this.$allowReconnect = message;\n          break;\n        default:\n          throw \"Invalid value for allowReconnect: \" + message;\n      }\n    });\n\n    addMessageHandler(\"custom\", async (message: { [key: string]: unknown }) => {\n      // For old-style custom messages - should deprecate and migrate to new\n      // method\n      const shinyOnCustomMessage = getShinyOnCustomMessage();\n\n      if (shinyOnCustomMessage) await shinyOnCustomMessage(message);\n\n      // Send messages.foo and messages.bar to appropriate handlers\n      await this._sendMessagesToHandlers(\n        message,\n        customMessageHandlers,\n        customMessageHandlerOrder\n      );\n    });\n\n    addMessageHandler(\n      \"config\",\n      (message: { workerId: string; sessionId: string; user?: string }) => {\n        this.config = {\n          workerId: message.workerId,\n          sessionId: message.sessionId,\n        };\n        if (message.user) setShinyUser(message.user);\n        $(document).trigger(\"shiny:sessioninitialized\");\n      }\n    );\n\n    addMessageHandler(\"busy\", (message: \"busy\" | \"idle\") => {\n      if (message === \"busy\") {\n        $(document.documentElement).addClass(\"shiny-busy\");\n        $(document).trigger(\"shiny:busy\");\n      } else if (message === \"idle\") {\n        $(document.documentElement).removeClass(\"shiny-busy\");\n        $(document).trigger(\"shiny:idle\");\n      }\n    });\n\n    addMessageHandler(\n      \"recalculating\",\n      (message: {\n        name?: string;\n        status?: \"recalculated\" | \"recalculating\";\n      }) => {\n        if (\n          hasOwnProperty(message, \"name\") &&\n          hasOwnProperty(message, \"status\")\n        ) {\n          const binding = this.$bindings[message.name as string];\n\n          if (binding) {\n            $(binding.el).trigger(\"shiny:\" + message.status);\n          } else {\n            $().trigger(\"shiny:\" + message.status);\n          }\n        }\n      }\n    );\n\n    addMessageHandler(\"reload\", (message: true) => {\n      window.location.reload();\n      return;\n      message;\n    });\n\n    addMessageHandler(\n      \"shiny-insert-ui\",\n      async (message: {\n        selector: string;\n        content: { html: string; deps: HtmlDep[] };\n        multiple: boolean;\n        where: WherePosition;\n      }): Promise<void> => {\n        const targets = $(message.selector);\n\n        if (targets.length === 0) {\n          // render the HTML and deps to a null target, so\n          // the side-effect of rendering the deps, singletons,\n          // and <head> still occur\n          console.warn(\n            'The selector you chose (\"' +\n              message.selector +\n              '\") could not be found in the DOM.'\n          );\n          await renderHtmlAsync(\n            message.content.html,\n            $([]),\n            message.content.deps\n          );\n        } else {\n          for (const target of targets) {\n            await renderContentAsync(target, message.content, message.where);\n            // If multiple is false, only render to the first target.\n            if (message.multiple === false) break;\n          }\n        }\n      }\n    );\n\n    addMessageHandler(\n      \"shiny-remove-ui\",\n      (message: { selector: string; multiple: boolean }) => {\n        const els = $(message.selector);\n\n        els.each(function (i, el) {\n          shinyUnbindAll(el, true);\n          $(el).remove();\n          // If `multiple` is false, returning false terminates the function\n          // and no other elements are removed; if `multiple` is true,\n          // returning nothing continues removing all remaining elements.\n          return message.multiple === false ? false : undefined;\n        });\n      }\n    );\n\n    addMessageHandler(\"frozen\", (message: { ids: string[] }) => {\n      for (let i = 0; i < message.ids.length; i++) {\n        shinyForgetLastInputValue(message.ids[i]);\n      }\n    });\n\n    function getTabset(id: string) {\n      const $tabset = $(\"#\" + $escape(id));\n\n      if ($tabset.length === 0)\n        throw (\n          \"There is no tabsetPanel (or navbarPage or navlistPanel) \" +\n          \"with id equal to '\" +\n          id +\n          \"'\"\n        );\n      return $tabset;\n    }\n\n    function getTabContent($tabset: JQuery<HTMLElement>) {\n      const tabsetId = $tabset.attr(\"data-tabsetid\") as string;\n      const $tabContent = $(\n        \"div.tab-content[data-tabsetid='\" + $escape(tabsetId) + \"']\"\n      );\n\n      return $tabContent;\n    }\n\n    function getTargetTabs(\n      $tabset: JQuery<HTMLElement>,\n      $tabContent: JQuery<HTMLElement>,\n      target: string\n    ) {\n      const dataValue = \"[data-value='\" + $escape(target) + \"']\";\n      const $aTag = $tabset.find(\"a\" + dataValue);\n      const $liTag = $aTag.parent();\n\n      if ($liTag.length === 0) {\n        throw (\n          \"There is no tabPanel (or navbarMenu) with value\" +\n          \" (or menuName) equal to '\" +\n          target +\n          \"'\"\n        );\n      }\n      const $liTags: Array<JQuery<HTMLElement>> = [];\n      const $divTags: Array<JQuery<HTMLElement>> = [];\n\n      if ($aTag.attr(\"data-toggle\") === \"dropdown\") {\n        // dropdown\n        const $dropdownTabset = $aTag.find(\"+ ul.dropdown-menu\");\n        const dropdownId = $dropdownTabset.attr(\"data-tabsetid\") as string;\n\n        const $dropdownLiTags = $dropdownTabset\n          .find(\"a[data-toggle='tab']\")\n          .parent(\"li\");\n\n        $dropdownLiTags.each(function (i, el) {\n          $liTags.push($(el));\n        });\n        const selector = \"div.tab-pane[id^='tab-\" + $escape(dropdownId) + \"']\";\n        const $dropdownDivs = $tabContent.find(selector);\n\n        $dropdownDivs.each(function (i, el) {\n          $divTags.push($(el));\n        });\n      } else {\n        // regular tab\n        $divTags.push($tabContent.find(\"div\" + dataValue));\n      }\n      return { $liTag: $liTag, $liTags: $liTags, $divTags: $divTags };\n    }\n\n    addMessageHandler(\n      \"shiny-insert-tab\",\n      async (message: {\n        inputId: string;\n        divTag: { html: string; deps: HtmlDep[] };\n        liTag: { html: string; deps: HtmlDep[] };\n        target?: string;\n        position: \"after\" | \"before\" | void;\n        select: boolean;\n        menuName: string;\n      }): Promise<void> => {\n        const $parentTabset = getTabset(message.inputId);\n        let $tabset = $parentTabset;\n        const $tabContent = getTabContent($tabset);\n        let tabsetId = $parentTabset.attr(\"data-tabsetid\");\n\n        // Create a virtual element where we'll temporarily hold the rendered\n        // nav controls so we can rewrite some attributes and choose where to\n        // insert the new controls.\n        const $fragLi = $(\"<div>\");\n        await renderContentAsync($fragLi, message.liTag, \"afterBegin\");\n\n        const $liTag = $($fragLi).find(\"> li\");\n        const $aTag = $liTag.find(\"> a\");\n\n        // Unless the item is being prepended/appended, the target tab\n        // must be provided\n        let $targetLiTag: JQuery<HTMLElement> | null = null;\n\n        if (message.target !== null) {\n          const targetInfo = getTargetTabs(\n            $tabset,\n            $tabContent,\n            message.target as string\n          );\n\n          $targetLiTag = targetInfo.$liTag;\n        }\n\n        // If the item is to be placed inside a navbarMenu (dropdown),\n        // change the value of $tabset from the parent's ul tag to the\n        // dropdown's ul tag\n        const dropdown = getDropdown();\n\n        if (dropdown !== null) {\n          if ($aTag.attr(\"data-toggle\") === \"dropdown\")\n            throw \"Cannot insert a navbarMenu inside another one\";\n          $tabset = dropdown.$tabset;\n          tabsetId = dropdown.id;\n          // In the BS4+ case, the server will be generating \"top-level\" nav markup\n          // (i.e., `li.nav-item a.nav-link`), but when inserting inside a dropdown we\n          // need `li a.dropdown-item` for correct styling\n          // https://getbootstrap.com/docs/5.0/components/navs-tabs/#tabs-with-dropdowns\n          $liTag\n            .removeClass(\"nav-item\")\n            .find(\".nav-link\")\n            .removeClass(\"nav-link\")\n            .addClass(\"dropdown-item\");\n        }\n\n        // For regular tab items, fix the href (of the li > a tag)\n        // and the id (of the div tag). This does not apply to plain\n        // text items (which function as dividers and headers inside\n        // navbarMenus) and whole navbarMenus (since those get\n        // constructed from scratch on the R side and therefore\n        // there are no ids that need matching). In other words, we're\n        // guaranteed to be inserting only one `nav_panel()`.\n        let fixupDivId = \"\";\n        if ($aTag.attr(\"data-toggle\") === \"tab\") {\n          const index = getTabIndex($tabset, tabsetId);\n          const tabId = \"tab-\" + tabsetId + \"-\" + index;\n\n          $liTag.find(\"> a\").attr(\"href\", \"#\" + tabId);\n          // We'll fixup the div ID after we insert it\n          fixupDivId = tabId;\n        }\n\n        // actually insert the item into the right place\n        if (message.position === \"before\") {\n          if ($targetLiTag) {\n            $targetLiTag.before($liTag);\n          } else {\n            $tabset.prepend($liTag);\n          }\n        } else if (message.position === \"after\") {\n          if ($targetLiTag) {\n            $targetLiTag.after($liTag);\n          } else {\n            $tabset.append($liTag);\n          }\n        }\n        await shinyBindAll($targetLiTag?.parent() || $tabset);\n\n        // jcheng 2017-07-28: This next part might look a little insane versus the\n        // more obvious `$tabContent.append($divTag);`, but there's a method to the\n        // madness.\n        //\n        // 1) We need to load the dependencies, and this needs to happen before\n        //    any scripts in $divTag get a chance to run.\n        // 2) The scripts in $divTag need to run only once.\n        // 3) The contents of $divTag need to be sent through renderContent so that\n        //    singletons may be registered and/or obeyed, and so that inputs/outputs\n        //    may be bound.\n        //\n        // Add to these constraints these facts:\n        //\n        // A) The (non-jQuery) DOM manipulation functions don't cause scripts to\n        //    run, but the jQuery functions all do.\n        // B) renderContent must be called on an element that's attached to the\n        //    document.\n        // C) $divTag may be of length > 1 (e.g. navbarMenu). I also noticed text\n        //    elements consisting of just \"\\n\" being included in the nodeset of\n        //    $divTag.\n        // D) renderContent has a bug where only position \"replace\" (the default)\n        //    uses the jQuery functions, so other positions like \"beforeend\" will\n        //    prevent child script tags from running.\n        //\n        // In theory the same problem exists for $liTag but since that content is\n        // much less likely to include arbitrary scripts, we're skipping it.\n        //\n        // garrick 2025-01-23: Keeping in mind the above, the `shiny-insert-tab`\n        // method was re-written to avoid adding the nav controls (liTag) and\n        // the nav panel contents (divTag) twice. Now, we use\n        // renderContentAsync() to add both sections to the DOM only once.\n\n        await renderContentAsync($tabContent[0], message.divTag, \"beforeEnd\");\n\n        if (fixupDivId) {\n          // We're inserting one nav_panel() and need to fixup the content ID\n          $tabContent.find('[id=\"tab-tsid-id\"]').attr(\"id\", fixupDivId);\n        }\n\n        if (message.select) {\n          $liTag.find(\"a\").tab(\"show\");\n        }\n        /* Barbara -- August 2017\n         * Note: until now, the number of tabs in a tabsetPanel (or navbarPage\n         * or navlistPanel) was always fixed. So, an easy way to give an id to\n         * a tab was simply incrementing a counter. (Just like it was easy to\n         * give a random 4-digit number to identify the tabsetPanel). Now that\n         * we're introducing dynamic tabs, we must retrieve these numbers and\n         * fix the dummy id given to the tab in the R side -- there, we always\n         * set the tab id (counter dummy) to \"id\" and the tabset id to \"tsid\")\n         */\n        function getTabIndex(\n          $tabset: JQuery<HTMLElement>,\n          tabsetId: string | undefined\n        ) {\n          // The 0 is to ensure this works for empty tabsetPanels as well\n          const existingTabIds = [0];\n          // loop through all existing tabs, find the one with highest id\n          // (since this is based on a numeric counter), and increment\n\n          $tabset.find(\"> li\").each(function () {\n            const $tab = $(this).find(\"> a[data-toggle='tab']\");\n\n            if ($tab.length > 0) {\n              // remove leading url if it exists. (copy of bootstrap url stripper)\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              const href = $tab.attr(\"href\")!.replace(/.*(?=#[^\\s]+$)/, \"\");\n              // remove tab id to get the index\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              const index = href!.replace(\"#tab-\" + tabsetId + \"-\", \"\");\n\n              existingTabIds.push(Number(index));\n            }\n          });\n          return Math.max.apply(null, existingTabIds) + 1;\n        }\n\n        // Finds out if the item will be placed inside a navbarMenu\n        // (dropdown). If so, returns the dropdown tabset (ul tag)\n        // and the dropdown tabsetid (to be used to fix the tab ID)\n        function getDropdown() {\n          if (message.menuName !== null) {\n            // menuName is only provided if the user wants to prepend\n            // or append an item inside a navbarMenu (dropdown)\n            const $dropdownATag = $(\n              \"a.dropdown-toggle[data-value='\" +\n                $escape(message.menuName) +\n                \"']\"\n            );\n\n            if ($dropdownATag.length === 0) {\n              throw (\n                \"There is no navbarMenu with menuName equal to '\" +\n                message.menuName +\n                \"'\"\n              );\n            }\n            const $dropdownTabset = $dropdownATag.find(\"+ ul.dropdown-menu\");\n            const dropdownId = $dropdownTabset.attr(\"data-tabsetid\");\n\n            return { $tabset: $dropdownTabset, id: dropdownId };\n          } else if (message.target !== null && $targetLiTag !== null) {\n            // if our item is to be placed next to a tab that is inside\n            // a navbarMenu, our item will also be inside\n            const $uncleTabset = $targetLiTag.parent(\"ul\");\n\n            if ($uncleTabset.hasClass(\"dropdown-menu\")) {\n              const uncleId = $uncleTabset.attr(\"data-tabsetid\");\n\n              return { $tabset: $uncleTabset, id: uncleId };\n            }\n          }\n          return null;\n        }\n      }\n    );\n\n    // If the given tabset has no active tabs, select the first one\n    function ensureTabsetHasVisibleTab($tabset: JQuery<HTMLElement>) {\n      const inputBinding = $tabset.data(\"shiny-input-binding\");\n\n      // Use the getValue() method to avoid duplicating the CSS selector\n      // for querying the DOM for the currently active tab\n      if (!inputBinding.getValue($tabset)) {\n        // Note: destTabValue may be null. We still want to proceed\n        // through the below logic and setValue so that the input\n        // value for the tabset gets updated (i.e. input$tabsetId\n        // should be null if there are no tabs).\n        const destTabValue = getFirstTab($tabset);\n        const evt: ShinyEventUpdateInput = $.Event(\"shiny:updateinput\");\n\n        evt.binding = inputBinding;\n        $tabset.trigger(evt);\n        inputBinding.setValue($tabset[0], destTabValue);\n      }\n    }\n\n    // Given a tabset ul jquery object, return the value of the first tab\n    // (in document order) that's visible and able to be selected.\n    function getFirstTab($ul: JQuery<HTMLElement>) {\n      return (\n        $ul\n          .find(\"li:visible a[data-toggle='tab']\")\n          .first()\n          .attr(\"data-value\") || null\n      );\n    }\n\n    function tabApplyFunction(\n      target: ReturnType<typeof getTargetTabs>,\n      func: ($el: JQuery<HTMLElement>) => void,\n      liTags = false\n    ) {\n      $.each(target, function (key, el) {\n        if (key === \"$liTag\") {\n          // $liTag is always just one jQuery element\n          func(el as ReturnType<typeof getTargetTabs>[\"$liTag\"]);\n        } else if (key === \"$divTags\") {\n          // $divTags is always an array (even if length = 1)\n          $.each(\n            el as ReturnType<typeof getTargetTabs>[\"$divTags\"],\n            function (i, div) {\n              func(div);\n            }\n          );\n        } else if (liTags && key === \"$liTags\") {\n          // $liTags is always an array (even if length = 0)\n          $.each(\n            el as ReturnType<typeof getTargetTabs>[\"$liTags\"],\n            function (i, div) {\n              func(div);\n            }\n          );\n        }\n      });\n    }\n\n    addMessageHandler(\n      \"shiny-remove-tab\",\n      (message: { inputId: string; target: string; type: never }) => {\n        const $tabset = getTabset(message.inputId);\n        const $tabContent = getTabContent($tabset);\n        const target = getTargetTabs($tabset, $tabContent, message.target);\n\n        tabApplyFunction(target, removeEl);\n\n        ensureTabsetHasVisibleTab($tabset);\n\n        function removeEl($el: JQuery<HTMLElement>) {\n          shinyUnbindAll($el, true);\n          $el.remove();\n        }\n      }\n    );\n\n    addMessageHandler(\n      \"shiny-change-tab-visibility\",\n      (message: {\n        inputId: string;\n        target: string;\n        type: \"hide\" | \"show\" | null;\n      }) => {\n        const $tabset = getTabset(message.inputId);\n        const $tabContent = getTabContent($tabset);\n        const target = getTargetTabs($tabset, $tabContent, message.target);\n\n        tabApplyFunction(target, changeVisibility, true);\n\n        ensureTabsetHasVisibleTab($tabset);\n\n        function changeVisibility($el: JQuery<HTMLElement>) {\n          if (message.type === \"show\") $el.css(\"display\", \"\");\n          else if (message.type === \"hide\") {\n            $el.hide();\n            $el.removeClass(\"active\");\n          }\n        }\n      }\n    );\n\n    addMessageHandler(\n      \"updateQueryString\",\n      (message: { mode: unknown | \"replace\"; queryString: string }) => {\n        // leave the bookmarking code intact\n        if (message.mode === \"replace\") {\n          // @ts-expect-error; No title value being supplied\n          window.history.replaceState(null, null, message.queryString);\n          return;\n        }\n\n        let what = null;\n\n        if (message.queryString.charAt(0) === \"#\") what = \"hash\";\n        else if (message.queryString.charAt(0) === \"?\") what = \"query\";\n        else\n          throw (\n            \"The 'query' string must start with either '?' \" +\n            \"(to update the query string) or with '#' (to \" +\n            \"update the hash).\"\n          );\n\n        const path = window.location.pathname;\n        const oldQS = window.location.search;\n        const oldHash = window.location.hash;\n\n        /* Barbara -- December 2016\n  Note: we could check if the new QS and/or hash are different\n  from the old one(s) and, if not, we could choose not to push\n  a new state (whether or not we would replace it is moot/\n  inconsequential). However, I think that it is better to\n  interpret each call to `updateQueryString` as representing\n  new state (even if the message.queryString is the same), so\n  that check isn't even performed as of right now.\n  */\n\n        let relURL = path;\n\n        if (what === \"query\") relURL += message.queryString;\n        else relURL += oldQS + message.queryString; // leave old QS if it exists\n        // @ts-expect-error; No title value being supplied\n        window.history.pushState(null, null, relURL);\n\n        // for the case when message.queryString has both a query string\n        // and a hash (`what = \"hash\"` allows us to trigger the\n        // hashchange event)\n        if (message.queryString.indexOf(\"#\") !== -1) what = \"hash\";\n\n        // for the case when there was a hash before, but there isn't\n        // any hash now (e.g. for when only the query string is updated)\n        if (window.location.hash !== oldHash) what = \"hash\";\n\n        // This event needs to be triggered manually because pushState() never\n        // causes a hashchange event to be fired,\n        if (what === \"hash\") $(document).trigger(\"hashchange\");\n      }\n    );\n\n    addMessageHandler(\n      \"resetBrush\",\n      (message: { brushId: Parameters<typeof resetBrush>[0] }) => {\n        resetBrush(message.brushId);\n      }\n    );\n  }\n\n  // Progress reporting ====================================================\n\n  progressHandlers = {\n    // Progress for a particular object\n    binding: function (\n      this: ShinyApp,\n      message: { id: string; persistent: boolean }\n    ): void {\n      const key = message.id;\n      const binding = this.$bindings[key];\n\n      if (binding) {\n        $(binding.el).trigger({\n          type: \"shiny:outputinvalidated\",\n          // @ts-expect-error; Can not remove info on a established, malformed Event object\n          binding: binding,\n          name: key,\n        });\n      }\n\n      this._updateProgress();\n    },\n\n    // Open a page-level progress bar\n    open: async function (message: {\n      style: \"notification\" | \"old\";\n      id: string;\n    }): Promise<void> {\n      if (message.style === \"notification\") {\n        // For new-style (starting in Shiny 0.14) progress indicators that use\n        // the notification API.\n\n        // Progress bar starts hidden; will be made visible if a value is provided\n        // during updates.\n        await showNotification({\n          html:\n            `<div id=\"shiny-progress-${message.id}\" class=\"shiny-progress-notification\">` +\n            '<div class=\"progress active\" style=\"display: none;\"><div class=\"progress-bar\"></div></div>' +\n            '<div class=\"progress-text\">' +\n            '<span class=\"progress-message\">message</span> ' +\n            '<span class=\"progress-detail\"></span>' +\n            \"</div>\" +\n            \"</div>\",\n          id: message.id,\n          duration: null,\n        });\n      } else if (message.style === \"old\") {\n        // For old-style (Shiny <=0.13.2) progress indicators.\n\n        // Add progress container (for all progress items) if not already present\n        let $container = $(\".shiny-progress-container\");\n\n        if ($container.length === 0) {\n          $container = $('<div class=\"shiny-progress-container\"></div>');\n          $(document.body).append($container);\n        }\n\n        // Add div for just this progress ID\n        const depth = $(\".shiny-progress.open\").length;\n        // The 'bar' class is needed for backward compatibility with Bootstrap 2.\n        const $progress = $(\n          '<div class=\"shiny-progress open\">' +\n            '<div class=\"progress active\"><div class=\"progress-bar bar\"></div></div>' +\n            '<div class=\"progress-text\">' +\n            '<span class=\"progress-message\">message</span>' +\n            '<span class=\"progress-detail\"></span>' +\n            \"</div>\" +\n            \"</div>\"\n        );\n\n        $progress.attr(\"id\", message.id);\n        $container.append($progress);\n\n        // Stack bars\n        const $progressBar = $progress.find(\".progress\");\n\n        if ($progressBar) {\n          $progressBar.css(\n            \"top\",\n            depth * ($progressBar.height() as number) + \"px\"\n          );\n\n          // Stack text objects\n          const $progressText = $progress.find(\".progress-text\");\n\n          $progressText.css(\n            \"top\",\n            3 * ($progressBar.height() as number) +\n              depth * ($progressText.outerHeight() as number) +\n              \"px\"\n          );\n\n          $progress.hide();\n        }\n      }\n    },\n\n    // Update page-level progress bar\n    update: function (message: {\n      style: \"notification\" | \"old\";\n      id: string;\n      message?: string;\n      detail?: string;\n      value?: number;\n    }): void {\n      if (message.style === \"notification\") {\n        // For new-style (starting in Shiny 0.14) progress indicators that use\n        // the notification API.\n        const $progress = $(\"#shiny-progress-\" + message.id);\n\n        if ($progress.length === 0) return;\n\n        if (typeof message.message !== \"undefined\") {\n          $progress.find(\".progress-message\").text(message.message);\n        }\n        if (typeof message.detail !== \"undefined\") {\n          $progress.find(\".progress-detail\").text(message.detail);\n        }\n        if (typeof message.value !== \"undefined\" && message.value !== null) {\n          $progress.find(\".progress\").show();\n          $progress.find(\".progress-bar\").width(message.value * 100 + \"%\");\n        }\n      } else if (message.style === \"old\") {\n        // For old-style (Shiny <=0.13.2) progress indicators.\n\n        const $progress = $(\"#\" + message.id + \".shiny-progress\");\n\n        if (typeof message.message !== \"undefined\") {\n          $progress.find(\".progress-message\").text(message.message);\n        }\n        if (typeof message.detail !== \"undefined\") {\n          $progress.find(\".progress-detail\").text(message.detail);\n        }\n        if (typeof message.value !== \"undefined\" && message.value !== null) {\n          $progress.find(\".progress\").show();\n          $progress.find(\".bar\").width(message.value * 100 + \"%\");\n        }\n\n        $progress.fadeIn();\n      }\n    },\n\n    // Close page-level progress bar\n    close: function (message: { style: \"notification\"; id: string }): void {\n      if (message.style === \"notification\") {\n        removeNotification(message.id);\n      } else if (message.style === \"old\") {\n        const $progress = $(\"#\" + message.id + \".shiny-progress\");\n\n        $progress.removeClass(\"open\");\n\n        $progress.fadeOut({\n          complete: function () {\n            $progress.remove();\n\n            // If this was the last shiny-progress, remove container\n            if ($(\".shiny-progress\").length === 0)\n              $(\".shiny-progress-container\").remove();\n          },\n        });\n      }\n    },\n  };\n\n  //// 2021/03: TypeScript Conversion\n  // Added in `./shiny/init.ts` as there are no instances of progressHandlers being used right away on GitHub\n  // Shiny.progressHandlers = this.progressHandlers;\n\n  // Returns a URL which can be queried to get values from inside the server\n  // function. This is enabled with `options(shiny.testmode=TRUE)`.\n  getTestSnapshotBaseUrl({ fullUrl = true } = {}): string {\n    const loc = window.location;\n    let url = \"\";\n\n    if (fullUrl) {\n      // Strip off everything after last slash in path, like dirname() in R\n      url = loc.origin + loc.pathname.replace(/\\/[^/]*$/, \"\");\n    }\n    url +=\n      \"/session/\" +\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      encodeURIComponent(this.config!.sessionId) +\n      \"/dataobj/shinytest?w=\" +\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      encodeURIComponent(this.config!.workerId) +\n      \"&nonce=\" +\n      randomId();\n\n    return url;\n  }\n}\n\nexport { ShinyApp, addCustomMessageHandler };\nexport type { Handler, ErrorsMessageValue, ShinyWebSocket };\n", "// Adapted from https://stackoverflow.com/a/47157945/412655\n\nexport class AsyncQueue<T> {\n  private $promises: Array<Promise<T>> = [];\n  private $resolvers: Array<(x: T) => void> = [];\n\n  private _add() {\n    const p: Promise<T> = new Promise((resolve) => {\n      this.$resolvers.push(resolve);\n    });\n\n    this.$promises.push(p);\n  }\n\n  enqueue(x: T): void {\n    if (!this.$resolvers.length) this._add();\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const resolve = this.$resolvers.shift()!;\n\n    resolve(x);\n  }\n\n  async dequeue(): Promise<T> {\n    if (!this.$promises.length) this._add();\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const promise = this.$promises.shift()!;\n\n    return promise;\n  }\n\n  isEmpty(): boolean {\n    return !this.$promises.length;\n  }\n\n  isBlocked(): boolean {\n    return !!this.$resolvers.length;\n  }\n\n  get length(): number {\n    return this.$promises.length - this.$resolvers.length;\n  }\n}\n", "/*\n * A state machine for tracking Shiny output progress.\n *\n * Although there are a handful of possible states, the ultimate goal here is to\n * be able to say whether a given output `isRecalculating()` or not (and thus,\n * whether we should show progress indication or not).\n *\n * The diagram below depicts the state machine. Each node represents a possible\n * state and each edge represents a server-->client message that moves outputs\n * from one state to another. If a node name is all caps, then the output should\n * be showing a busy state when visible (i.e., `binding.showProgress(true)`).\n *\n * A more polished SVG version of this diagram can be found here:\n * https://github.com/rstudio/shiny/blob/main/inst/diagrams/outputProgressStateMachine.svg\n *\n * +---------+ recalculating  +---------+\n * | INITIAL +--------------->| RUNNING |<----------------+\n * +---------+                +---+-----+                 |\n *               +-----------/     |                      |\n *               |              recalculated              |\n *               |                 |                      |\n *               |              +--v---+---------------+  |\n *               |           +--+ IDLE +--+-------+    |  |\n *               |           |  +------+  |       |    |  |\n *             1 |          2|           3|      4|    |  |\n *               v           v            v       v    |  |\n *          +------------+ +------+  +-----+   +-----+ |  |\n *          | PERSISTENT | |cancel|  |value|   |error| |  |\n *          +-------+----+ +---+--+  +-+---+   +-+---+ |  |\n *                  |         5|      5|         |     |  |\n *                 5|          v       v        5|     |  |\n *                  |       +-------------+      |     |  |\n *                  +------>| INVALIDATED |<-----+     |  |\n *                          +-----+-------+<-----------+  |\n *                                |                       |\n *                                |    recalculating      |\n *                                +-----------------------+\n *\n *  1. {progress: {type: \"binding\", message: {persistent: true}}}\n *  2. No message\n *  3. Value\n *  4. Error\n *  5. {progress: {type: \"binding\"}}\n */\n\n// The possible states of a given output.\nenum OutputStates {\n  Initial = \"initial\",\n  Running = \"running\",\n  Idle = \"idle\",\n  Value = \"value\",\n  Error = \"error\",\n  Cancel = \"cancel\",\n  Persistent = \"persistent\",\n  Invalidated = \"invalidated\",\n}\n\n// Server->client messages that have an impact on output progress state.\n// These derive from the Session's defineOutput() method.\ntype RecalculatingMessage = {\n  recalculating: {\n    name: string;\n    status: \"recalculated\" | \"recalculating\";\n  };\n};\n\ntype FlushMessage = {\n  errors: { [key: string]: unknown };\n  values: { [key: string]: unknown };\n  inputMessages: [];\n};\n\ntype ProgressMessage = {\n  progress: {\n    type: \"binding\";\n    message: {\n      id: string;\n      persistent: boolean;\n    };\n  };\n};\n\n// A generic server->client message type.\ntype Message = { [key: string]: unknown };\n\n// The state machine that tracks the progress of outputs in a Shiny app.\nclass OutputProgressReporter {\n  private outputStates: Map<string, OutputStates> = new Map();\n  // A map of outputs that have changed their progress status since the last call to takeChanges().\n  // The value is true if the output is recalculating, and false otherwise.\n  private changedOutputs: Map<string, boolean> = new Map();\n\n  takeChanges(): Map<string, boolean> {\n    const result = this.changedOutputs;\n    this.changedOutputs = new Map();\n    return result;\n  }\n\n  // Returns whether the output is recalculating or not.\n  isRecalculating(name: string): boolean {\n    const state = this.#getState(name);\n\n    // The blue nodes in the state machine diagram\n    const recalculatingStates = [\n      OutputStates.Initial,\n      OutputStates.Running,\n      OutputStates.Idle,\n      OutputStates.Persistent,\n      OutputStates.Invalidated,\n    ];\n\n    return recalculatingStates.includes(state);\n  }\n\n  // Update output state based on the message received from the server.\n  // Note that any message can be passed to this method, but only the\n  // messages that are relevant to output progress do anything to the state.\n  updateStateFromMessage(message: Message): void {\n    if (isRecalculatingMessage(message)) {\n      // The \"1st level\" of the state machine diagram\n      this.#updateStateFromRecalculating(message);\n    }\n\n    if (isFlushMessage(message)) {\n      // The \"2nd level\" of the state machine diagram\n      this.#updateStateFromFlush(message);\n    }\n\n    if (isProgressMessage(message)) {\n      // The \"3rd level\" of the state machine diagram\n      this.#updateStateFromProgress(message);\n    }\n  }\n\n  #updateStateFromRecalculating(message: RecalculatingMessage): void {\n    const { name, status } = message.recalculating;\n\n    const state = this.#getState(name);\n\n    if (status === \"recalculating\") {\n      switch (state) {\n        case OutputStates.Initial:\n        case OutputStates.Invalidated:\n          this.#setState(name, OutputStates.Running);\n          break;\n        default:\n          throw new Error(\n            `Shiny server sent a message that the output '${name}' is recalculating,\n            but the output is in an unexpected state of: '${state}'.`\n          );\n      }\n    }\n\n    if (status === \"recalculated\") {\n      switch (state) {\n        case OutputStates.Running:\n          this.#setState(name, OutputStates.Idle);\n          break;\n        default:\n          throw new Error(\n            `Shiny server sent a message that the output '${name}' has been recalculated,\n            but the output is in an unexpected state of: '${state}'.`\n          );\n      }\n    }\n  }\n\n  #updateStateFromFlush(message: FlushMessage): void {\n    for (const name in message.values) {\n      this.#updateStateFromValueOrError(name, OutputStates.Value);\n    }\n\n    for (const name in message.errors) {\n      this.#updateStateFromValueOrError(name, OutputStates.Error);\n    }\n\n    // Since req(F, cancelOutput = TRUE) doesn't send a message, we need to identify\n    // the situation by looking for outputs that are still idle and move them to cancel.\n    for (const [name, state] of this.outputStates) {\n      switch (state) {\n        case OutputStates.Idle:\n          this.#setState(name, OutputStates.Cancel);\n          break;\n        case OutputStates.Value:\n        case OutputStates.Error:\n        case OutputStates.Cancel:\n        case OutputStates.Persistent:\n        case OutputStates.Invalidated: // If the output is suspended\n          break;\n        default:\n          throw new Error(\n            `Shiny server sent a flush message, and after processing the values and errors,\n            the output '${name}' has an unexpected ending state of: '${state}'.`\n          );\n      }\n    }\n  }\n\n  #updateStateFromProgress(message: ProgressMessage): void {\n    const { id, persistent } = message.progress.message;\n    const state = this.#getState(id);\n    if (persistent) {\n      switch (state) {\n        case OutputStates.Running:\n          this.#setState(id, OutputStates.Persistent);\n          break;\n        default:\n          throw new Error(\n            `Shiny server has sent a 'persistent progress' message for ${id},\n            but the output is in an unexpected state of: ${state}`\n          );\n      }\n    } else {\n      switch (state) {\n        case OutputStates.Value:\n        case OutputStates.Error:\n        case OutputStates.Cancel:\n        case OutputStates.Persistent:\n        case OutputStates.Idle:\n          this.#setState(id, OutputStates.Invalidated);\n          break;\n        default:\n          throw new Error(\n            `Shiny server has sent a progress message for ${id},\n            but the output is in an unexpected state of: ${state}`\n          );\n      }\n    }\n  }\n\n  // When receiving values/errors as part of a flush message, outputs should generally\n  // be moving from Idle to Value/Error state.\n  #updateStateFromValueOrError(\n    name: string,\n    type: OutputStates.Error | OutputStates.Value\n  ): void {\n    const state = this.#getState(name);\n    switch (state) {\n      case OutputStates.Idle:\n        this.#setState(name, type);\n        break;\n      default:\n        throw new Error(\n          `Shiny server has sent a ${type} for the output '${name}',\n          but the output is in an unexpected state of: '${state}'.`\n        );\n    }\n  }\n\n  #getState(name: string): OutputStates {\n    return this.outputStates.get(name) ?? OutputStates.Initial;\n  }\n\n  #setState(name: string, state: OutputStates): void {\n    const oldRecalc = this.isRecalculating(name);\n    this.outputStates.set(name, state);\n    const newRecalc = this.isRecalculating(name);\n    if (oldRecalc !== newRecalc) {\n      this.changedOutputs.set(name, newRecalc);\n    }\n  }\n}\n\n// Type guards\nfunction isRecalculatingMessage(x: Message): x is RecalculatingMessage {\n  const m = x as RecalculatingMessage;\n  return m.recalculating !== undefined;\n}\n\nfunction isFlushMessage(x: Message): x is FlushMessage {\n  const m = x as FlushMessage;\n  return m.values !== undefined && m.errors !== undefined;\n}\n\nfunction isProgressMessage(x: Message): x is ProgressMessage {\n  const m = x as ProgressMessage;\n  return m.progress !== undefined && m.progress.type === \"binding\";\n}\n\nexport { OutputProgressReporter };\n", "import type { UserAgent } from \"../utils/userAgent\";\n\nfunction windowUserAgent(): UserAgent {\n  return window.navigator.userAgent;\n}\n\nexport { windowUserAgent };\n", "import $ from \"jquery\";\nimport { shinyShinyApp } from \"./initedMethods\";\nimport { showNotification } from \"./notifications\";\nimport type { ShinyApp } from \"./shinyapp\";\n\n// We can use this method as `shinyShinyApp()` will throw if not initialized\nfunction shinyAppConfig() {\n  return shinyShinyApp().config as NonNullable<ShinyApp[\"config\"]>;\n}\n\nfunction initReactlog(): void {\n  $(document).on(\"keydown\", function (e) {\n    if (e.which !== 114 || (!e.ctrlKey && !e.metaKey) || e.shiftKey || e.altKey)\n      return;\n    const url =\n      \"reactlog?w=\" +\n      window.escape(shinyAppConfig().workerId) +\n      \"&s=\" +\n      window.escape(shinyAppConfig().sessionId);\n\n    window.open(url);\n    e.preventDefault();\n  });\n\n  $(document).on(\"keydown\", function (e) {\n    if (\n      // if not one of the key combos below\n      !(\n        // cmd/ctrl + fn + f4\n        (\n          (e.which === 115 &&\n            (e.ctrlKey || e.metaKey) &&\n            !e.shiftKey &&\n            !e.altKey) ||\n          // cmd/ctrl + shift + fn + f3\n          (e.which === 114 &&\n            (e.ctrlKey || e.metaKey) &&\n            e.shiftKey &&\n            !e.altKey)\n        )\n      )\n    ) {\n      return;\n    }\n\n    const url =\n      \"reactlog/mark?w=\" +\n      window.escape(shinyAppConfig().workerId) +\n      \"&s=\" +\n      window.escape(shinyAppConfig().sessionId);\n\n    // send notification\n    /* eslint-disable-next-line @typescript-eslint/no-floating-promises */\n    $.get(url, function (result: \"marked\" | void) {\n      if (result !== \"marked\") return;\n\n      const html =\n        '<span id=\"shiny-reactlog-mark-text\">Marked time point in reactlog</span>';\n\n      /* eslint-disable-next-line @typescript-eslint/no-floating-promises */\n      showNotification({\n        html: html,\n        closeButton: true,\n      });\n    }).fail(function () {\n      // found returned error while marking, should open webpage\n      window.open(url);\n    });\n\n    e.preventDefault();\n  });\n}\n\nexport { initReactlog };\n", "import { determineBrowserInfo } from \"./browser\";\nimport { disableFormSubmission } from \"./disableForm\";\nimport { trackHistory } from \"./history\";\n\nimport { ShinyClass } from \"../shiny\";\nimport { setUserAgent } from \"../utils/userAgent\";\nimport { windowUserAgent } from \"../window/userAgent\";\n\nimport { initReactlog } from \"../shiny/reactlog\";\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nlet Shiny: ShinyClass;\n\nfunction init(): void {\n  if (window.Shiny) {\n    throw new Error(\"Trying to create window.Shiny, but it already exists!\");\n  }\n  Shiny = window.Shiny = new ShinyClass();\n  setUserAgent(windowUserAgent()); // before determineBrowserInfo()\n\n  determineBrowserInfo();\n  trackHistory();\n\n  disableFormSubmission();\n\n  initReactlog();\n}\n\nexport { init, Shiny, type ShinyClass };\n", "import { init } from \"./initialize\";\nexport { Shiny, type ShinyClass } from \"./initialize\";\n\ninit();\n"],
  "mappings": "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",
  "names": ["require_jquery", "__commonJSMin", "exports", "module", "import_jquery", "isQtVal", "isIEVal", "versionIE", "setIsQt", "isQt", "setIsIE", "isIE", "setIEVersion", "versionIE_", "IEVersion", "userAgent", "setUserAgent", "userAgent_", "getIEVersion", "msie", "userAgent", "isIE", "rv", "determineBrowserInfo", "$", "setIsQt", "setIsIE", "setIEVersion", "import_jquery", "disableFormSubmission", "$", "e", "import_jquery", "trackHistory", "origPushState", "args", "result", "$", "import_jquery", "import_jquery", "windowDevicePixelRatio", "hasOwnProperty", "obj", "prop", "hasDefinedProperty", "ifUndefined", "value", "alternate", "escapeHTML", "str", "escaped", "m", "randomId", "strToBool", "getStyle", "el", "styleProp", "x", "style", "padZeros", "digits", "roundSignif", "parseDate", "dateString", "date", "formatDateUTC", "makeResizeFilter", "func", "lastSize", "rect", "size", "pixelRatio", "windowDevicePixelRatio", "getBoundingClientSizeBeforeZoom", "zoom", "scopeExprToFunc", "expr", "exprEscaped", "e", "scope", "asArray", "value", "mergeSort", "list", "sortfunc", "merge", "a", "b", "ia", "ib", "sorted", "chunkSize", "i", "listA", "listB", "merged", "args", "$escape", "val", "mapValues", "obj", "f", "newObj", "key", "isnan", "_equal", "y", "$", "xo", "yo", "prop", "hasOwnProperty", "xa", "ya", "equal", "compareVersion", "op", "versionParts", "ver", "cmpVersion", "aParts", "bParts", "len", "cmp", "diff", "updateLabel", "labelTxt", "labelNode", "getComputedLinkColor", "div", "linkColor", "isBS3", "BindingRegistry", "binding", "bindingName", "priority", "bindingObj", "mergeSort", "a", "b", "InputBinding", "scope", "el", "callback", "data", "import_jquery", "ActionButtonInputBinding", "InputBinding", "scope", "$", "el", "value", "callback", "$el", "val", "data", "hasDefinedProperty", "label", "icon", "iconHtml", "e", "import_jquery", "CheckboxInputBinding", "InputBinding", "scope", "$", "el", "value", "callback", "data", "hasDefinedProperty", "import_jquery", "getLabelNode", "el", "$", "$escape", "getLabel", "obj", "parentNode", "CheckboxGroupInputBinding", "InputBinding", "scope", "$", "el", "$objs", "$escape", "values", "i", "value", "options", "getLabel", "getLabelNode", "data", "$el", "hasDefinedProperty", "updateLabel", "callback", "import_jquery", "DateInputBindingBase", "InputBinding", "scope", "$", "el", "callback", "data", "$input", "date", "$escape", "format", "str", "parsedDate", "curValue", "d", "parseDate", "DateInputBinding", "formatDateUTC", "value", "min", "max", "startview", "updateLabel", "hasDefinedProperty", "import_jquery", "getLabelNode", "el", "$", "$escape", "DateRangeInputBinding", "DateInputBindingBase", "scope", "$inputs", "start", "end", "formatDateUTC", "value", "$startinput", "$endinput", "min", "max", "minStr", "maxStr", "startview", "data", "$el", "updateLabel", "hasDefinedProperty", "callback", "import_jquery", "import_jquery", "import_jquery", "triggerFileInputChanged", "name", "value", "binding", "el", "inputType", "onEl", "evt", "$", "fullShinyObj", "setShinyObj", "shiny", "validateShinyHasBeenSet", "shinySetInputValue", "name", "value", "opts", "shinyShinyApp", "setShinyUser", "user", "shinyForgetLastInputValue", "shinyBindAll", "scope", "shinyUnbindAll", "includeSelf", "shinyInitializeInputs", "shinyAppBindOutput", "id", "binding", "shinyAppUnbindOutput", "getShinyOnCustomMessage", "fileInputBinding", "getFileInputBinding", "setFileInputBinding", "fileInputBinding_", "getShinyCreateWebsocket", "FileProcessor", "files", "exec$run", "cont", "file", "called", "FileUploader", "shinyapp", "id", "el", "method", "args", "onSuccess", "onFailure", "blobs", "$", "i", "fileInfo", "response", "error", "xhrVal", "e", "jqXHR", "textStatus", "errorThrown", "evt", "triggerFileInputChanged", "getFileInputBinding", "message", "completed", "$escape", "visible", "active", "zoneActive", "zoneOver", "zoneOf", "el", "$", "enableDraghover", "$el", "childCounter", "e", "disableDraghover", "enableDocumentEvents", "$doc", "$fileInputs", "disableDocumentEvents", "canSetFiles", "fileList", "testEl", "handleDrop", "files", "uploadDroppedFilesIE10Plus", "setFileText", "$fileText", "abortCurrentUpload", "uploader", "FileUploader", "shinyShinyApp", "fileInputBindingGetId", "uploadFiles", "evt", "id", "InputBinding", "FileInputBinding", "scope", "data", "dataParsed", "$progress", "$bar", "value", "callback", "$zone", "dropEvent", "import_jquery", "import_jquery", "getLabelNode", "el", "$", "$escape", "TextInputBindingBase", "InputBinding", "scope", "value", "callback", "data", "TextInputBinding", "hasDefinedProperty", "updateLabel", "getLabelNode", "el", "$", "$escape", "NumberInputBinding", "TextInputBindingBase", "scope", "numberVal", "numberValue", "value", "data", "hasDefinedProperty", "updateLabel", "import_jquery", "PasswordInputBinding", "TextInputBinding", "scope", "$", "el", "import_jquery", "getLabelNode", "el", "$", "$escape", "getLabel", "obj", "parentNode", "RadioInputBinding", "InputBinding", "scope", "$", "el", "checkedItems", "$escape", "value", "$objs", "options", "i", "getLabel", "getLabelNode", "data", "$el", "hasDefinedProperty", "updateLabel", "callback", "import_jquery", "indirectEval", "getLabelNode", "el", "escapedId", "$escape", "isSelectize", "$", "SelectInputBinding", "InputBinding", "scope", "$el", "value", "options", "data", "hasDefinedProperty", "selectize", "loaded", "query", "callback", "settings", "res", "index", "elem", "optgroupId", "optgroup", "updateLabel", "update", "config", "i", "x", "indirectEval", "control", "import_jquery", "forceIonSliderUpdate", "slider", "getTypePrettifyer", "dataType", "timeFormat", "timezone", "timeFormatter", "prettify", "num", "formatNumber", "getLabelNode", "el", "$", "$escape", "numValues", "SliderInputBinding", "TextInputBindingBase", "scope", "$el", "result", "convert", "val", "formatDateUTC", "value", "callback", "data", "msg", "hasDefinedProperty", "sliderFeatures", "i", "feats", "updateLabel", "domElements", "elem", "opts", "thousandSep", "decimalSep", "parts", "evt", "self", "target", "startLabel", "stopLabel", "loop", "animInterval", "timer", "sliderCanStep", "sliderReset", "sliderStep", "import_jquery", "getTabName", "anchor", "BootstrapTabInputBinding", "InputBinding", "scope", "$", "el", "isBS3", "value", "success", "data", "hasDefinedProperty", "callback", "import_jquery", "TextareaInputBinding", "TextInputBinding", "scope", "$", "initInputBindings", "inputBindings", "BindingRegistry", "TextInputBinding", "TextareaInputBinding", "PasswordInputBinding", "NumberInputBinding", "CheckboxInputBinding", "CheckboxGroupInputBinding", "RadioInputBinding", "SliderInputBinding", "DateInputBinding", "DateRangeInputBinding", "SelectInputBinding", "ActionButtonInputBinding", "BootstrapTabInputBinding", "fileInputBinding", "FileInputBinding", "import_jquery", "Debouncer", "target", "func", "delayMs", "args", "debounce", "threshold", "timerId", "thisFunc", "Invoker", "target", "func", "args", "Throttler", "target", "func", "delayMs", "args", "import_jquery", "OutputBinding", "scope", "el", "data", "err", "$", "errClass", "asArray", "type", "i", "c", "show", "recalcClass", "DatatableOutputBinding", "OutputBinding", "scope", "$", "el", "err", "shinyUnbindAll", "data", "$el", "colnames", "header", "x", "footer", "escapeHTML", "content", "i", "indirectEval", "searchCI", "oTable", "d", "callback", "debounce", "searchInputs", "import_jquery", "DownloadLinkOutputBinding", "OutputBinding", "scope", "$", "el", "data", "show", "e", "evt", "import_jquery", "import_jquery", "SendImageSize", "inputBatchSender", "doSendImageSize", "sendImageSizeDebouncer", "Debouncer", "debounce", "sendImageSizeFns", "import_jquery", "reSingleton", "reHead", "knownSingletons", "renderHtml", "html", "el", "where", "processed", "processHtml", "addToHead", "register", "$", "s", "registerNames", "i", "head", "tempDiv", "$head", "val", "newSingletons", "newVal", "findNewPayload", "match", "p1", "sig", "payload", "heads", "headAddPayload", "renderContentAsync", "el", "content", "where", "shinyUnbindAll", "html", "dependencies", "renderHtmlAsync", "scope", "shinyInitializeInputs", "shinyBindAll", "$parent", "$", "$grandparent", "renderContent", "renderHtml", "renderDependenciesAsync", "renderDependencies", "dep", "renderDependencyAsync", "renderDependency", "htmlDependencies", "registerDependency", "name", "version", "needsRestyle", "names", "idx", "addStylesheetsAndRestyle", "links", "$head", "refreshStyle", "href", "oldSheet", "xhr", "id", "oldStyle", "newStyle", "removeSheet", "sendImageSizeFns", "findSheet", "i", "sheet", "isIE", "link", "$link", "$dummyEl", "color", "getStylesheetLinkTags", "x", "hasDefinedProperty", "attr", "val", "appendStylesheetLinkTags", "stylesheetLinks", "appendScriptTags", "script", "appendScriptTagsAsync", "scriptPromises", "p", "resolve", "reject", "e", "appendMetaTags", "meta", "appendAttachmentLinkTags", "appendExtraHeadContent", "$newHead", "dep_", "normalizeHtmlDependency", "hrefPrefix", "result", "asArray", "attachments", "attachment", "index", "HtmlOutputBinding", "OutputBinding", "scope", "$", "el", "err", "shinyUnbindAll", "data", "renderContentAsync", "import_jquery", "import_jquery", "import_jquery", "mapLinear", "x", "domainMin", "domainMax", "rangeMin", "rangeMax", "clip", "factor", "newval", "max", "min", "scaler1D", "logbase", "val", "res", "addScaleFuns", "panel_", "panel", "d", "r", "xlog", "ylog", "xscaler", "yscaler", "scaleDataToImg", "mapValues", "value", "key", "prefix", "scaleImgToData", "offsetImg", "newOffset", "bounds", "initPanelScales", "panels", "findScalingRatio", "$el", "boundingRect", "findOrigin", "offset", "scalingRatio", "paddingBorder", "findDims", "contentRatio", "initCoordmap", "coordmap_", "$img", "img", "bounds", "coordmap", "initPanelScales", "mouseEvent", "imgOrigin", "scaleCssToImg", "offsetCss", "pixelScaling", "mapValues", "value", "key", "prefix", "scaleImgToCss", "offsetImg", "imgDims", "res", "expand", "x", "y", "cssToImgRatio", "expandImg", "matches", "dists", "i", "b", "xdist", "ydist", "minDist", "inputId", "clip", "nullOutside", "e", "shinySetInputValue", "coordsCss", "coords", "panel", "coordsImg", "coordsData", "$", "findBox", "offset1", "offset2", "shiftToRange", "vals", "min", "max", "maxval", "minval", "shiftAmount", "newvals", "i", "createBrush", "$el", "opts", "coordmap", "expandPixels", "el", "$div", "state", "cssToImg", "imgToCss", "reset", "hasOldBrush", "importOldBrush", "oldDiv", "oldBoundsData", "oldPanel", "i", "curPanel", "equal", "boundsData", "updateDiv", "onResize", "boundsDataVal", "isnan", "isInsideBrush", "offsetCss", "bounds", "isInResizeArea", "sides", "whichResizeSides", "b", "e", "res", "boundsCss", "boxCss", "minCss", "maxCss", "panel", "panelBoundsImg", "minData", "maxData", "findBox", "mapValues", "val", "roundSignif", "boxData", "getPanel", "addDiv", "$", "borderStyle", "imgOffsetCss", "findOrigin", "down", "up", "isBrushing", "startBrushing", "brushTo", "stopBrushing", "isDragging", "startDragging", "dragTo", "dx", "dy", "start", "newBoundsCss", "newBoundsImg", "xvalsImg", "yvalsImg", "shiftToRange", "stopDragging", "isResizing", "startResizing", "resizeTo", "dCss", "dImg", "bImg", "xminImg", "xmaxImg", "yminImg", "ymaxImg", "stopResizing", "import_jquery", "createClickInfo", "$el", "dblclickId", "dblclickDelay", "clickTimer", "pendingE", "triggerEvent", "newEventType", "e", "e2", "$", "triggerPendingMousedown2", "scheduleMousedown2", "mousedown", "dblclickIE8", "import_jquery", "createClickHandler", "inputId", "clip", "coordmap", "clickInfoSender", "e", "createHoverHandler", "delay", "delayType", "nullOutside", "sendHoverInfo", "hoverInfoSender", "Throttler", "Debouncer", "mouseout", "createBrushHandler", "$el", "opts", "outputId", "brush", "createBrush", "coords", "setCursorStyle", "style", "sendBrushInfo", "shinySetInputValue", "imageOutputBinding", "panel", "$", "brushInfoSender", "mousedown", "offsetCss", "mousemoveResizing", "mouseupResizing", "mousemoveDragging", "mouseupDragging", "mousemoveBrushing", "mouseupBrushing", "mousemove", "r", "onResetImg", "onResize", "disableDrag", "$el", "$img", "ImageOutputBinding", "OutputBinding", "scope", "$", "el", "data", "outputId", "$el", "img", "$img", "opts", "ifUndefined", "strToBool", "getComputedLinkColor", "getStyle", "key", "value", "i", "attrib", "hasOwnProperty", "optsCoordmap", "initCoordmap", "clickInfo", "createClickInfo", "isIE", "IEVersion", "disableDrag", "clickHandler", "createClickHandler", "dblclickHandler", "hoverHandler", "createHoverHandler", "brushHandler", "createBrushHandler", "err", "width", "height", "imageOutputBinding", "import_jquery", "TextOutputBinding", "OutputBinding", "scope", "$", "el", "data", "initOutputBindings", "outputBindings", "BindingRegistry", "TextOutputBinding", "DownloadLinkOutputBinding", "DatatableOutputBinding", "HtmlOutputBinding", "imageOutputBinding", "global", "globalThis", "supportsAdoptingStyleSheets", "ShadowRoot", "ShadyCSS", "nativeShadow", "Document", "prototype", "CSSStyleSheet", "constructionToken", "Symbol", "cssTagCache", "WeakMap", "CSSResult", "cssText", "strings", "safeToken", "this", "Error", "_strings", "styleSheet", "_styleSheet", "cacheable", "length", "get", "replaceSync", "set", "toString", "unsafeCSS", "value", "String", "css", "values", "reduce", "acc", "v", "idx", "adoptStyles", "renderRoot", "styles", "adoptedStyleSheets", "map", "s", "style", "document", "createElement", "nonce", "setAttribute", "textContent", "appendChild", "getCompatibleStyle", "sheet", "rule", "cssRules", "is", "defineProperty", "getOwnPropertyDescriptor", "getOwnPropertyNames", "getOwnPropertySymbols", "getPrototypeOf", "Object", "global", "globalThis", "trustedTypes", "emptyStringForBooleanAttribute", "emptyScript", "polyfillSupport", "reactiveElementPolyfillSupport", "JSCompiler_renameProperty", "prop", "_obj", "defaultConverter", "value", "type", "Boolean", "Array", "JSON", "stringify", "fromValue", "Number", "parse", "notEqual", "old", "defaultPropertyDeclaration", "attribute", "String", "converter", "reflect", "hasChanged", "Symbol", "metadata", "litPropertyMetadata", "WeakMap", "ReactiveElement", "HTMLElement", "initializer", "this", "__prepare", "_initializers", "push", "observedAttributes", "finalize", "__attributeToPropertyMap", "keys", "name", "options", "state", "elementProperties", "set", "noAccessor", "key", "descriptor", "getPropertyDescriptor", "prototype", "get", "v", "call", "oldValue", "requestUpdate", "configurable", "enumerable", "hasOwnProperty", "superCtor", "Map", "finalized", "props", "properties", "propKeys", "p", "createProperty", "attr", "__attributeNameForProperty", "elementStyles", "finalizeStyles", "styles", "isArray", "Set", "flat", "Infinity", "reverse", "s", "unshift", "getCompatibleStyle", "toLowerCase", "constructor", "super", "__instanceProperties", "isUpdatePending", "hasUpdated", "__reflectingProperty", "__initialize", "__updatePromise", "Promise", "res", "enableUpdating", "_$changedProperties", "__saveInstanceProperties", "forEach", "i", "controller", "__controllers", "renderRoot", "isConnected", "hostConnected", "splice", "indexOf", "instanceProperties", "size", "createRenderRoot", "shadowRoot", "attachShadow", "shadowRootOptions", "adoptStyles", "connectedCallback", "c", "_requestedUpdate", "disconnectedCallback", "hostDisconnected", "_old", "_$attributeToProperty", "attrValue", "toAttribute", "removeAttribute", "setAttribute", "ctor", "propName", "getPropertyOptions", "fromAttribute", "initial", "initialValue", "_$changeProperty", "__enqueueUpdate", "has", "__reflectingProperties", "add", "e", "reject", "result", "scheduleUpdate", "performUpdate", "wrapped", "shouldUpdate", "changedProperties", "willUpdate", "hostUpdate", "update", "__markUpdated", "_$didUpdate", "_changedProperties", "hostUpdated", "firstUpdated", "updated", "updateComplete", "getUpdateComplete", "__propertyToAttribute", "mode", "reactiveElementVersions", "global", "globalThis", "trustedTypes", "policy", "createPolicy", "createHTML", "s", "boundAttributeSuffix", "marker", "Math", "random", "String", "slice", "markerMatch", "nodeMarker", "d", "document", "createMarker", "createComment", "isPrimitive", "value", "isArray", "Array", "isIterable", "Symbol", "iterator", "SPACE_CHAR", "textEndRegex", "commentEndRegex", "comment2EndRegex", "tagEndRegex", "RegExp", "singleQuoteAttrEndRegex", "doubleQuoteAttrEndRegex", "rawTextElement", "tag", "type", "strings", "values", "_$litType$", "html", "svg", "noChange", "for", "nothing", "templateCache", "WeakMap", "walker", "createTreeWalker", "trustFromTemplateString", "tsa", "stringFromTSA", "hasOwnProperty", "Error", "getTemplateHtml", "l", "length", "attrNames", "rawTextEndRegex", "regex", "i", "attrName", "match", "attrNameEndIndex", "lastIndex", "exec", "test", "end", "startsWith", "push", "Template", "constructor", "options", "node", "this", "parts", "nodeIndex", "attrNameIndex", "partCount", "el", "createElement", "currentNode", "content", "svgElement", "firstChild", "replaceWith", "childNodes", "nextNode", "nodeType", "hasAttributes", "name", "getAttributeNames", "endsWith", "realName", "statics", "getAttribute", "split", "m", "index", "ctor", "PropertyPart", "BooleanAttributePart", "EventPart", "AttributePart", "removeAttribute", "tagName", "textContent", "emptyScript", "append", "data", "indexOf", "_options", "innerHTML", "resolveDirective", "part", "parent", "attributeIndex", "currentDirective", "__directives", "__directive", "nextDirectiveConstructor", "_$initialize", "_$resolve", "TemplateInstance", "template", "_$parts", "_$disconnectableChildren", "_$template", "_$parent", "parentNode", "_$isConnected", "fragment", "creationScope", "importNode", "partIndex", "templatePart", "ChildPart", "nextSibling", "ElementPart", "_$setValue", "__isConnected", "startNode", "endNode", "_$committedValue", "_$startNode", "_$endNode", "isConnected", "directiveParent", "_$clear", "_commitText", "_commitTemplateResult", "_commitNode", "_commitIterable", "insertBefore", "_insert", "createTextNode", "result", "_$getTemplate", "h", "_update", "instance", "_clone", "get", "set", "itemParts", "itemPart", "item", "start", "from", "_$notifyConnectionChanged", "n", "remove", "element", "fill", "valueIndex", "noCommit", "change", "v", "_commitValue", "setAttribute", "toggleAttribute", "super", "newListener", "oldListener", "shouldRemoveListener", "capture", "once", "passive", "shouldAddListener", "removeEventListener", "addEventListener", "event", "call", "host", "handleEvent", "polyfillSupport", "global", "litHtmlPolyfillSupport", "Template", "ChildPart", "litHtmlVersions", "push", "render", "value", "container", "options", "partOwnerNode", "renderBefore", "part", "endNode", "insertBefore", "createMarker", "_$setValue", "LitElement", "ReactiveElement", "constructor", "this", "renderOptions", "host", "__childPart", "createRenderRoot", "renderRoot", "super", "renderBefore", "firstChild", "changedProperties", "value", "render", "hasUpdated", "isConnected", "update", "connectedCallback", "setConnected", "disconnectedCallback", "noChange", "globalThis", "litElementHydrateSupport", "polyfillSupport", "litElementPolyfillSupport", "globalThis", "litElementVersions", "push", "ShinyClientError", "headline", "message", "buttonStyles", "i", "_ShinyErrorConsole", "s", "headline", "message", "msg", "content", "nodeKey", "node", "newKey", "x", "ShinyErrorConsole", "ShinyErrorMessage", "showShinyClientMessage", "status", "consoleMessage", "Shiny", "sec", "showErrorInClientConsole", "e", "errorMsg", "ShinyClientError", "ShinyClientMessageEvent", "detail", "ev", "resetBrush", "brushId", "shinySetInputValue", "imageOutputBinding", "InputBatchSender", "shinyapp", "nameType", "value", "opts", "callback", "currentData", "InputDeferDecorator", "target", "nameType", "value", "opts", "hasDefinedProperty", "import_jquery", "splitInputNameType", "nameType", "name2", "InputEventDecorator", "target", "nameType", "value", "opts", "evt", "$", "input", "splitInputNameType", "name", "InputNoResendDecorator", "target", "initialValues", "nameType", "value", "opts", "inputName", "inputType", "splitInputNameType", "jsonValue", "values", "cacheValues", "hasDefinedProperty", "name", "InputRateDecorator", "target", "nameType", "value", "opts", "inputName", "splitInputNameType", "mode", "millis", "Invoker", "Debouncer", "Throttler", "name", "addDefaultInputOpts", "opts", "newOpts", "InputValidateDecorator", "target", "nameType", "value", "promiseWithResolvers", "resolve", "reject", "res", "rej", "createInitStatus", "promise", "_resolved", "x", "import_jquery", "OutputBindingAdapter", "el", "binding", "makeResizeFilter", "width", "height", "data", "err", "show", "isJQuery", "value", "valueChangeCallback", "inputs", "binding", "el", "allowDeferred", "id", "type", "opts", "bindingsRegistry", "bindings", "checkValidity", "scope", "duplicateIds", "problems", "idTypes", "counts", "duplicateIdMsg", "messages", "pluralize", "msg", "txtVerb", "txtNoun", "txtIdsWere", "headline", "message", "event", "ShinyClientMessageEvent", "addBinding", "bindingType", "existingBinding", "removeBinding", "index", "num", "word", "bindInputs", "shinyCtx", "inputsRate", "inputBindings", "inputItems", "i", "matches", "j", "$", "effectiveId", "thisCallback", "thisBinding", "thisEl", "ratePolicy", "bindOutputs", "sendOutputHiddenState", "maybeAddThemeObserver", "outputBindings", "$scope", "$el", "bindingAdapter", "OutputBindingAdapter", "shinyAppBindOutput", "Shiny", "sendImageSizeFns", "unbindInputs", "includeSelf", "unbindOutputs", "outputs", "shinyAppUnbindOutput", "_bindAll", "currentInputs", "unbindAll", "bindAll", "currentInputItems", "name", "item", "import_jquery", "show", "html", "deps", "renderDependenciesAsync", "$", "$modal", "e", "shinyUnbindAll", "renderContentAsync", "remove", "$bsModal", "import_jquery", "fadeDuration", "show", "html", "action", "deps", "duration", "id", "closeButton", "type", "randomId", "renderDependenciesAsync", "createPanel", "$notificationInit", "get", "create", "$notification", "newHtml", "$content", "renderContentAsync", "classes", "classVal", "cls", "$close", "addRemovalCallback", "clearRemovalCallback", "remove", "shinyUnbindAll", "$", "ids", "getPanel", "$escape", "$panel", "e", "delay", "removalCallback", "oldRemovalCallback", "import_jquery", "updateTime", "reconnectTime", "$time", "$", "seconds", "showReconnectDialog", "delay", "show", "hideReconnectDialog", "remove", "import_jquery", "AsyncQueue", "p", "resolve", "x", "_updateStateFromRecalculating", "updateStateFromRecalculating_fn", "_updateStateFromFlush", "updateStateFromFlush_fn", "_updateStateFromProgress", "updateStateFromProgress_fn", "_updateStateFromValueOrError", "updateStateFromValueOrError_fn", "_getState", "getState_fn", "_setState", "setState_fn", "OutputProgressReporter", "__privateAdd", "result", "name", "state", "__privateMethod", "message", "isRecalculatingMessage", "isFlushMessage", "isProgressMessage", "status", "id", "persistent", "type", "oldRecalc", "newRecalc", "x", "m", "messageHandlerOrder", "messageHandlers", "customMessageHandlerOrder", "customMessageHandlers", "addMessageHandler", "type", "handler", "addCustomMessageHandler", "typeIdx", "ShinyApp", "AsyncQueue", "OutputProgressReporter", "attempts", "delays", "message", "key", "binding", "$", "show", "$container", "depth", "$progress", "$progressBar", "$progressText", "remove", "initialInput", "socket", "getShinyCreateWebsocket", "protocol", "defaultPath", "isQt", "ws", "hasOpened", "msg", "e", "restarting", "showErrorInClientConsole", "values", "delay", "reloading", "showReconnectDialog", "hideReconnectDialog", "method", "args", "onSuccess", "onError", "blobs", "requestId", "uint32ToBuf", "val", "buffer", "payload", "jsonBuf", "i", "blob", "name", "error", "evt", "value", "id", "scopeComponent", "nsPrefix", "k", "obj", "pair", "scope", "inputs", "hasOwnProperty", "shortName", "conditionals", "el", "condFunc", "condExpr", "scopeExprToFunc", "nsScope", "showing", "data", "msgObj", "len", "typedv", "typebuf", "handlers", "handlerOrder", "msgType", "changed", "recalculating", "$obj", "$escape", "inputBinding", "indirectEval", "request", "shinyOnCustomMessage", "getShinyOnCustomMessage", "setShinyUser", "targets", "renderHtmlAsync", "target", "renderContentAsync", "shinyUnbindAll", "shinyForgetLastInputValue", "getTabset", "$tabset", "getTabContent", "tabsetId", "getTargetTabs", "$tabContent", "dataValue", "$aTag", "$liTag", "$liTags", "$divTags", "$dropdownTabset", "dropdownId", "selector", "$parentTabset", "$fragLi", "$targetLiTag", "dropdown", "getDropdown", "fixupDivId", "index", "getTabIndex", "tabId", "shinyBindAll", "existingTabIds", "$tab", "$dropdownATag", "$uncleTabset", "uncleId", "ensureTabsetHasVisibleTab", "destTabValue", "getFirstTab", "$ul", "tabApplyFunction", "func", "liTags", "div", "removeEl", "$el", "changeVisibility", "what", "path", "oldQS", "oldHash", "relURL", "resetBrush", "fullUrl", "loc", "url", "randomId", "ShinyClass", "inputBindings", "fileInputBinding", "initInputBindings", "outputBindings", "initOutputBindings", "setFileInputBinding", "$escape", "compareVersion", "InputBinding", "OutputBinding", "resetBrush", "show", "remove", "addCustomMessageHandler", "showReconnectDialog", "hideReconnectDialog", "renderDependenciesAsync", "renderDependencies", "renderContentAsync", "renderContent", "renderHtmlAsync", "renderHtml", "createInitStatus", "$", "e", "showErrorInClientConsole", "setShinyObj", "ShinyApp", "shinyapp", "inputBatchSender", "InputBatchSender", "inputsNoResend", "InputNoResendDecorator", "inputsEvent", "InputEventDecorator", "inputsRate", "InputRateDecorator", "inputsDefer", "InputDeferDecorator", "target", "event", "inputs", "InputValidateDecorator", "name", "value", "opts", "newOpts", "addDefaultInputOpts", "shinyBindCtx", "sendOutputHiddenState", "maybeAddThemeObserver", "initDeferredIframes", "scope", "bindAll", "includeSelf", "unbindAll", "initializeInputs", "bindings", "i", "binding", "inputObjects", "j", "$inputObjectJ", "getIdFromEl", "el", "bindingAdapter", "initialValues", "mapValues", "_bindAll", "x", "id", "rect", "getBoundingClientSizeBeforeZoom", "getComputedBgColor", "bgColor", "getStyle", "m", "bgImage", "getComputedFont", "fontFamily", "fontSize", "getComputedLinkColor", "cl", "$el", "observerCallback", "Debouncer", "doSendTheme", "observer", "config", "doSendImageSize", "$this", "isHidden", "sendImageSizeFns", "obj", "lastKnownVisibleOutputs", "doSendOutputHiddenState", "visibleOutputs", "hidden", "evt", "hasDefinedProperty", "sendOutputHiddenStateDebouncer", "filterEventsByNamespace", "namespace", "handler", "args", "namespaceArr", "eventNamespace", "debounce", "bs3classes", "idx", "classname", "pixelRatio", "singletonText", "registerNames", "dependencyText", "depStr", "match", "registerDependency", "windowUserAgent", "import_jquery", "shinyAppConfig", "shinyShinyApp", "initReactlog", "$", "e", "url", "result", "show", "Shiny", "init", "ShinyClass", "setUserAgent", "windowUserAgent", "determineBrowserInfo", "trackHistory", "disableFormSubmission", "initReactlog", "init"]
}
