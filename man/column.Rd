% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bootstrap-layout.R
\name{fluidRow}
\alias{fluidRow}
\alias{fixedRow}
\alias{column}
\title{Responsive row-column based layout}
\usage{
fluidRow(...)

fixedRow(...)

column(width, ..., offset = 0)
}
\arguments{
\item{...}{UI elements (i.e., \link{tags}). For \code{fluidRow()}, \code{...} should be a set of \code{column()}s.}

\item{width}{The grid width of the column (must be between 1 and 12). When
the device width is small (e.g., the viewer is on a mobile phone), the
width is always 12. For more control over these responsive breakpoints, use
Bootstrap's grid system more directly (e.g., \code{fluidRow(div(class = "col-lg-2", ...))}).}

\item{offset}{The number of columns to offset this column from the end of the
previous column.}
}
\value{
A UI element (i.e., \link{tags}).
}
\description{
Layout UI components using Bootstrap's grid layout system. Use
\code{fluidRow()} to group elements that should appear on the same line (if the
browser has adequate width) and \code{column()} to define how much horizontal
space within a 12-unit wide grid each on of these elements should occupy. See
the \href{https://shiny.rstudio.com/articles/layout-guide.html}{layout guide} for
more context and examples.
}
\details{
To work properly, these functions need \href{https://getbootstrap.com}{Bootstrap}
included on the page. Since most Shiny apps use \code{\link[=bootstrapPage]{bootstrapPage()}}
under-the-hood, this is usually the case, but custom page containers (i.e.,
\code{\link[=htmlTemplate]{htmlTemplate()}}) may need to explicitly include \code{\link[=bootstrapLib]{bootstrapLib()}}
dependencies.
}
\examples{
## Only run examples in interactive R sessions
if (interactive()) {

ui <- fluidPage(
  fluidRow(
    column(4,
      sliderInput("obs", "Number of observations:",
                  min = 1, max = 1000, value = 500)
    ),
    column(8,
      plotOutput("distPlot")
    )
  )
)

server <- function(input, output) {
  output$distPlot <- renderPlot({
    hist(rnorm(input$obs))
  })
}

shinyApp(ui, server)

ui <- fluidPage(
  fluidRow(
    column(width = 4, "4"),
    column(width = 3, offset = 2, "3 offset 2")
  )
)
shinyApp(ui, server = function(input, output) { })
}
}
\seealso{
\code{\link[=fluidPage]{fluidPage()}}
}
