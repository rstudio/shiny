% Generated by roxygen2 (4.0.0): do not edit by hand
\name{horizontalLayout}
\alias{horizontalLayout}
\title{Lay out UI elements horizontally}
\usage{
horizontalLayout(..., valign = c("top", "middle", "bottom"),
  cellArgs = list())
}
\arguments{
\item{...}{Unnamed arguments will become child elements of the layout. Named
arguments will become HTML attributes on the outermost tag.}

\item{valign}{The vertical alignment of the children.}

\item{cellArgs}{Any additional attributes that should be used for each cell
  of the layout.}
}
\description{
Create a container that lays out elements next to each other.
}
\details{
This layout is implemented using tables. These days, using HTML tables for
layout purposes is generally frowned upon by experienced web designers as not
being "semantically correct", but it's the only reasonable way to provide
decent vertical alignment options.

The layout will create a table with a single row (\code{tr}), and a cell
(\code{td}) within that row for each of the child elements. By default, the
width of the cells will be set to (100 / number of children)\%. You can
override this by including a specific \code{width} value in \code{cellArgs},
but you can't customize widths on a per-column basis.
}
\examples{
horizontalLayout(
  numericInput("rows", "How many rows?", 5),
  selectInput("letter", "Which letter?", LETTERS),
  sliderInput("value", "What value?", 0, 100, 50)
)
}
\seealso{
\code{\link{verticalLayout}}

#'
}

